[{"F:\\Code\\shopPro\\frontend\\src\\index.js":"1","F:\\Code\\shopPro\\frontend\\src\\App.js":"2","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js":"3","F:\\Code\\shopPro\\frontend\\src\\components\\Header.js":"4","F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js":"5","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js":"6","F:\\Code\\shopPro\\frontend\\src\\components\\Product.js":"7","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js":"8","F:\\Code\\shopPro\\frontend\\src\\store.js":"9","F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js":"10","F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js":"11","F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js":"12","F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js":"13","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js":"14","F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js":"15","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js":"16","F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js":"17","F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js":"18","F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js":"19","F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js":"20","F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js":"21","F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js":"22","F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js":"23","F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js":"24","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js":"25","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js":"26","F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js":"27","F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js":"28","F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js":"30","F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js":"31","F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js":"32","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js":"33","F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js":"34","F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js":"35","F:\\Code\\shopPro\\frontend\\src\\screens\\UserListScreen.js":"36","F:\\Code\\shopPro\\frontend\\src\\screens\\UserEditScreen.js":"37","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductListScreen.js":"38","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductEditScreen.js":"39","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderListScreen.js":"40","F:\\Code\\shopPro\\frontend\\src\\components\\ActiveRating.js":"41","F:\\Code\\shopPro\\frontend\\src\\components\\ButtonComponent.js":"42","F:\\Code\\shopPro\\frontend\\src\\components\\Step.js":"43","F:\\Code\\shopPro\\frontend\\src\\components\\SearchBox.js":"44","F:\\Code\\shopPro\\frontend\\src\\components\\Paginate.js":"45","F:\\Code\\shopPro\\frontend\\src\\components\\ProductCarousel.js":"46","F:\\Code\\shopPro\\frontend\\src\\components\\Meta.js":"47","F:\\Code\\shopPro\\frontend\\src\\screens\\MyOrdersScreen.js":"48","F:\\Code\\shopPro\\frontend\\src\\configAuth.js":"49","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderEditScreen.js":"50","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressShipping.js":"51","F:\\Code\\shopPro\\frontend\\src\\components\\ImagePay.js":"52","F:\\Code\\shopPro\\frontend\\src\\reducers\\categoriesReducers.js":"53","F:\\Code\\shopPro\\frontend\\src\\constants\\categoriesConstants.js":"54","F:\\Code\\shopPro\\frontend\\src\\screens\\CategoriesListScreen.js":"55","F:\\Code\\shopPro\\frontend\\src\\actions\\categoryAction.js":"56","F:\\Code\\shopPro\\frontend\\src\\screens\\CategoryEditScreen.js":"57","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductCreateScreen.js":"58","F:\\Code\\shopPro\\frontend\\src\\components\\test.js":"59","F:\\Code\\shopPro\\frontend\\src\\components\\SkeletonEffect.js":"60","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductOfCategoryScreen.js":"61","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressLine.js":"62","F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js":"63","F:\\Code\\shopPro\\frontend\\src\\components\\FilterNav.js":"64","F:\\Code\\shopPro\\frontend\\src\\components\\Banner.js":"65"},{"size":629,"mtime":1619602010772,"results":"66","hashOfConfig":"67"},{"size":5227,"mtime":1619744677501,"results":"68","hashOfConfig":"67"},{"size":362,"mtime":499162500000,"results":"69","hashOfConfig":"67"},{"size":22967,"mtime":1619833640525,"results":"70","hashOfConfig":"67"},{"size":11338,"mtime":1619597581543,"results":"71","hashOfConfig":"67"},{"size":2185,"mtime":1619601660229,"results":"72","hashOfConfig":"67"},{"size":1545,"mtime":1619589307853,"results":"73","hashOfConfig":"67"},{"size":18409,"mtime":1619414811404,"results":"74","hashOfConfig":"67"},{"size":3371,"mtime":1619832661561,"results":"75","hashOfConfig":"67"},{"size":5546,"mtime":1618734151819,"results":"76","hashOfConfig":"67"},{"size":2288,"mtime":1618733779615,"results":"77","hashOfConfig":"67"},{"size":7851,"mtime":1618815155260,"results":"78","hashOfConfig":"67"},{"size":567,"mtime":1615791677731,"results":"79","hashOfConfig":"67"},{"size":689,"mtime":1619547659359,"results":"80","hashOfConfig":"67"},{"size":10124,"mtime":1619687726268,"results":"81","hashOfConfig":"67"},{"size":1184,"mtime":1615605660974,"results":"82","hashOfConfig":"67"},{"size":1281,"mtime":1615605733344,"results":"83","hashOfConfig":"67"},{"size":238,"mtime":1612540677571,"results":"84","hashOfConfig":"67"},{"size":3523,"mtime":1616753192848,"results":"85","hashOfConfig":"67"},{"size":1770,"mtime":1616087264540,"results":"86","hashOfConfig":"67"},{"size":6986,"mtime":1619253971681,"results":"87","hashOfConfig":"67"},{"size":402,"mtime":1612087628650,"results":"88","hashOfConfig":"67"},{"size":6326,"mtime":1619834447670,"results":"89","hashOfConfig":"67"},{"size":7347,"mtime":1619533959083,"results":"90","hashOfConfig":"67"},{"size":24197,"mtime":1619592778895,"results":"91","hashOfConfig":"67"},{"size":7019,"mtime":1619745184710,"results":"92","hashOfConfig":"67"},{"size":1643,"mtime":1612593111433,"results":"93","hashOfConfig":"67"},{"size":2633,"mtime":1619879100307,"results":"94","hashOfConfig":"67"},{"size":7777,"mtime":1619795246263,"results":"95","hashOfConfig":"67"},{"size":5106,"mtime":1619835091253,"results":"96","hashOfConfig":"67"},{"size":1928,"mtime":1619834933597,"results":"97","hashOfConfig":"67"},{"size":7309,"mtime":1619878397795,"results":"98","hashOfConfig":"67"},{"size":14074,"mtime":1619879212796,"results":"99","hashOfConfig":"67"},{"size":855,"mtime":1619547664611,"results":"100","hashOfConfig":"67"},{"size":311,"mtime":1619377332627,"results":"101","hashOfConfig":"67"},{"size":14956,"mtime":1617434431370,"results":"102","hashOfConfig":"67"},{"size":3358,"mtime":1614437771361,"results":"103","hashOfConfig":"67"},{"size":17846,"mtime":1617764524144,"results":"104","hashOfConfig":"67"},{"size":9647,"mtime":1619575870525,"results":"105","hashOfConfig":"67"},{"size":16538,"mtime":1617556775821,"results":"106","hashOfConfig":"67"},{"size":995,"mtime":1618210153490,"results":"107","hashOfConfig":"67"},{"size":1297,"mtime":1619197232259,"results":"108","hashOfConfig":"67"},{"size":3613,"mtime":1619707633985,"results":"109","hashOfConfig":"67"},{"size":1143,"mtime":1618021367683,"results":"110","hashOfConfig":"67"},{"size":778,"mtime":1614826321511,"results":"111","hashOfConfig":"67"},{"size":1725,"mtime":1616170962837,"results":"112","hashOfConfig":"67"},{"size":514,"mtime":1615015305728,"results":"113","hashOfConfig":"67"},{"size":5984,"mtime":1619879983799,"results":"114","hashOfConfig":"67"},{"size":393,"mtime":1616226016215,"results":"115","hashOfConfig":"67"},{"size":13250,"mtime":1617432663905,"results":"116","hashOfConfig":"67"},{"size":5057,"mtime":1617288730631,"results":"117","hashOfConfig":"67"},{"size":514,"mtime":1617284362928,"results":"118","hashOfConfig":"67"},{"size":3079,"mtime":1617764918779,"results":"119","hashOfConfig":"67"},{"size":1148,"mtime":1617555469184,"results":"120","hashOfConfig":"67"},{"size":19132,"mtime":1619795992741,"results":"121","hashOfConfig":"67"},{"size":4859,"mtime":1617764862267,"results":"122","hashOfConfig":"67"},{"size":3395,"mtime":1617534903289,"results":"123","hashOfConfig":"67"},{"size":9117,"mtime":1617763767260,"results":"124","hashOfConfig":"67"},{"size":0,"mtime":1617780641945,"results":"125","hashOfConfig":"67"},{"size":251,"mtime":1617900546652,"results":"126","hashOfConfig":"67"},{"size":5969,"mtime":1618852699704,"results":"127","hashOfConfig":"67"},{"size":855,"mtime":1618203083711,"results":"128","hashOfConfig":"67"},{"size":1802,"mtime":1611471571179,"results":"129","hashOfConfig":"67"},{"size":6372,"mtime":1618852953383,"results":"130","hashOfConfig":"67"},{"size":1223,"mtime":1619594088959,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"1shtzj8",{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"134"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"134"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"134"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"134"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"134"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"134"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"134"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"F:\\Code\\shopPro\\frontend\\src\\index.js",[],["285","286"],"F:\\Code\\shopPro\\frontend\\src\\App.js",["287"],"import { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { BackTop } from 'antd'\nimport React, { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { getUserDetails } from './actions/userActions'\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport CartScreen from './screens/CartScreen.js'\nimport CategoriesListScreen from './screens/CategoriesListScreen'\nimport CategoryEditScreen from './screens/CategoryEditScreen'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport MyOrdersScreen from './screens/MyOrdersScreen'\nimport OrderEditScreen from './screens/OrderEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport OrderScreen from './screens/OrderScreen.js'\nimport { PaymentScreen } from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport ProductCreateScreen from './screens/ProductCreateScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductOfCategoryScreen from './screens/ProductOfCategoryScreen'\nimport ProductScreen from './screens/ProductScreen.js'\nimport ProfileScreen from './screens/ProfileScreen'\nimport RegisterScreen from './screens/RegisterScreen.js'\nimport { ShippingScreen } from './screens/ShippingScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport UserListScreen from './screens/UserListScreen'\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: `\"Quicksand\", \"Roboto\", \"Arial\", sans-serif`,\n  },\n})\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user } = userDetails\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(getUserDetails(userInfo._id))\n    }\n  }, [dispatch, userInfo])\n\n  return (\n    <>\n      <BackTop />\n      <ThemeProvider theme={THEME}>\n        <Router>\n          <Header />\n          <main className='mb-4'>\n            <Route path='/' component={HomeScreen} exact />\n            <Route path='/search/:keyword' component={HomeScreen} exact />\n\n            <Route\n              path='/admin/productlist'\n              component={ProductListScreen}\n              exact\n            />\n\n            <div className='ml-5 mr-5 mt-3'>\n              <Route path='/profile' component={ProfileScreen} exact />\n              <Route\n                path='/admin/categorieslist'\n                component={CategoriesListScreen}\n                exact\n              />\n\n              <Route path='/cart/:id?' component={CartScreen} exact />\n\n              <Route\n                path='/admin/orderlist'\n                component={OrderListScreen}\n                exact\n              />\n\n              <Route\n                path='/admin/order/:id/edit'\n                component={OrderEditScreen}\n                exact\n              />\n\n              <Route\n                path='/admin/product/:id/edit'\n                component={ProductEditScreen}\n                exact\n              />\n\n              <Route\n                path='/admin/user/:id/edit'\n                component={UserEditScreen}\n                exact\n              />\n\n              <Route\n                path='/product/:id/category'\n                component={ProductOfCategoryScreen}\n                exact\n              />\n\n              <Route\n                path='/admin/product/create'\n                component={ProductCreateScreen}\n                exact\n              />\n\n              <Route path='/product/:id' component={ProductScreen} exact />\n              <Route path='/order/:id' component={OrderScreen} exact />\n              <Route path='/myorders' component={MyOrdersScreen} exact />\n              <Route path='/register' component={RegisterScreen} exact />\n              <Route path='/shipping' component={ShippingScreen} exact />\n              <Route path='/login' component={LoginScreen} exact />\n              <Route path='/placeorder' component={PlaceOrderScreen} exact />\n            </div>\n            <Container>\n              <Route\n                path='/admin/category/:id/edit'\n                component={CategoryEditScreen}\n                exact\n              />\n              <Route path='/payment' component={PaymentScreen} exact />\n\n              <Route path='/admin/userlist' component={UserListScreen} exact />\n\n              <Route\n                path='/admin/productlist/:pageNumber'\n                component={ProductListScreen}\n                exact\n              />\n\n              <Route path='/page/:pageNumber' component={HomeScreen} exact />\n              <Route\n                path='/search/:keyword/page/:pageNumber'\n                component={HomeScreen}\n                exact\n              />\n            </Container>\n          </main>\n          <Footer />\n        </Router>\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Header.js",["288","289","290","291","292","293","294","295","296","297","298","299","300"],"F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js",["301","302","303"],"import { Link } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Col, Container, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { black } from 'colors'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  link: {\r\n    color: black,\r\n    '&:hover': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n    '&:active': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n    '&:visited': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}))\r\n\r\nFooter.propTypes = {}\r\n\r\nfunction Footer(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <footer style={{ backgroundColor: '#edfead' }}>\r\n      <div className='pl-5 pb-4  pr-5'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Hỗ trợ</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Hình thức giao hàng\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Hình thức thanh toán\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Chính sách đổi trả\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Chính sách bảo hành\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Thông tin</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Tuyển dụng\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Góp ý\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Giải đáp thắc mắc\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Về Natural Food</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Giới thiệu\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Liên hệ\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={5}>\r\n            <ListGroup>\r\n              <div className='d-flex justify-content-center'>\r\n                <Image\r\n                  src='/logo/logo_white.png'\r\n                  style={{ width: '9rem', height: '8rem', zIndex: '0' }}\r\n                />\r\n              </div>\r\n\r\n              <div className='d-flex justify-content-evenly'>\r\n                <Link\r\n                  href='https://mail.google.com/'\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/gmail-new.png' />\r\n                </Link>\r\n                <Link\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                  href='https://www.facebook.com/'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/facebook-new.png' />\r\n                </Link>\r\n                <Link\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                  href='https://www.twitter.com/'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/twitter.png' />\r\n                </Link>\r\n              </div>\r\n\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Địa chỉ: </strong>\r\n                    <p className='mb-0 pl-1'>\r\n                      22 Lý Chiêu Hoàng, Phường 10, Quận 6, TP HCM\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Email: </strong>\r\n                    <p className='mb-0 pl-1'>tuvan_online@naturalfood.com.vn</p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Số điện thoại: </strong>\r\n                    <p className='mb-0 pl-1'>(028) 38 753 443</p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Hotline: </strong>\r\n                    <p className='mb-0 pl-1'>\r\n                      19002126 ( cước phí: 3000đ/phút )\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <p className='mb-0'>\r\n                      Thời gian tư vấn: Từ 07h30 đến 12h15, 13h15 đến 21h30 các\r\n                      ngày trong tuần ( Trừ ngày Lễ, Tết)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js",["304","305"],"import React, { useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Banner from '../components/Banner'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Paginate from '../components/Paginate'\r\nimport Product from '../components/Product'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nfunction HomeScreen({ match, history }) {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, pages, page } = productList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { user } = userDetails\r\n\r\n  useEffect(() => {\r\n    // dispatch(getUserDetails(userInfo._id))\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {/* {!keyword && (\r\n        <ProductCarousel className='m-0' style={{ width: '100vh' }} />\r\n      )} */}\r\n      {!keyword && <Banner />}\r\n\r\n      <h3 className='ml-5 mt-4 mb-0'>Sản phẩm</h3>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row className='ml-5 mr-5'>\r\n            {products?.map((\r\n              product // phai co ? de kiem tra product === null\r\n            ) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <div className='d-flex justify-content-center'>\r\n            <Paginate\r\n              pages={pages}\r\n              page={page}\r\n              keyword={keyword ? keyword : ''}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Product.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js",["306"],"import Avatar from '@material-ui/core/Avatar'\r\nimport Buttonn from '@material-ui/core/Button'\r\nimport ButtonGroupp from '@material-ui/core/ButtonGroup'\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport {\r\n  createProductReview,\r\n  listProductDetails,\r\n} from '../actions/productActions.js'\r\nimport ActiveRating from '../components/ActiveRating'\r\nimport Announcement from '../components/Announcement.js'\r\nimport MessageSuccess from '../components/MessageSuccess.js'\r\nimport ButtonComponent from '../components/ButtonComponent'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Rating from '../components/Rating'\r\nimport SkeletonEffect from '../components/SkeletonEffect'\r\nimport { Skeleton } from 'antd'\r\nimport { format, utcToZonedTime } from 'date-fns-tz'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants.js'\r\nimport ProgressLine from '../components/ProgressLine.js'\r\n\r\nformat(new Date(2014, 1, 11), 'dd/MM/yyyy')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n\r\n    '& .MuiInputBase-input': {\r\n      padding: theme.spacing(1),\r\n    },\r\n\r\n    '& .MuiFilledInput-input': {\r\n      padding: theme.spacing(1),\r\n    },\r\n\r\n    '& .MuiFilledInput-inputMarginDense': {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n    textAlign: 'center',\r\n  },\r\n  form: {\r\n    width: 1150,\r\n  },\r\n}))\r\n\r\nfunction formatPrice(n, currency) {\r\n  return n.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + currency\r\n}\r\n\r\nfunction ProductScreen({ history, match }) {\r\n  const classes = useStyles()\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n  const [hover, setHover] = React.useState(-1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    loading: loadingProductReview,\r\n    success: successProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment(' ')\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match, successProductReview])\r\n\r\n  const submitHandle = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n    toast.success(\r\n      <div>\r\n        <CheckCircleOutlineIcon className='pr-1' fontSize='large' />\r\n        Đã đánh giá thành công\r\n      </div>,\r\n      {\r\n        className: 'Toastify__toast--success',\r\n        position: 'top-right',\r\n        autoClose: 2500,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      }\r\n    )\r\n  }\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {successProductReview && <MessageSuccess variant='Success' />}\r\n      <div className='ml-4 mr-4'>\r\n        <Link className='btn btn-light my-3 rounded-pill' to='/'>\r\n          <i className='fas fa-arrow-left pr-2'></i>\r\n          Quay lại\r\n        </Link>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Meta title={product.name} />\r\n            <Row className='container-productGreen mb-2 rounded shadow card_color'>\r\n              <Col md={5} className='p-3 img-productGreen'>\r\n                <Image\r\n                  className='rounded'\r\n                  src={product.image}\r\n                  alt={product.name}\r\n                  fluid\r\n                />\r\n              </Col>\r\n\r\n              <Col md={7} className='text-left p-1'>\r\n                <Row className='pl-4 pr-2'>\r\n                  <ListGroup variant='flush' className='pr-3'>\r\n                    <ListGroup.Item className='border-0 pb-0'>\r\n                      <strong>\r\n                        <h5 className='border-0 pb-0'>{product.name}</h5>\r\n                      </strong>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className='border-0 pb-0'>\r\n                      <Rating\r\n                        value={product.rating}\r\n                        text={`(${product.numReviews} đánh giá)`}\r\n                      />\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item className='text-justify'>\r\n                      <p>{product.description}</p>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n\r\n                  <ListGroup variant='flush' className='border-0 pt-0'>\r\n                    <div className='group-items pt-2 pb-2 ml-4 mr-4 rounded shadow'>\r\n                      <ListGroup.Item className='border-0 pt-0 pb-0 mb-0 pr-0 group-items'>\r\n                        <h2 className='text-lowercase'>\r\n                          {product.price && formatPrice(product.price, 'đ')}\r\n                        </h2>\r\n                      </ListGroup.Item>\r\n\r\n                      <ListGroup.Item className='border-0 group-items'>\r\n                        {product.countInStock > 0 ? (\r\n                          <div className='d-flex justify-content-start align-items-center'>\r\n                            <p className='mb-0'>Trạng thái:</p>\r\n                            <p className='mb-0 fw-bold ml-2 text-success'>\r\n                              Còn hàng\r\n                            </p>\r\n                          </div>\r\n                        ) : (\r\n                          <div className='d-flex justify-content-start align-items-center'>\r\n                            <p className='mb-0'>Trạng thái:</p>\r\n                            <Image src='https://img.icons8.com/fluent/35/000000/close-sign.png' />\r\n                            <p className='mb-0 fw-bold ml-2 danger'>Hết hàng</p>\r\n                          </div>\r\n                        )}\r\n                      </ListGroup.Item>\r\n\r\n                      {product.countInStock > 0 && (\r\n                        <ListGroup.Item className='border-0 pt-0 pb-0 group-items '>\r\n                          <Row>\r\n                            <Col md={4} className='d-flex align-items-center'>\r\n                              <p className='mb-0'>Số lượng:</p>\r\n                            </Col>\r\n                            <Col md={4} className='d-flex'>\r\n                              <ButtonGroupp size='small' aria-label='small '>\r\n                                <Buttonn\r\n                                  aria-label='reduce'\r\n                                  size='small'\r\n                                  color='primary'\r\n                                  onClick={() => {\r\n                                    setQty(Math.max(qty - 1, 1))\r\n                                  }}\r\n                                  variant='contained'\r\n                                >\r\n                                  <RemoveIcon fontSize='small' />\r\n                                </Buttonn>\r\n                                {/* {qty === 0 ? (\r\n                                <Buttonn variant='contained'>1</Buttonn>\r\n                              ) : (\r\n                                <Buttonn variant='contained'>{qty}</Buttonn>\r\n                              )} */}\r\n                                <div>\r\n                                  <TextField\r\n                                    className={classes.root}\r\n                                    id='filled-size-small'\r\n                                    value={qty}\r\n                                    variant='filled'\r\n                                    size='small'\r\n                                    onChange={(e) => setQty(e.target.value)}\r\n                                  />\r\n                                </div>\r\n                                <Buttonn\r\n                                  aria-label='increase'\r\n                                  size='small'\r\n                                  onClick={() => {\r\n                                    setQty(qty + 1)\r\n                                  }}\r\n                                  variant='contained'\r\n                                  color='primary'\r\n                                >\r\n                                  <AddIcon fontSize='small' />\r\n                                </Buttonn>\r\n                              </ButtonGroupp>\r\n                            </Col>\r\n                          </Row>\r\n                        </ListGroup.Item>\r\n                      )}\r\n                    </div>\r\n\r\n                    <ListGroup.Item className='ml-4 pl-0 pr-0 pb-0 mr-4'>\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        className='btn-block btn_color rounded-pill'\r\n                        type='button'\r\n                        disabled={product.countInStock === 0}\r\n                        style={{ fontSize: '1em', width: '20rem' }}\r\n                      >\r\n                        <AddShoppingCartIcon />\r\n                        <strong className='pl-1 '>Thêm vào giỏ hàng</strong>\r\n                        <div className='wave'></div>\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <Row>\r\n                <Col className='mt-3 p-3 pl-5 pr-5 background-light rounded shadow card_color'>\r\n                  <h5 className='text-uppercase'>Đánh giá sản phẩm</h5>\r\n                  {product.reviews.length === 0 && (\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <Announcement variant='warning'>\r\n                          Không có đánh giá{' '}\r\n                          <Image src='https://img.icons8.com/fluent/24/000000/box-important.png' />\r\n                        </Announcement>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                  <div\r\n                    className=' rounded text-center circle-rate pt-2 pb-1 ml-3 mb-2'\r\n                    style={{ width: '14rem' }}\r\n                  >\r\n                    <h5 className=''>Điểm</h5>\r\n                    <h4 className='mb-0'>{product.rating + ' trên 5'}</h4>\r\n                  </div>\r\n\r\n                  <ListGroup variant='flush'>\r\n                    {loadingProductReview ? (\r\n                      <>\r\n                        {/* <MessageSuccess variant='Success' /> */}\r\n                        <Skeleton avatar paragraph={{ rows: 1 }} />\r\n                      </>\r\n                    ) : (\r\n                      product.reviews.map((review) => (\r\n                        <ListGroup.Item key={review._id}>\r\n                          <div className='d-flex justify-content-start'>\r\n                            {/* <Row>\r\n                        <Col md={1} className=''> */}\r\n                            <div className='pr-2'>\r\n                              {review ? (\r\n                                <Image\r\n                                  className='rounded-circle'\r\n                                  src={user.avatar}\r\n                                  style={{ height: '2rem', width: '2rem' }}\r\n                                />\r\n                              ) : (\r\n                                <Avatar className={classes.orange}>\r\n                                  {review.name.substring(0, 1)}\r\n                                </Avatar>\r\n                              )}\r\n                            </div>\r\n                            {/* </Col>\r\n                        <Col> */}\r\n                            <div>\r\n                              <div className='d-flex'>\r\n                                <h5 className='mb-0 text-capitalize'>\r\n                                  {review.name}\r\n                                </h5>\r\n                                <span className='pl-2'>\r\n                                  <Rating value={review.rating} />\r\n                                </span>\r\n                              </div>\r\n                              <div\r\n                                style={{\r\n                                  fontWeight: '200',\r\n                                  color: 'gray',\r\n                                  fontSize: '0.65rem',\r\n                                }}\r\n                              >\r\n                                <p className='mb-1'>\r\n                                  {format(\r\n                                    new utcToZonedTime(\r\n                                      review.createdAt,\r\n                                      'Asia/Ho_Chi_Minh'\r\n                                    ),\r\n                                    'HH:mm:ss - MM/dd/yyyy',\r\n                                    { timeZone: 'Asia/Ho_Chi_Minh' }\r\n                                  )}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            {/* </Col>\r\n                      </Row> */}\r\n                          </div>\r\n                          <strong\r\n                            className='ml-3'\r\n                            style={{ fontWeight: '500', color: 'black' }}\r\n                          >\r\n                            {review.comment}\r\n                          </strong>\r\n                        </ListGroup.Item>\r\n                      ))\r\n                    )}\r\n\r\n                    <ListGroup.Item shadow>\r\n                      {loadingProductReview && <ProgressLine />}\r\n                      <h5>\r\n                        ĐÁNH GIÁ VÀ BÌNH LUẬN{' '}\r\n                        <Image src='https://img.icons8.com/fluent/24/000000/favorite-chat.png' />\r\n                      </h5>\r\n\r\n                      {errorProductReview && (\r\n                        <Message>{errorProductReview}</Message>\r\n                      )}\r\n                      {userInfo ? (\r\n                        <Form onSubmit={submitHandle}>\r\n                          <Form.Group controlId='rating'>\r\n                            <Form.Label as='h5' className='text-capitalize'>\r\n                              Đánh giá\r\n                            </Form.Label>\r\n                            <ActiveRating\r\n                              value={rating}\r\n                              hover={hover}\r\n                              setValue={setRating}\r\n                              setHover={setHover}\r\n                              size='large'\r\n                            />\r\n                          </Form.Group>\r\n\r\n                          <Form.Group\r\n                            controlId='comment'\r\n                            className={classes.root}\r\n                          >\r\n                            <TextField\r\n                              className={classes.form}\r\n                              id='outlined-multiline-static'\r\n                              label='Bình luận'\r\n                              multiline\r\n                              rows={2}\r\n                              value={comment}\r\n                              // defaultValue='Default Value'\r\n                              // variant='outlined'\r\n                              onChange={(e) => setComment(e.target.value)}\r\n                            />\r\n                          </Form.Group>\r\n                          <ButtonComponent\r\n                            type='submit'\r\n                            color='secondary'\r\n                            size='large'\r\n                            value='GỬI'\r\n                            disabled={loadingProductReview}\r\n                            endIcon={<SendIcon />}\r\n                          ></ButtonComponent>\r\n                          <ToastContainer />\r\n                        </Form>\r\n                      ) : (\r\n                        <Announcement\r\n                          variant='dark'\r\n                          style={{ color: '#82FF9E' }}\r\n                        >\r\n                          Vui lòng{' '}\r\n                          <Link\r\n                            to='/login'\r\n                            style={{\r\n                              color: '#5FAD41',\r\n                              textDecoration: 'none',\r\n                              fontWeight: '700',\r\n                            }}\r\n                          >\r\n                            Đăng nhập\r\n                          </Link>{' '}\r\n                          để đánh giá\r\n                        </Announcement>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\store.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js",["307","308"],"import { useState } from 'react'\r\nimport { css } from '@emotion/core'\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`\r\n\r\nfunction Loader() {\r\n  let [loading, setLoading] = useState(true)\r\n  let [color, setColor] = useState('orange')\r\n\r\n  return (\r\n    <div className='sweet-loading text-center'>\r\n      <ClipLoader color={color} loading={loading} css={override} size={60} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js",["309","310","311","312","313"],"import Buttonn from '@material-ui/core/Button'\r\nimport ButtonGroupp from '@material-ui/core/ButtonGroup'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport React, { useEffect } from 'react'\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions.js'\r\nimport { getUserDetails } from '../actions/userActions.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(0),\r\n    },\r\n\r\n    '& .MuiInputBase-input': {\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    '& .MuiFilledInput-input': {\r\n      padding: theme.spacing(2),\r\n    },\r\n\r\n    '& .MuiFilledInput-inputMarginDense': {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n}))\r\n\r\nfunction format(n) {\r\n  return n.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + 'đ'\r\n}\r\n\r\nexport const CartScreen = ({ match, location, history }) => {\r\n  const classes = useStyles()\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  // console.log(cartItems.product)\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty, userInfo])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  // const test = (e) => {\r\n  //   const value = e.target.value\r\n  //   if (parseInt(value) === 0) {\r\n  //     alert('sai')\r\n  //   }\r\n  //   console.log(value)\r\n  // }\r\n\r\n  return (\r\n    <Col>\r\n      {/* <Link className='btn btn-light my-3 rounded-pill' to='/'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link> */}\r\n\r\n      <Row>\r\n        <Col md={8} className='p-0 pr-4 mt-3 text-uppercase'>\r\n          {cartItems.length === 0 ? (\r\n            // <Announcement variant='danger'>\r\n            <>\r\n              {/* <Row>\r\n                <Col className='mb-2'> */}\r\n              <div className='mb-1'>\r\n                <Link to='/'>\r\n                  <Button className='text-uppercase btn_color rounded-pill'>\r\n                    Shop now\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n              {/* </Col>\r\n                <Col md={12}> */}\r\n              <div>\r\n                <Image className=' p-5' src='/images/cart_empty.png' fluid />\r\n              </div>\r\n              {/* </Col>\r\n              </Row> */}\r\n            </>\r\n          ) : (\r\n            // </Announcement>\r\n            <ListGroup variant='flush'>\r\n              <h3>Giỏ hàng</h3>\r\n              {cartItems.map((item) => (\r\n                <ListGroup.Item\r\n                  key={item.product}\r\n                  className='border-0 mt-1 shadow card_color'\r\n                  rounded\r\n                >\r\n                  <h6>\r\n                    {item.brand} <i class='fas fa-angle-right'></i>\r\n                  </h6>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none  product-card-green'\r\n                      >\r\n                        <Image src={item.image} alt={item.name} fluid />\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      md={4}\r\n                      className='text-lowercase text-capitalize d-flex align-items-center'\r\n                    >\r\n                      <Link\r\n                        to={`/product/${item.product}`}\r\n                        className='text-decoration-none'\r\n                      >\r\n                        <p className='mb-0' style={{ color: '#343a40' }}>\r\n                          {item.name}\r\n                        </p>\r\n                      </Link>\r\n                    </Col>\r\n\r\n                    <Col\r\n                      md={3}\r\n                      className='text-lowercase d-flex align-items-center'\r\n                    >\r\n                      <h4 className='text-lowercase'>{format(item.price)}</h4>\r\n                    </Col>\r\n\r\n                    <Col md={2} className='d-flex align-items-center'>\r\n                      <ButtonGroupp size='small' aria-label='small '>\r\n                        <Buttonn\r\n                          aria-label='reduce'\r\n                          size='small'\r\n                          color='secondary'\r\n                          onClick={() =>\r\n                            item.qty !== 0\r\n                              ? dispatch(\r\n                                  addToCart(\r\n                                    item.product,\r\n                                    Math.max(item.qty - 1, 1)\r\n                                  )\r\n                                )\r\n                              : () => removeFromCartHandler(item.product)\r\n                          }\r\n                          variant='contained'\r\n                        >\r\n                          <RemoveIcon fontSize='small' />\r\n                        </Buttonn>\r\n\r\n                        {/* <Buttonn variant='contained'>{item.qty}</Buttonn> */}\r\n                        <div>\r\n                          <TextField\r\n                            className={classes.root}\r\n                            id='filled-size-small'\r\n                            value={item.qty}\r\n                            variant='filled'\r\n                            size='small'\r\n                            onChange={(e) =>\r\n                              Number(e.target.value) !== 0\r\n                                ? dispatch(\r\n                                    addToCart(\r\n                                      item.product,\r\n                                      Number(e.target.value)\r\n                                    )\r\n                                  )\r\n                                : dispatch(\r\n                                    addToCart(\r\n                                      item.product,\r\n                                      Number((e.target.value = ''))\r\n                                    )\r\n                                  )\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <Buttonn\r\n                          aria-label='increase'\r\n                          size='small'\r\n                          onClick={() =>\r\n                            dispatch(addToCart(item.product, item.qty + 1))\r\n                          }\r\n                          variant='contained'\r\n                          color='secondary'\r\n                        >\r\n                          <AddIcon fontSize='small' />\r\n                        </Buttonn>\r\n                      </ButtonGroupp>\r\n                    </Col>\r\n\r\n                    <Col md={1} className='d-flex align-items-center'>\r\n                      <Button\r\n                        type='button'\r\n                        className='p-1 rounded'\r\n                        variant='light'\r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i\r\n                          style={{ fontSize: '1.2rem' }}\r\n                          class='far fa-trash-alt'\r\n                        ></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n\r\n        <Col md={4} className='p-0'>\r\n          <Card\r\n            className='border-0 shadow mt-4 card_color p-3'\r\n            style={{ zIndex: '1' }}\r\n          >\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <h5 className='title-bill text-capitalize'>Số lượng: </h5>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <h5 className='title-bill-value text-lowercase pl-1'>\r\n                      {cartItems.reduce((acc, item) => acc + item.qty, 0)} sản\r\n                      phẩm\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <h5 className='title-bill text-capitalize'>Giá: </h5>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <h5 className='title-bill-value text-lowercase pl-1'>\r\n                      {format(\r\n                        cartItems.reduce(\r\n                          (acc, item) => acc + item.qty * item.price,\r\n                          0\r\n                        )\r\n                      )}\r\n                    </h5>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n          <Card className='mt-3 border-0'>\r\n            <Button\r\n              type='button'\r\n              className='btn-block btn_color rounded-pill text-uppercase p-3 text-light'\r\n              disabled={cartItems === 0}\r\n              onClick={checkoutHandler}\r\n              size='sm'\r\n            >\r\n              <h5 className='text-light m-0'>Đặt hàng</h5>\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js",["314","315","316","317","318","319","320"],"import firebase from 'firebase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { login, register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport ProgressLine from '../components/ProgressLine'\r\nimport Message from '../components/Message'\r\nimport configAuth from '../configAuth'\r\n\r\nconst firebaseApp = firebase.initializeApp(configAuth)\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [isLogin, setIsLogin] = useState(false)\r\n  const [name, setName] = useState('')\r\n  const [mail, setMail] = useState('')\r\n  const [photo, setPhoto] = useState('')\r\n\r\n  const onSubmit = () => {\r\n    var provider = new firebase.auth.GoogleAuthProvider()\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential\r\n\r\n        var token = credential.accessToken\r\n\r\n        const { user } = result\r\n\r\n        const email = user.email\r\n        const name = user.displayName\r\n        const avatar = user.photoURL\r\n        const password = ''\r\n\r\n        dispatch(register(name, email, avatar, password))\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        console.log('User signed in')\r\n        console.log(user.displayName + '\\n' + user.email)\r\n        setIsLogin(true)\r\n        setName(user.displayName)\r\n        setPhoto(user.photoURL)\r\n        setMail(user.email)\r\n        // history.push(redirect)\r\n      } else {\r\n        console.log('No User')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  return (\r\n    <>\r\n      <Row className='shadow p-5 card_color ml-4 mr-4'>\r\n        <Col md={7}>\r\n          <div className='d-flex justify-content-center'>\r\n            <Image\r\n              style={{ zIndex: '2' }}\r\n              src='/background/Wavy_Gen-01_Single-07.jpg'\r\n              fluid\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col md={5}>\r\n          <div className='pt-5 mt-5'>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <ProgressLine />}\r\n            <Form onSubmit={submitHandler}>\r\n              <h2 className='text-center'>Đăng nhập</h2>\r\n              <Form.Group controlId='email' className='pt-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Địa chỉ email\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='email'\r\n                  placeholder='Nhập địa chỉ email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Mật khẩu\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='password'\r\n                  placeholder='Nhập mật khẩu'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <div className='mt-2'>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light'\r\n                  className='btn-block  rounded-pill mb-3 btn_color_created'\r\n                  style={{ fontSize: '0.875rem', letterSpacing: '0.25rem' }}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n                {isLogin === false ? (\r\n                  <Button\r\n                    variant='outline-light'\r\n                    className='btn-block shadow rounded-pill btn_gg'\r\n                    style={{\r\n                      fontSize: '0.8rem',\r\n                      letterSpacing: '0.05rem',\r\n                      border: '1px solid #ddd',\r\n                      color: '#1a1a1a',\r\n                    }}\r\n                    onClick={onSubmit}\r\n                  >\r\n                    <Image\r\n                      src='https://img.icons8.com/fluent/20/000000/google-logo.png'\r\n                      className='pr-1'\r\n                    />\r\n                    Đăng nhập bằng tài khoản Google\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant='outline-light'\r\n                    className='btn-block shadow rounded-pill btn_gg'\r\n                    style={{\r\n                      fontSize: '0.8rem',\r\n                      border: '1px solid #ddd',\r\n                      letterSpacing: '0.05rem',\r\n                      color: '#1a1a1a',\r\n                    }}\r\n                    onClick={onSubmit}\r\n                  >\r\n                    <Image\r\n                      src='https://img.icons8.com/fluent/20/000000/google-logo.png'\r\n                      className='pr-1'\r\n                    />\r\n                    Đăng nhập bằng tài khoản Google\r\n                  </Button>\r\n                )}\r\n              </div>\r\n\r\n              <Row className='py-3'>\r\n                <Col\r\n                  className='d-flex align-items-center justify-content-center'\r\n                  style={{\r\n                    fontSize: '0.8rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                >\r\n                  <div>\r\n                    Bạn là thành viên mới?{' '}\r\n                    <Link\r\n                      className='text-decoration-none text-info pl-1'\r\n                      to={\r\n                        redirect\r\n                          ? `/register?redirect=${redirect}`\r\n                          : '/register'\r\n                      }\r\n                      style={{ fontWeight: '700' }}\r\n                    >\r\n                      Đăng kí\r\n                    </Link>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js",["321","322","323","324","325"],"F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js",["326","327","328","329","330","331","332"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { register } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport axios from 'axios'\r\nimport { Upload, message } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    width: theme.spacing(8),\r\n    height: theme.spacing(8),\r\n    fontSize: '3rem',\r\n  },\r\n}))\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const classes = useStyles()\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password do not match')\r\n    } else {\r\n      dispatch(register(name, email, avatar, password))\r\n    }\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setAvatar(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  return (\r\n    <>\r\n      <Row className='shadow p-5 card_color m-0'>\r\n        <Col md={7}>\r\n          <Image src='/background/3071357.jpg' fluid />\r\n        </Col>\r\n        <Col md={5}>\r\n          <div>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n              <h2 className='text-center'>Đăng kí</h2>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Họ và tên\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Nhập họ và tên'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className='border border-grey rounded-pill'\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='email'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Địa chỉ email\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='email'\r\n                  placeholder='Nhập địa chỉ email'\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className='border border-grey rounded-pill'\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Mật khẩu\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder='Nhập mật khẩu'\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className='border border-grey rounded-pill'\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='password'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Nhập lại mật khẩu\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type='password'\r\n                  placeholder=' Nhập lại mật khẩu'\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  className='border border-grey rounded-pill'\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='image'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Ảnh đại diện\r\n                </Form.Label>\r\n                <Row>\r\n                  <div className='d-flex align-items-center'>\r\n                    <Col md={6}>\r\n                      {avatar && (\r\n                        <Image\r\n                          src={avatar}\r\n                          className='rounded-circle avatar_img'\r\n                          fluid\r\n                        />\r\n                      )}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                      <Form.File\r\n                        className='border border-grey'\r\n                        id='image-file'\r\n                        label='Chọn ảnh'\r\n                        custom\r\n                        onChange={uploadFileHandler}\r\n                      ></Form.File>\r\n                      {uploading && <Loader />}\r\n                    </Col>\r\n                  </div>\r\n                </Row>\r\n              </Form.Group>\r\n\r\n              <div>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light'\r\n                  className='btn-block  rounded-pill btn_color_created'\r\n                  style={{ fontSize: '0.875rem', letterSpacing: '0.25rem' }}\r\n                >\r\n                  Đăng kí\r\n                </Button>\r\n              </div>\r\n\r\n              <Row className='py-3'>\r\n                <Col\r\n                  className='d-flex align-items-center justify-content-center'\r\n                  style={{ fontSize: '0.8rem', letterSpacing: '0.05rem' }}\r\n                >\r\n                  <div>\r\n                    Bạn đã có tài khoản?\r\n                    <Link\r\n                      className='text-decoration-none text-info pl-1 '\r\n                      to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                      style={{ fontWeight: '700' }}\r\n                    >\r\n                      Đăng nhập\r\n                    </Link>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js",["333","334","335","336","337"],"import DateFnsUtils from '@date-io/date-fns'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Link from '@material-ui/core/Link'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport Announcement from '../components/Announcement'\r\nimport Banner from '../components/Banner'\r\nimport Loader from '../components/Loader'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport data from '../data.json'\r\nimport '../toast.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    width: theme.spacing(48.8),\r\n    height: theme.spacing(50),\r\n    fontSize: '20rem',\r\n  },\r\n}))\r\n\r\nfunction ProfileScreen({ location, history }) {\r\n  const classes = useStyles()\r\n\r\n  const [state, setState] = useState(false)\r\n\r\n  const handleChange = () => {\r\n    setState(!state)\r\n  }\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date('2021-03-22T21:11:54')\r\n  )\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date)\r\n  }\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  // console.log('user', user)\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n  const [message, setMessage] = useState(null)\r\n  const [sex, setSex] = useState('')\r\n  const [thanhPho, setThanhPho] = useState('')\r\n  const [huyen, setHuyen] = useState('')\r\n  const [xa, setXa] = useState('')\r\n  const [diaChi, setDiachi] = useState('')\r\n  const [numberPhone, setNumberPhone] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { loading: loadingUpdate, success } = userUpdateProfile\r\n\r\n  let formatPhoneNumber = (str) => {\r\n    //Filter only numbers from the input\r\n    let cleaned = ('' + str).replace(/\\D/g, '')\r\n\r\n    //Check if the input is of correct length\r\n    let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r\n\r\n    if (match) {\r\n      return '(' + match[1] + ') ' + match[2] + ' ' + match[3]\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  // console.log('length', numberPhone.length)\r\n\r\n  // console.log(\r\n  //   'length',\r\n  //   JSON.stringify(formatPhoneNumber(formatPhoneNumber)).length\r\n  // )\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    error &&\r\n      toast.error(\r\n        <div>\r\n          <ErrorOutlineIcon className='pr-1' fontSize='large' /> {error}\r\n        </div>,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      )\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error(\r\n        <div>\r\n          <ErrorOutlineIcon className='pr-1' fontSize='large' /> Password is not\r\n          match\r\n        </div>,\r\n        {\r\n          position: 'top-right',\r\n          autoClose: 2500,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        }\r\n      )\r\n    } else {\r\n      if (numberPhone.length === 14 || numberPhone.length === 10) {\r\n        dispatch(\r\n          updateUserProfile({\r\n            id: user._id,\r\n            email,\r\n            name,\r\n            avatar,\r\n            password,\r\n            sex,\r\n            numberPhone,\r\n            selectedDate,\r\n            diaChi,\r\n            xa,\r\n            huyen,\r\n            thanhPho,\r\n          })\r\n        )\r\n        toast.success(\r\n          <div>\r\n            <CheckCircleOutlineIcon className='pr-1' fontSize='large' />\r\n            Hồ sơ đã được cập nhật\r\n          </div>,\r\n          {\r\n            className: 'Toastify__toast--success',\r\n            position: 'top-right',\r\n            autoClose: 2500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        )\r\n      } else {\r\n        toast.error(\r\n          <div>\r\n            <ErrorOutlineIcon className='pr-1' fontSize='large' /> Số điện thoại\r\n            phải có đúng 10 số\r\n          </div>,\r\n          {\r\n            position: 'top-right',\r\n            autoClose: 2500,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setAvatar(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setAvatar(user.avatar)\r\n        // setAddress(user.address)\r\n        setThanhPho(user.address.thanhPho)\r\n        setHuyen(user.address.huyen)\r\n        setXa(user.address.xa)\r\n        setDiachi(user.address.diaChi)\r\n        setSelectedDate(user.birthDay)\r\n        setSex(user.sex)\r\n        setNumberPhone(user.numberPhone)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  return (\r\n    <div>\r\n      {message && <Announcement variant='danger'>{message}</Announcement>}\r\n      {error && <Announcement variant='danger'>{error}</Announcement>}\r\n      {/* {loading && <Loader />} */}\r\n\r\n      <div className='border-0'>\r\n        <Row className='justify-content-center  m-4'>\r\n          <Col\r\n            md={4}\r\n            className='pt-5 shadow'\r\n            style={{\r\n              backgroundColor: '#977bd5',\r\n              borderTopLeftRadius: '1rem',\r\n              borderBottomLeftRadius: '1rem',\r\n            }}\r\n          >\r\n            <div\r\n              className='text-center mt-5 m-auto'\r\n              style={{\r\n                border: '5px solid #55595c',\r\n                borderRadius: '50%',\r\n                width: '20rem',\r\n                height: '20.6rem',\r\n              }}\r\n            >\r\n              <div className='text-center mb-3 avatar_container'>\r\n                {user.avatar && user.avatar ? (\r\n                  <>\r\n                    <Image\r\n                      style={{\r\n                        width: '20rem',\r\n                        height: '20rem',\r\n                      }}\r\n                      src={avatar}\r\n                      className='rounded-circle avatar_img'\r\n                      fluid\r\n                    />\r\n                    <div className='avatar_upload'>\r\n                      <div className='avatar_edit'>\r\n                        {uploading && <Loader />}\r\n                        <Form.Group>\r\n                          <Image\r\n                            className='avatar_icon'\r\n                            src='https://img.icons8.com/fluent/40/000000/camera.png'\r\n                          />\r\n                          <Form.File\r\n                            id='image-file'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                            className='avatar_file'\r\n                          ></Form.File>\r\n                        </Form.Group>\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <Avatar className={classes.orange}>\r\n                    {uploading && <Loader />}\r\n                    {userInfo.name.substring(0, 1)}\r\n                  </Avatar>\r\n                )}\r\n              </div>\r\n              <div className='text-center mt-5'>\r\n                <Link\r\n                  href='/myorders'\r\n                  style={{\r\n                    fontSize: '0.8rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className='text-decoration-none shadow'\r\n                >\r\n                  <Button\r\n                    variant='outline-light'\r\n                    className='rounded-pill shadow '\r\n                    style={{ fontSize: '1rem', letterSpacing: '0.25rem' }}\r\n                  >\r\n                    ĐƠN HÀNG CỦA TÔI\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            md={8}\r\n            className='pt-4 pb-4  bg-light shadow border-0'\r\n            style={{\r\n              backgroundColor:\r\n                'radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);',\r\n              borderTopRightRadius: '1rem',\r\n              borderBottomRightRadius: '1rem',\r\n            }}\r\n          >\r\n            <h2 className='text-center'>Thông tin cá nhân</h2>\r\n            <Form onSubmit={submitHandler} className='pl-4 pr-4 pt-3'>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId='name'>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Họ và tên</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border-1 border-grey rounded-pill'\r\n                      type='name'\r\n                      placeholder='Nhập họ và tên'\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Form.Group controlId='email'>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Địa chỉ email</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border-1 border-grey rounded-pill'\r\n                      type='email'\r\n                      placeholder='Nhập địa chỉ email'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <strong>Ngày sinh</strong>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <Grid container justify='space-between'>\r\n                        <KeyboardDatePicker\r\n                          className='m-0'\r\n                          margin='normal'\r\n                          id='date-picker-dialog'\r\n                          format='MM/dd/yyyy'\r\n                          value={selectedDate}\r\n                          onChange={handleDateChange}\r\n                          KeyboardButtonProps={{\r\n                            'aria-label': 'change date',\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                    </MuiPickersUtilsProvider>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <strong>Giới tính:</strong>\r\n                    <RadioGroup\r\n                      value={sex}\r\n                      onChange={(e) => setSex(e.target.value)}\r\n                    >\r\n                      <div className='d-flex justify-content-evenly align-items-center'>\r\n                        <FormControlLabel\r\n                          value='Nam'\r\n                          control={<Radio size='small' />}\r\n                          label='Nam'\r\n                          size='medium'\r\n                        />\r\n                        <FormControlLabel\r\n                          value='Nữ'\r\n                          control={<Radio size='small' />}\r\n                          label='Nữ'\r\n                        />\r\n                      </div>\r\n                    </RadioGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <Form.Group controlId='country'>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Địa chỉ chi tiết</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter country'\r\n                      value={diaChi}\r\n                      onChange={(e) => setDiachi(e.target.value)}\r\n                      className='border-1 border-gray rounded-pill'\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Form.Group controlId='country'>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Số điện thoại</strong>\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      type='string'\r\n                      placeholder='Nhập số điện thoại'\r\n                      value={formatPhoneNumber(numberPhone)}\r\n                      onChange={(e) => setNumberPhone(e.target.value)}\r\n                      className='border-1 border-gray rounded-pill'\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group>\r\n                <Row>\r\n                  <Col md={4}>\r\n                    <Form.Group controlId='address'>\r\n                      <Form.Label as='p' className='mb-1'>\r\n                        <strong>Thành Phố / Tỉnh</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type='text'\r\n                        as='select'\r\n                        placeholder='Enter address'\r\n                        value={thanhPho}\r\n                        onChange={(e) => setThanhPho(e.target.value)}\r\n                        className='border-1 border-gray rounded-pill'\r\n                      >\r\n                        <option>Vui lòng chọn thành phố/tỉnh...</option>\r\n                        {data.map((tp) => (\r\n                          <option\r\n                            style={{ color: 'black' }}\r\n                            key={tp.Id}\r\n                            value={tp.Name}\r\n                          >\r\n                            {tp.Name}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group controlId='city'>\r\n                      <Form.Label as='p' className='mb-1'>\r\n                        <strong>Quận / Huyện</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type='text'\r\n                        as='select'\r\n                        placeholder='Enter city'\r\n                        value={huyen}\r\n                        onChange={(e) => setHuyen(e.target.value)}\r\n                        className='border-1 border-gray rounded-pill'\r\n                      >\r\n                        <option>Vui lòng chọn quận/huyện...</option>\r\n                        {data.map(\r\n                          (a) =>\r\n                            a.Name === thanhPho &&\r\n                            a.Districts.map((b) => (\r\n                              <option\r\n                                key={b.Id}\r\n                                style={{ color: 'black' }}\r\n                                value={b.Name}\r\n                              >\r\n                                {b.Name}\r\n                              </option>\r\n                            ))\r\n                        )}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                  <Col md={4}>\r\n                    <Form.Group controlId='postalCode'>\r\n                      <Form.Label as='p' className='mb-1'>\r\n                        <strong>Phường / Xã</strong>\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type='text'\r\n                        as='select'\r\n                        placeholder='Enter postalCode'\r\n                        value={xa}\r\n                        onChange={(e) => setXa(e.target.value)}\r\n                        className='border-1 border-gray rounded-pill'\r\n                      >\r\n                        <option>Vui lòng chọn thành xã/phường...</option>\r\n                        {data.map(\r\n                          (a) =>\r\n                            a.Name === thanhPho &&\r\n                            a.Districts.map(\r\n                              (b) =>\r\n                                b.Name === huyen &&\r\n                                b.Wards.map((c) => (\r\n                                  <option style={{ color: 'black' }}>\r\n                                    {c.Name}\r\n                                  </option>\r\n                                ))\r\n                            )\r\n                        )}\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n\r\n              {/* <Form.Group controlId='image'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Image\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey'\r\n                  type='text'\r\n                  placeholder='Enter image url'\r\n                  value={avatar}\r\n                  onChange={(e) => setAvatar(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.File\r\n                  className='border border-grey'\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group> */}\r\n              <div className='d-flex align-items-center'>\r\n                <Switch\r\n                  value={state}\r\n                  onChange={handleChange}\r\n                  color='secondary'\r\n                  name='checkedB'\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n                {state === true ? (\r\n                  <p className='mb-0' style={{ opacity: '1' }}>\r\n                    <strong>Đổi mật khẩu</strong>\r\n                    <Image\r\n                      style={{ opacity: '1' }}\r\n                      src='https://img.icons8.com/fluent/32/000000/unlock-2.png'\r\n                    />\r\n                  </p>\r\n                ) : (\r\n                  <p className='mb-0' style={{ opacity: '0.7' }}>\r\n                    Đổi mật khẩu\r\n                    <Image\r\n                      style={{ opacity: '1' }}\r\n                      src='https://img.icons8.com/fluent/32/000000/lock-2.png'\r\n                    />\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Form.Group controlId='password' fluid>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Mật khẩu mới</strong>\r\n                    </Form.Label>\r\n                    {state === true ? (\r\n                      <>\r\n                        <Form.Control\r\n                          className='border-1 border-grey rounded-pill '\r\n                          type='password'\r\n                          placeholder='Nhập mật khẩu mới'\r\n                          value={password}\r\n                          onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                      </>\r\n                    ) : (\r\n                      <Form.Control\r\n                        className='border-1 border-grey rounded-pill '\r\n                        type='password'\r\n                        placeholder='Nhập mật khẩu mới'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        disabled\r\n                        // style={{ visibility: 'hidden' }}\r\n                      ></Form.Control>\r\n                    )}\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Form.Group controlId='password'>\r\n                    <Form.Label as='p' className='mb-1'>\r\n                      <strong>Nhập lại mật khẩu</strong>\r\n                    </Form.Label>\r\n                    {state === true ? (\r\n                      <>\r\n                        <Form.Control\r\n                          className='border-1 border-grey rounded-pill'\r\n                          type='password'\r\n                          placeholder='Nhập lại mật khẩu'\r\n                          value={confirmPassword}\r\n                          onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                      </>\r\n                    ) : (\r\n                      <Form.Control\r\n                        className='border-1 border-grey rounded-pill'\r\n                        type='password'\r\n                        placeholder='Nhập lại mật khẩu'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        disabled\r\n                        // style={{ visibility: 'hidden' }}\r\n                      ></Form.Control>\r\n                    )}\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className='d-flex justify-content-center'>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light'\r\n                  className='rounded-pill btn_color_created'\r\n                  style={{\r\n                    fontSize: '1rem',\r\n                    letterSpacing: '0.25rem',\r\n                    width: '10rem',\r\n                  }}\r\n                >\r\n                  Lưu\r\n                </Button>\r\n              </div>\r\n              <ToastContainer />\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js",["338","339","340"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Image, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport SkeletonEffect from '../components/SkeletonEffect'\r\nimport Step from '../components/Step'\r\nimport data from '../data.json'\r\n\r\nexport const ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress, loading } = cart\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading: loadingUserDetail, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const [thanhPho, setThanhPho] = useState(shippingAddress.thanhPho)\r\n  const [huyen, setHuyen] = useState(shippingAddress.huyen)\r\n  const [xa, setXa] = useState(shippingAddress.xa)\r\n  const [diaChi, setDiachi] = useState(shippingAddress.diaChi)\r\n  const [numberPhone, setNumberPhone] = useState(shippingAddress.numberPhone)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ thanhPho, huyen, xa, diaChi, numberPhone }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails('profile'))\r\n      } else {\r\n        setThanhPho(user.address.thanhPho)\r\n        setHuyen(user.address.huyen)\r\n        setXa(user.address.xa)\r\n        setDiachi(user.address.diaChi)\r\n        setNumberPhone(user.numberPhone)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  return (\r\n    <>\r\n      {loadingUserDetail ? (\r\n        <SkeletonEffect />\r\n      ) : (\r\n        <Row className='shadow p-2 card_color '>\r\n          <Col md={7} className='d-flex align-items-center'>\r\n            <Image src='/background/shipping.jpg' fluid />\r\n          </Col>\r\n          <Col md={5} className='mt-2 pr-4'>\r\n            <div>\r\n              <Step step1 step2 />\r\n\r\n              <Form onSubmit={submitHandler} className='mt-2 border-0 mb-2'>\r\n                <h3 className='pt-3 text-center'>Thông tin Vận chuyển</h3>\r\n                <Form.Group controlId='address'>\r\n                  <Form.Label as='p' className='mb-1 mt-2'>\r\n                    <strong>Thành Phố / Tỉnh</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    as='select'\r\n                    placeholder='Enter address'\r\n                    value={thanhPho}\r\n                    onChange={(e) => setThanhPho(e.target.value)}\r\n                    className='border-1 border-gray rounded-pill'\r\n                  >\r\n                    {data.map((tp) => (\r\n                      <option\r\n                        style={{ color: 'black' }}\r\n                        key={tp.Id}\r\n                        value={tp.Name}\r\n                      >\r\n                        {tp.Name}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                  <Form.Label as='p' className='mb-1'>\r\n                    <strong> Quận / Huyện</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    as='select'\r\n                    placeholder='Enter city'\r\n                    value={huyen}\r\n                    onChange={(e) => setHuyen(e.target.value)}\r\n                    className='border-1 border-gray rounded-pill'\r\n                  >\r\n                    {data.map(\r\n                      (a) =>\r\n                        a.Name === thanhPho &&\r\n                        a.Districts.map((b) => (\r\n                          <option\r\n                            key={b.Id}\r\n                            style={{ color: 'black' }}\r\n                            value={b.Name}\r\n                          >\r\n                            {b.Name}\r\n                          </option>\r\n                        ))\r\n                    )}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                  <Form.Label as='p' className='mb-1'>\r\n                    <strong>Phường / Xã</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    as='select'\r\n                    required\r\n                    placeholder='Enter postalCode'\r\n                    value={xa}\r\n                    onChange={(e) => setXa(e.target.value)}\r\n                    className='border-1 border-gray rounded-pill'\r\n                  >\r\n                    {data.map(\r\n                      (a) =>\r\n                        a.Name === thanhPho &&\r\n                        a.Districts.map(\r\n                          (b) =>\r\n                            b.Name === huyen &&\r\n                            b.Wards.map((c) => (\r\n                              <option style={{ color: 'black' }}>\r\n                                {c.Name}\r\n                              </option>\r\n                            ))\r\n                        )\r\n                    )}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                  <Form.Label as='p' className='mb-1'>\r\n                    <strong>Địa chỉ chi tiết</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter country'\r\n                    value={diaChi}\r\n                    onChange={(e) => setDiachi(e.target.value)}\r\n                    className='border-1 border-gray rounded-pill'\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                  <Form.Label as='p' className='mb-1'>\r\n                    <strong>Số điện thoại</strong>\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Enter country'\r\n                    value={numberPhone}\r\n                    onChange={(e) => setNumberPhone(e.target.value)}\r\n                    className='border-1 border-gray rounded-pill'\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <div>\r\n                  <Button\r\n                    type='submit'\r\n                    className='btn-block btn_color rounded-pill'\r\n                  >\r\n                    Tiếp tục\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js",[],["341","342"],"F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js",["343"],"F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js",["344","345"],"F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js",["346","347","348"],"F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\UserListScreen.js",["349"],"import Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../../src/notisfied.css'\r\nimport { deleteUser, listUsers } from '../actions/userActions'\r\nimport Announcement from '../components/Announcement'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'id',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ID',\r\n  },\r\n  { id: 'name', numeric: true, disablePadding: false, label: 'Name' },\r\n  { id: 'email', numeric: true, disablePadding: false, label: 'EMAIL' },\r\n  { id: 'isAdmin', numeric: true, disablePadding: false, label: 'ADMIN' },\r\n  { id: 'action', numeric: true, disablePadding: false, label: 'ACTION' },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='center'\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className='pl-5'\r\n            style={{ fontWeight: '700' }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    align: 'center',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}))\r\n\r\nfunction UserListScreen({ history }) {\r\n  const classes = useStyles()\r\n  const [order, setOrder] = React.useState('asc')\r\n  const [orderBy, setOrderBy] = React.useState('calories')\r\n  const [selected, setSelected] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [dense, setDense] = React.useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = users.map((user) => user._id)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const emptyRows =\r\n    users !== undefined &&\r\n    rowsPerPage - Math.min(rowsPerPage, users.length - page * rowsPerPage)\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  const deleteHandle = (id) => {\r\n    if (window.confirm('You are sure?')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  const EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles()\r\n    const { numSelected } = props\r\n\r\n    const did = users.find((user) => user._id)\r\n\r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className={classes.title}\r\n            color='inherit'\r\n            variant='subtitle1'\r\n            component='div'\r\n          >\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className={classes.title}\r\n            variant='h6'\r\n            id='tableTitle'\r\n            component='div'\r\n          >\r\n            <h2>Users List</h2>\r\n          </Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title='Delete'>\r\n            <IconButton\r\n              aria-label='delete'\r\n              onClick={() => deleteHandle(selected)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title='Filter list'>\r\n            <IconButton aria-label='filter list'>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Toolbar>\r\n    )\r\n  }\r\n\r\n  EnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Announcement variant='danger'>{error}</Announcement>\r\n      ) : (\r\n        <>\r\n          <div className={classes.root}>\r\n            <Paper\r\n              className={classes.paper + 'shadow'}\r\n              style={{\r\n                borderRadius: '1rem',\r\n                border: '0.25px solid #ddd',\r\n              }}\r\n            >\r\n              <TableContainer\r\n                className='text-center p-5'\r\n                style={{\r\n                  borderRadius: '1rem',\r\n                }}\r\n              >\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-labelledby='tableTitle'\r\n                  size={dense ? 'small' : 'medium'}\r\n                  aria-label='enhanced table'\r\n                >\r\n                  <EnhancedTableHead\r\n                    classes={classes}\r\n                    numSelected={selected.length}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onSelectAllClick={handleSelectAllClick}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={users.length}\r\n                  />\r\n                  <TableBody>\r\n                    {stableSort(users, getComparator(order, orderBy))\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((user, index) => {\r\n                        const isItemSelected = isSelected(user._id)\r\n                        const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            onClick={(event) => handleClick(event, user._id)}\r\n                            role='checkbox'\r\n                            aria-checked={isItemSelected}\r\n                            tabIndex={-1}\r\n                            key={user._id}\r\n                            selected={isItemSelected}\r\n                          >\r\n                            <TableCell padding='checkbox'>\r\n                              <Checkbox\r\n                                checked={isItemSelected}\r\n                                inputProps={{ 'aria-labelledby': labelId }}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell\r\n                              component='th'\r\n                              id={labelId}\r\n                              scope='row'\r\n                              padding='none'\r\n                              align='center'\r\n                            >\r\n                              {user._id}\r\n                            </TableCell>\r\n                            <TableCell align='left' className='text-center'>\r\n                              {user.name}\r\n                            </TableCell>\r\n                            <TableCell align='center'>{user.email}</TableCell>\r\n                            <TableCell align='center'>\r\n                              {' '}\r\n                              {user.isAdmin ? (\r\n                                <i\r\n                                  className='fas fa-check'\r\n                                  style={{ color: 'green' }}\r\n                                ></i>\r\n                              ) : (\r\n                                <i\r\n                                  className='fas fa-times'\r\n                                  style={{ color: 'red' }}\r\n                                ></i>\r\n                              )}\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                              <LinkContainer\r\n                                to={`/admin/user/${user._id}/edit`}\r\n                              >\r\n                                <Button\r\n                                  variant='info'\r\n                                  className='btn-sm rounded-pill'\r\n                                >\r\n                                  <i className='far fa-edit'></i>\r\n                                </Button>\r\n                              </LinkContainer>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )\r\n                      })}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow\r\n                        style={{ height: (dense ? 33 : 53) * emptyRows }}\r\n                      >\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component='div'\r\n                count={users.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n            <FormControlLabel\r\n              control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n              label='Dense padding'\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\UserEditScreen.js",["350","351"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport MessageSuccess from '../components/MessageSuccess'\r\nimport {\r\n  USER_UPDATE_RESET\r\n} from '../constants/userConstants'\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, user, userId, successUpdate])\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3 text-uppercase'>\r\n        <i class='fas fa-arrow-left pr-2'></i>\r\n        Go back\r\n      </Link>\r\n      <FormContainer sm>\r\n        <h2>Edit User</h2>\r\n        {loadingUpdate ? (\r\n          <Loader /> \r\n        ) && <MessageSuccess variant='Chỉnh sửa thành công'></MessageSuccess> : errorUpdate ? (\r\n          <Message>{errorUpdate}</Message>\r\n        ) : loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <Form onSubmit={submitHandler} md={10}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='idAdmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n            <Button type='submit' variant='warning'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductListScreen.js",["352","353","354","355","356","357","358","359","360","361","362"],"import { Link } from '@material-ui/core'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport { default as React, useEffect } from 'react'\r\nimport { Button, Col, Image, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport '../../src/notisfied.css'\r\nimport {\r\n  getCategoryDetails,\r\n  listCategoriesAdm,\r\n} from '../actions/categoryAction'\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  listProducts,\r\n} from '../actions/productActions'\r\nimport Announcement from '../components/Announcement'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: 'id',\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: 'ID',\r\n  },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'NAME' },\r\n  { id: 'image', numeric: false, disablePadding: false, label: 'IMAGE' },\r\n  { id: 'price', numeric: true, disablePadding: false, label: 'PRICE' },\r\n  { id: 'category', numeric: false, disablePadding: false, label: 'CATEGORY' },\r\n  { id: 'brand', numeric: false, disablePadding: false, label: 'BRAND' },\r\n  { id: 'quantity', numeric: true, disablePadding: false, label: 'QUANTITY' },\r\n  { id: 'action', numeric: false, disablePadding: false, label: 'ACTION' },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding='checkbox'>\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align='center'\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className='pl-5'\r\n            style={{ fontWeight: '700' }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}))\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n    align: 'center',\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}))\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n  const classes = useStyles()\r\n  const [order, setOrder] = React.useState('asc')\r\n  const [orderBy, setOrderBy] = React.useState('calories')\r\n  const [selected, setSelected] = React.useState([])\r\n  const [page, setPage] = React.useState(0)\r\n  const [dense, setDense] = React.useState(false)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = products.map((product) => product._id)\r\n      setSelected(newSelecteds)\r\n      return\r\n    }\r\n    setSelected([])\r\n  }\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name)\r\n    let newSelected = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1))\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      )\r\n    }\r\n\r\n    setSelected(newSelected)\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked)\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const categoriesList = useSelector((state) => state.categoriesList)\r\n  const {\r\n    loading: loadingCat,\r\n    error: errorCat,\r\n    category: categoryCat,\r\n  } = categoriesList\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products } = productList\r\n\r\n  const emptyRows =\r\n    products !== undefined &&\r\n    rowsPerPage - Math.min(rowsPerPage, products.length - page * rowsPerPage)\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const categoryDetails = useSelector((state) => state.categoryDetails)\r\n  const {\r\n    loading: loadingCatDe,\r\n    error: errorCatDe,\r\n    category: categoryCatDe,\r\n  } = categoryDetails\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const k = '6067d4b59f684c3fe0bd9def'\r\n\r\n  useEffect(() => {\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (userInfo) {\r\n      dispatch(listCategoriesAdm())\r\n      dispatch(getCategoryDetails(categoryCat.map((e) => e._id)))\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createProduct])\r\n\r\n  const deleteHandle = (id) => {\r\n    if (window.confirm('You are sure?')) {\r\n      dispatch(deleteProduct(id))\r\n      setSelected([])\r\n    }\r\n  }\r\n\r\n  const EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles()\r\n    const { numSelected } = props\r\n\r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography\r\n            className={classes.title}\r\n            color='inherit'\r\n            variant='subtitle1'\r\n            component='div'\r\n          >\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography\r\n            className={classes.title}\r\n            variant='h6'\r\n            id='tableTitle'\r\n            component='div'\r\n          ></Typography>\r\n        )}\r\n\r\n        {numSelected > 0 ? (\r\n          <Tooltip title='Delete'>\r\n            <IconButton\r\n              aria-label='delete'\r\n              onClick={() => deleteHandle(selected)}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title='Filter list'>\r\n            <IconButton aria-label='filter list'>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Toolbar>\r\n    )\r\n  }\r\n\r\n  EnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h2 className='text-uppercase'>Products</h2>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <LinkContainer to='/admin/product/create'>\r\n            <Button\r\n              variant='outline-dark'\r\n              className='my-2 text-uppercase rounded-pill pt-2 pb-2'\r\n            >\r\n              <i className='fas fa-plus'></i> Thêm sản phẩm\r\n            </Button>\r\n          </LinkContainer>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message>{errorDelete}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Announcement variant='danger'>{error}</Announcement>\r\n      ) : (\r\n        <>\r\n          <div className={classes.root}>\r\n            <Paper\r\n              className={classes.paper + 'shadow'}\r\n              style={{\r\n                borderRadius: '1rem',\r\n                border: '0.25px solid #ddd',\r\n              }}\r\n            >\r\n              <TableContainer\r\n                className='text-center p-2'\r\n                style={{\r\n                  borderRadius: '1rem',\r\n                }}\r\n              >\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <Table\r\n                  className={classes.table}\r\n                  aria-labelledby='tableTitle'\r\n                  size={dense ? 'small' : 'medium'}\r\n                  aria-label='enhanced table'\r\n                >\r\n                  <EnhancedTableHead\r\n                    classes={classes}\r\n                    numSelected={selected.length}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onSelectAllClick={handleSelectAllClick}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={products.length}\r\n                    colSpan={1}\r\n                  />\r\n                  <TableBody>\r\n                    {stableSort(products, getComparator(order, orderBy))\r\n                      .slice(\r\n                        page * rowsPerPage,\r\n                        page * rowsPerPage + rowsPerPage\r\n                      )\r\n                      .map((product, index) => {\r\n                        const isItemSelected = isSelected(product._id)\r\n                        const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            onClick={(event) => handleClick(event, product._id)}\r\n                            role='checkbox'\r\n                            aria-checked={isItemSelected}\r\n                            tabIndex={-1}\r\n                            key={product._id}\r\n                            selected={isItemSelected}\r\n                          >\r\n                            <TableCell padding='checkbox'>\r\n                              <Checkbox\r\n                                checked={isItemSelected}\r\n                                inputProps={{ 'aria-labelledby': labelId }}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell\r\n                              component='th'\r\n                              id={labelId}\r\n                              scope='row'\r\n                              padding='none'\r\n                              align='center'\r\n                            >\r\n                              {product._id}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              align='left'\r\n                              component='th'\r\n                              className='text-center'\r\n                            >\r\n                              {product.name}\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                              <Image\r\n                                src={product.image}\r\n                                fluid\r\n                                className='rounded-circle p-1'\r\n                              />\r\n                            </TableCell>\r\n\r\n                            <TableCell align='center'>\r\n                              ${product.price}\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                              {categoryCat &&\r\n                                categoryCat.map(\r\n                                  (cat, index) =>\r\n                                    cat._id === product.category && cat.name\r\n                                )}\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                              {product.brand}\r\n                            </TableCell>\r\n                            <TableCell\r\n                              align='center'\r\n                              style={{ padding: '1px' }}\r\n                            >\r\n                              {product.countInStock}\r\n                            </TableCell>\r\n                            <TableCell align='center'>\r\n                              <LinkContainer\r\n                                to={`/admin/product/${product._id}/edit`}\r\n                              >\r\n                                <Button\r\n                                  variant='outline-light'\r\n                                  className='btn-block rounded-pill btn_color_details'\r\n                                >\r\n                                  <i className='far fa-edit'></i>\r\n                                </Button>\r\n                              </LinkContainer>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )\r\n                      })}\r\n                    {emptyRows > 0 && (\r\n                      <TableRow\r\n                        style={{ height: (dense ? 33 : 53) * emptyRows }}\r\n                      >\r\n                        <TableCell colSpan={6} />\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component='div'\r\n                count={products.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Paper>\r\n            <FormControlLabel\r\n              control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n              label='Dense padding'\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductEditScreen.js",["363","364"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategoriesAdm } from '../actions/categoryAction'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport MessageSuccess from '../components/MessageSuccess'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const categoriesList = useSelector((state) => state.categoriesList)\r\n  const {\r\n    loading: loadingCat,\r\n    error: errorCat,\r\n    category: categoryCat,\r\n  } = categoriesList\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    //UPDATE PRODUCT\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      // history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        if (userInfo) {\r\n          dispatch(listProductDetails(productId))\r\n          dispatch(listCategoriesAdm())\r\n        }\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, history, productId, product, successUpdate])\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Link\r\n          to='/admin/productlist'\r\n          className='btn btn-light my-3 text-uppercase rounded-pill'\r\n        >\r\n          <i class='fas fa-arrow-left pr-2'></i>\r\n          Quay về\r\n        </Link>\r\n        {loadingUpdate && (\r\n            <MessageSuccess variant='Đã cập nhật thành công'></MessageSuccess>\r\n          ) && <Loader />}\r\n        {errorUpdate && <Message>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Form\r\n              onSubmit={submitHandler}\r\n              className='p-4 bg-light shadow card_color'\r\n              fluid\r\n            >\r\n              <h2 className='text-center mb-4'>Edit Product</h2>\r\n\r\n              <Form.Group controlId='name' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Name\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='image' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Image\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey'\r\n                  type='text'\r\n                  placeholder='Enter image url'\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.File\r\n                  className='border border-grey'\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n\r\n              <Row>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='brand' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Brand\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill'\r\n                      type='text'\r\n                      placeholder='Enter brand'\r\n                      value={brand}\r\n                      onChange={(e) => setBrand(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='countInStock' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Count In Stock\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill text-center'\r\n                      type='number'\r\n                      placeholder='Enter countInStock'\r\n                      value={countInStock}\r\n                      onChange={(e) => setCountInStock(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='category' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Category\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill '\r\n                      type='text'\r\n                      as='select'\r\n                      placeholder='Enter category'\r\n                      value={category}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                      <option></option>\r\n                      {categoryCat &&\r\n                        categoryCat.map((cat, index) => (\r\n                          <option\r\n                            style={{ color: 'black' }}\r\n                            key={index}\r\n                            value={cat._id}\r\n                          >\r\n                            {cat.name}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='price' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Price\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill text-center'\r\n                      type='number'\r\n                      placeholder='Enter price'\r\n                      value={price}\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form.Group controlId='description' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Description\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='text'\r\n                  rows={3}\r\n                  as='textarea'\r\n                  placeholder='Enter description'\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <div className='pl-3 pr-3 text-center'>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-success'\r\n                  className='rounded-pill'\r\n                  style={{\r\n                    fontSize: '1rem',\r\n                    letterSpacing: '0.25rem',\r\n                    width: '20rem',\r\n                  }}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderListScreen.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ActiveRating.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ButtonComponent.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Step.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\SearchBox.js",["365","366","367","368","369"],"import { React, useState } from 'react'\r\nimport { Form, Button, Image, InputGroup } from 'react-bootstrap'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { FormGroup, Input } from '@material-ui/core'\r\nimport InputBase from '@material-ui/core/InputBase'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandle = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandle} inline>\r\n      <div className='d-flex'>\r\n        <Form.Control\r\n          type='text'\r\n          name='q'\r\n          placeholder='Search Product...'\r\n          className='mr-sm-2 ml-sm-5 rounded-pill'\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          style={{ width: '30rem' }}\r\n        ></Form.Control>\r\n      </div>\r\n\r\n      <Button\r\n        type='submit'\r\n        className='p-2 btn_color rounded-pill'\r\n        style={{ fontSize: '0.7rem' }}\r\n      >\r\n        <SearchIcon />\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Paginate.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ProductCarousel.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Meta.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\MyOrdersScreen.js",["370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388"],"F:\\Code\\shopPro\\frontend\\src\\configAuth.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\OrderEditScreen.js",["389","390"],"import Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Select from '@material-ui/core/Select'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Col, Image, ListGroup, Row, Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, updateOrder } from '../actions/orderActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { ORDER_UPDATE_RESET } from '../constants/orderConstants'\r\nimport MessageSuccess from '../components/MessageSuccess'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 560,\r\n  },\r\n}))\r\n\r\nconst OrderEditScreen = ({ match, history }) => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderId = match.params.id\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading } = orderDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const orderUpdate = useSelector((state) => state.orderUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = orderUpdate\r\n\r\n  const stateOrder = ['Chờ xác nhận', 'Đang vận chuyển', 'Đã giao hàng', 'Huỷ']\r\n  const [orderStatus, setOrderStatus] = useState('Chờ xác nhận')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateOrder({ _id: orderId, orderStatus }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: ORDER_UPDATE_RESET })\r\n    } else {\r\n      if (orderStatus || order._id !== orderId) {\r\n        dispatch(getOrderDetails(orderId))\r\n      } else {\r\n        setOrderStatus(order.orderStatus)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successUpdate])\r\n\r\n  return (\r\n    <>\r\n      {loadingUpdate && (\r\n        <MessageSuccess variant='Chỉnh sửa thành công'></MessageSuccess>\r\n      )}\r\n      {errorUpdate && <Message>{errorUpdate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Form onSubmit={submitHandler}>\r\n          <ListGroup\r\n            variant='flush'\r\n            className='shadow p-3 mt-3 card_color'\r\n            style={{ border: '0.4rem dashed #ffc1b6', borderRadius: '1rem' }}\r\n          >\r\n            <Row>\r\n              <Col md={6}>\r\n                <h4 className='pl-2'>CHI TIẾT ĐƠN HÀNG</h4>\r\n              </Col>\r\n              <Col md={6}>{order.orderStatus}</Col>\r\n            </Row>\r\n            <ListGroup.Item className='border-0'>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <p className='text-start'>\r\n                    Mã đơn hàng: <strong>{order._id}</strong>\r\n                  </p>\r\n                  <p className='text-start'>\r\n                    Tổng tiền: <strong>{order.totalPrice}đ</strong>\r\n                  </p>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel\r\n                      id='demo-controlled-open-select-label'\r\n                      style={{ fontSize: '1.2rem' }}\r\n                    >\r\n                      Trạng thái đơn hàng\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId='demo-controlled-open-select-label'\r\n                      id='demo-controlled-open-select'\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      onOpen={handleOpen}\r\n                      value={orderStatus}\r\n                      onChange={(e) => setOrderStatus(e.target.value)}\r\n                      className='text-danger text-center text-uppercase'\r\n                    >\r\n                      {stateOrder.map((t) => (\r\n                        <MenuItem className='justify-content-center' value={t}>\r\n                          {t}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className='border-0'>\r\n              <Row>\r\n                <Col md={6} className='border-0'>\r\n                  <Card\r\n                    className='rounded card_color'\r\n                    style={{ height: '11rem', backgroundColor: '#F8F8F8' }}\r\n                  >\r\n                    <CardContent>\r\n                      <h5 className='border-bottom border-info text-info pb-1'>\r\n                        Thông tin người nhận\r\n                      </h5>\r\n                      <div>\r\n                        <Row className='m-0'>\r\n                          <Col md={4}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Địa chỉ:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={8}>\r\n                            <strong>{order.user.name}</strong>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='m-0'>\r\n                          <Col md={4}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Tên khách hàng:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={8}>\r\n                            <p className='mb-1'>\r\n                              {order.shippingAddress.diaChi}\r\n                              {' - '}\r\n                              {order.shippingAddress.xa}\r\n                              {' - '}\r\n                              {order.shippingAddress.huyen}\r\n                              {' - '}\r\n                              {order.shippingAddress.thanhPho}.\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='m-0'>\r\n                          <Col md={4}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Email:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={8}>\r\n                            <p className='mb-1'>{order.user.email}</p>\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <Card\r\n                    className='rounded card_color'\r\n                    style={{ height: '11rem', backgroundColor: '#F8F8F8' }}\r\n                  >\r\n                    <CardContent>\r\n                      <h5 className='border-bottom border-info text-info pb-1'>\r\n                        Phương thức thanh toán\r\n                      </h5>\r\n                      <div>\r\n                        <Row className='m-0'>\r\n                          <Col md={5}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Phương thức:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={7} className='pt-1'>\r\n                            <h6 className='mb-0'>{order.paymentMethod}</h6>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='m-0'>\r\n                          <Col md={5}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Thời gian thanh toán:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={7}>\r\n                            <p className='mb-1'>\r\n                              {order.paidAt ? (\r\n                                <strong className='mb-0'>{order.paidAt}</strong>\r\n                              ) : (\r\n                                <div className='d-flex'>\r\n                                  <Image\r\n                                    src='https://img.icons8.com/fluent/24/000000/only-cash.png'\r\n                                    className='pr-1'\r\n                                  />\r\n                                  <strong className='text-danger mb-0'>\r\n                                    Chưa thanh toán\r\n                                  </strong>\r\n                                </div>\r\n                              )}\r\n                            </p>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row className='m-0'>\r\n                          <Col md={5}>\r\n                            <p style={{ color: 'grey' }} className='mb-1'>\r\n                              Thời gian nhận hàng:\r\n                            </p>\r\n                          </Col>\r\n                          <Col md={7}>\r\n                            {order.deliveredAt ? (\r\n                              <strong className='mb-0'>\r\n                                {order.deliveredAt}\r\n                              </strong>\r\n                            ) : (\r\n                              <div className='d-flex'>\r\n                                <Image\r\n                                  src='https://img.icons8.com/fluent/24/000000/only-cash.png'\r\n                                  className='pr-1'\r\n                                />\r\n                                <strong className='text-danger mb-0'>\r\n                                  Chưa nhận hàng\r\n                                </strong>\r\n                              </div>\r\n                            )}\r\n                          </Col>\r\n                        </Row>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className='border-0'>\r\n              <h5\r\n                className='pb-1'\r\n                style={{ borderBottom: '0.04rem solid #ddd' }}\r\n              >\r\n                Chi tiết giỏ hàng\r\n                <Image\r\n                  src='https://img.icons8.com/fluent/28/000000/shopping-cart-loaded.png'\r\n                  className='pl-2'\r\n                />\r\n              </h5>\r\n\r\n              <div className='rounded mt-3'>\r\n                {order.orderItems.map((item, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className='p-3 card_color shadow border mb-1'\r\n                    style={{ backgroundColor: '#F8F8F8' }}\r\n                  >\r\n                    <Row>\r\n                      <Col md={1} className='img_container'>\r\n                        <Image\r\n                          className='img_color'\r\n                          src={item.image}\r\n                          alt={item.name}\r\n                          fluid\r\n                          rounded\r\n                        />\r\n                      </Col>\r\n\r\n                      <Col md={7} className='text-center'>\r\n                        <Link\r\n                          to={`/product/${item.product}`}\r\n                          className='link-product fst-italic'\r\n                        >\r\n                          <p style={{ fontSize: '1.1rem' }} className='pt-3'>\r\n                            {item.name}\r\n                          </p>\r\n                        </Link>\r\n                      </Col>\r\n\r\n                      <Col md={4} className='text-center'>\r\n                        <p\r\n                          style={{ fontSize: '1.1rem' }}\r\n                          className='pt-3 fst-italic'\r\n                        >\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item className='border-0'>\r\n              <div\r\n                className='d-flex justify-content-end '\r\n                style={{ borderTop: '0.04rem solid #ddd' }}\r\n              >\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light rounded-pill mt-4 btn_color_pink'\r\n                  size='normal'\r\n                  style={{\r\n                    width: '14rem',\r\n                    fontSize: '1rem',\r\n                    letterSpacing: '0.25rem',\r\n                  }}\r\n                >\r\n                  DUYỆT\r\n                </Button>\r\n              </div>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Form>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderEditScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressShipping.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import Step from '@material-ui/core/Step'\r\nimport StepConnector from '@material-ui/core/StepConnector'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Check from '@material-ui/icons/Check'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel'\r\nimport CachedIcon from '@material-ui/icons/Cached'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Image, ListGroup, Row, Button, Form } from 'react-bootstrap'\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable'\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n})\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles()\r\n  const { active, completed } = props\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundColor: '#2e5a1c;',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundColor: '#2e5a1c;',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector)\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundColor: '#4e9525;',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundColor: '#4e9525;',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n})\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles()\r\n  const { active, completed } = props\r\n\r\n  const icons = {\r\n    1: <CachedIcon style={{ fontSize: '1.8rem' }} />,\r\n    2: <LocalShippingIcon style={{ fontSize: '1.8rem' }} />,\r\n    3: <EventAvailableIcon style={{ fontSize: '1.8rem' }} />,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  )\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst ProgressShipping = () => {\r\n  const classes = useStyles()\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  // const steps = getSteps()\r\n\r\n  const steps = ['Chờ xác nhận', 'Đang vận chuyển', 'Đã giao hàng']\r\n\r\n  const stepHandler = () => {\r\n    setActiveStep(1)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={steps.indexOf(order.orderStatus)}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label} onChange={stepHandler}>\r\n            {order.orderStatus === label ? (\r\n              <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                <p style={{ fontSize: '1rem' }}>{label}</p>\r\n              </StepLabel>\r\n            ) : (\r\n              <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                <p style={{ fontSize: '1rem' }}>{label}</p>\r\n              </StepLabel>\r\n            )}\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressShipping\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\ImagePay.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\categoriesReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\categoriesConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\CategoriesListScreen.js",["405","406"],"F:\\Code\\shopPro\\frontend\\src\\actions\\categoryAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\CategoryEditScreen.js",["407","408"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from 'react-spinners/ClipLoader'\r\nimport { getCategoryDetails, updateCategory } from '../actions/categoryAction'\r\nimport Message from '../components/Message'\r\nimport MessageSuccess from '../components/MessageSuccess'\r\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoriesConstants'\r\n\r\nconst CategoryEditScreen = ({ match, history }) => {\r\n  const catId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const categoryDetails = useSelector((state) => state.categoryDetails)\r\n  const { loading, error, category } = categoryDetails\r\n\r\n  const categoryUpdate = useSelector((state) => state.categoryUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = categoryUpdate\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateCategory({ _id: catId, name }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: CATEGORY_UPDATE_RESET })\r\n      history.push('/admin/categorieslist')\r\n    } else {\r\n      if (!category.name || category._id !== catId) {\r\n        dispatch(getCategoryDetails(catId))\r\n      } else {\r\n        setName(category.name)\r\n      }\r\n    }\r\n  }, [dispatch, history, catId, category, successUpdate])\r\n\r\n  return (\r\n    <>\r\n      {loadingUpdate && (\r\n        <MessageSuccess variant='Chỉnh sửa thành công'></MessageSuccess>\r\n      )}\r\n      {errorUpdate && <Message>{errorUpdate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Row className='justify-content-center'>\r\n          <Col md={6}>\r\n            <Form\r\n              onSubmit={submitHandler}\r\n              className='p-4 bg-light shadow card_color'\r\n              fluid\r\n            >\r\n              <h2 className='text-center mb-4'>Chỉnh sửa danh mục</h2>\r\n              <Form.Group>\r\n                <Container>\r\n                  <Form.Label\r\n                    as='p'\r\n                    className='mb-1'\r\n                    style={{ fontSize: '1.5rem' }}\r\n                  >\r\n                    Tên danh mục\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    style={{ fontSize: '1.2rem' }}\r\n                    className='border border-grey rounded-pill'\r\n                    type='name'\r\n                    size='normal'\r\n                    placeholder='Enter name'\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Container>\r\n              </Form.Group>\r\n              <div className='pl-3 pr-3 text-center'>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light'\r\n                  className='rounded-pill btn_color_created'\r\n                  style={{\r\n                    fontSize: '1rem',\r\n                    letterSpacing: '0.25rem',\r\n                    width: '20rem',\r\n                  }}\r\n                >\r\n                  Cập nhật\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CategoryEditScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductCreateScreen.js",["409","410","411"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { listCategoriesAdm } from '../actions/categoryAction'\r\nimport { createProduct } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport MessageSuccess from '../components/MessageSuccess'\r\nimport Announcement from '../components/Announcement'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductCreateScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [categoryy, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n  } = productCreate\r\n\r\n  const categoriesList = useSelector((state) => state.categoriesList)\r\n  const { loading: loadingCat, error: errorCat, category } = categoriesList\r\n\r\n  console.log('hihi', category)\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProduct({\r\n        name,\r\n        price,\r\n        description,\r\n        image,\r\n        brand,\r\n        categoryy,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PRODUCT_CREATE_RESET })\r\n    } else {\r\n      if (userInfo) {\r\n        dispatch(listCategoriesAdm())\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, successCreate])\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Link\r\n          to='/admin/productlist'\r\n          className='btn btn-light my-3 text-uppercase rounded-pill'\r\n        >\r\n          <i class='fas fa-arrow-left pr-2'></i>\r\n          Quay về\r\n        </Link>\r\n        {/* {loadingCreate && (\r\n            <Announcement variant='success'> Thêm thành công</Announcement>\r\n          ) && <Loader />}\r\n        {errorCreate && <Announcement>{errorCreate}</Announcement>} */}\r\n        {loadingCreate ? (\r\n          <Announcement> Thêm thành công</Announcement> && <Loader />\r\n        ) : errorCreate ? (\r\n          <Message>{errorCreate}</Message>\r\n        ) : (\r\n          <>\r\n            <Form\r\n              onSubmit={submitHandler}\r\n              className='p-4 bg-light shadow card_color'\r\n              fluid\r\n            >\r\n              <h2 className='text-center mb-4'>Thêm sản phẩm</h2>\r\n\r\n              <Form.Group controlId='name' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Tên sản phẩm\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='image' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1'>\r\n                  Ảnh\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey'\r\n                  type='text'\r\n                  placeholder='Enter image url'\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></Form.Control>\r\n                <Form.File\r\n                  className='border border-grey'\r\n                  id='image-file'\r\n                  label='Choose File'\r\n                  custom\r\n                  onChange={uploadFileHandler}\r\n                ></Form.File>\r\n                {uploading && <Loader />}\r\n              </Form.Group>\r\n\r\n              <Row>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='brand' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Thể loại\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill'\r\n                      type='text'\r\n                      placeholder='Enter brand'\r\n                      value={brand}\r\n                      onChange={(e) => setBrand(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='countInStock' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Số lượng trong kho\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill text-center'\r\n                      type='number'\r\n                      placeholder='Enter countInStock'\r\n                      value={countInStock}\r\n                      onChange={(e) => setCountInStock(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='category' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Danh mục\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill '\r\n                      type='text'\r\n                      as='select'\r\n                      placeholder='Enter category'\r\n                      value={categoryy}\r\n                      onChange={(e) => setCategory(e.target.value)}\r\n                    >\r\n                      <option></option>\r\n                      {category &&\r\n                        category.map((cat, index) => (\r\n                          <option\r\n                            style={{ color: 'black' }}\r\n                            key={index}\r\n                            value={cat._id}\r\n                          >\r\n                            {cat.name}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Form.Group controlId='price' className='pl-3 pr-3'>\r\n                    <Form.Label as='p' className='mb-1 text-center'>\r\n                      Giá\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      className='border border-grey rounded-pill text-center'\r\n                      type='number'\r\n                      placeholder='Enter price'\r\n                      value={price}\r\n                      onChange={(e) => setPrice(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Form.Group controlId='description' className='pl-3 pr-3'>\r\n                <Form.Label as='p' className='mb-1 ml-5'>\r\n                  Nội dung\r\n                </Form.Label>\r\n                <Form.Control\r\n                  className='border border-grey rounded-pill'\r\n                  type='text'\r\n                  rows={3}\r\n                  as='textarea'\r\n                  placeholder='Enter description'\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <div className='pl-3 pr-3 text-center'>\r\n                <Button\r\n                  type='submit'\r\n                  variant='outline-light'\r\n                  className='rounded-pill btn_color_created'\r\n                  style={{\r\n                    fontSize: '1rem',\r\n                    letterSpacing: '0.25rem',\r\n                    width: '20rem',\r\n                  }}\r\n                >\r\n                  Tạo\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductCreateScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\test.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\SkeletonEffect.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductOfCategoryScreen.js",["412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"import React, { useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCategoryDetails } from '../actions/categoryAction'\r\nimport { getProductOfCategory } from '../actions/productActions'\r\nimport FilterNav from '../components/FilterNav'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Paginate from '../components/Paginate'\r\nimport Product from '../components/Product'\r\nimport SkeletonEffect from '../components/SkeletonEffect'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport FaceIcon from '@material-ui/icons/Face'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n}))\r\n\r\nconst ProductOfCategoryScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n  const pageNumber = match.params.pageNumber || 1\r\n  const catId = match.params.id\r\n\r\n  const classes = useStyles()\r\n\r\n  const handleDelete = () => {\r\n    console.info('You clicked the delete icon.')\r\n  }\r\n\r\n  const handleClick = () => {\r\n    console.info('You clicked the Chip.')\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productOfCategory = useSelector((state) => state.productOfCategory)\r\n  const { loading, error, products, pages, page } = productOfCategory\r\n\r\n  const categoryDetails = useSelector((state) => state.categoryDetails)\r\n  const { loading: loadingCat, success: successCat, category } = categoryDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productFilter = useSelector((state) => state.productFilter)\r\n  const {\r\n    loading: loadingFilter,\r\n    success: successFilter,\r\n    product: productsFilter,\r\n  } = productFilter\r\n\r\n  const productFilterPrice = useSelector((state) => state.productFilterPrice)\r\n  const {\r\n    loading: loadingFilterPrice,\r\n    success: successFilterPrice,\r\n    product: productsFilterPrice,\r\n  } = productFilterPrice\r\n\r\n  // console.log('product', product)\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductOfCategory(catId))\r\n\r\n    if (userInfo) {\r\n      dispatch(getCategoryDetails(catId))\r\n    }\r\n  }, [dispatch, userInfo, catId])\r\n\r\n  return (\r\n    <>\r\n      <div className='pt-2'>\r\n        <Meta />\r\n\r\n        {loading ? (\r\n          <SkeletonEffect />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <>\r\n            <Row\r\n              className='card_color shadow ml-2 mr-2'\r\n              style={{ minHeight: '105vh', backgroundColor: '#f8e4b7' }}\r\n            >\r\n              <Col md={3} className='border-right border-danger'>\r\n                <FilterNav />\r\n              </Col>\r\n              <Col md={9}>\r\n                <div className='pt-2 pl-3 pr-3 '>\r\n                  {/* <div className='text-center'>\r\n                    <h5>{category && category.name}</h5>\r\n                  </div> */}\r\n                  <Col md={12} className='d-flex justify-content-center '>\r\n                    {productsFilter &&\r\n                      productsFilter.map((prod) => (\r\n                        <Chip\r\n                          variant='outlined'\r\n                          color='primary'\r\n                          size='small'\r\n                          label={prod.category.name}\r\n                        />\r\n                      ))}\r\n                  </Col>\r\n                  <Row>\r\n                    {/* {loadingFilterPrice ? (\r\n                      <SkeletonEffect />\r\n                    ) : productsFilterPrice ? (\r\n                      productsFilterPrice.map((\r\n                        product // phai co ? de kiem tra product === null\r\n                      ) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                          <Product product={product} />\r\n                        </Col>\r\n                      ))\r\n                    ) : */}\r\n                    {loadingFilter ? (\r\n                      <SkeletonEffect />\r\n                    ) : productsFilter ? (\r\n                      productsFilter.map((\r\n                        product // phai co ? de kiem tra product === null\r\n                      ) => (\r\n                        <>\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} />\r\n                          </Col>\r\n                        </>\r\n                      ))\r\n                    ) : productsFilterPrice ? (\r\n                      productsFilterPrice.map((\r\n                        product // phai co ? de kiem tra product === null\r\n                      ) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                          <Product product={product} />\r\n                        </Col>\r\n                      ))\r\n                    ) : (\r\n                      products.map((\r\n                        product // phai co ? de kiem tra product === null\r\n                      ) => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                          <Product product={product} />\r\n                        </Col>\r\n                      ))\r\n                    )}\r\n                  </Row>\r\n                  <div className='d-flex justify-content-center'>\r\n                    <Paginate\r\n                      pages={pages}\r\n                      page={page}\r\n                      // keyword={keyword ? keyword : ''}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductOfCategoryScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressLine.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\FilterNav.js",["426","427","428","429","430","431"],"import { BookOutlined, DollarOutlined } from '@ant-design/icons'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport { Menu } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listCategories } from '../actions/categoryAction'\r\nimport { Checkbox } from 'antd'\r\nimport { Col, Image, Row, Button, Form } from 'react-bootstrap'\r\nimport { filterPriceProduct, filterProduct } from '../actions/productActions'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4']\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 300,\r\n  },\r\n})\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#52af77',\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider)\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`\r\n}\r\n\r\nconst FilterNav = () => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = useState([0, 5000000])\r\n  const [cat, setCat] = useState([])\r\n  const [start, setStart] = useState('')\r\n  const [end, setEnd] = useState('')\r\n  const [openKeys, setOpenKeys] = React.useState(['sub1'])\r\n\r\n  const onOpenChange = (keys) => {\r\n    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1)\r\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n      setOpenKeys(keys)\r\n    } else {\r\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : [])\r\n    }\r\n  }\r\n  function ValueLabelComponent(props) {\r\n    const { children, open, value } = props\r\n\r\n    props.index === 1 ? setEnd(props.value) : setStart(props.value)\r\n\r\n    return (\r\n      <Tooltip\r\n        open={open}\r\n        enterTouchDelay={0}\r\n        placement='bottom'\r\n        title={value.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n      >\r\n        {children}\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  // console.log('end', end)\r\n  // console.log('start', start)\r\n\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const categoriesList = useSelector((state) => state.categoriesList)\r\n  const { loading, success, category } = categoriesList\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function onChange(checkedValues) {\r\n    if (checkedValues.target.checked === true) {\r\n      setCat([...cat, checkedValues.target.value])\r\n    } else {\r\n      cat.map(\r\n        (e) => e === checkedValues.target.value && cat.splice(cat.indexOf(e), 1)\r\n      )\r\n      setCat([...cat])\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(filterProduct(cat))\r\n    dispatch(filterPriceProduct([start, end]))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={submitHandler}>\r\n        <div className='m-3 mb-0'>\r\n          <h5 className='justify-content-center mt-2 d-flex align-items-center'>\r\n            <Image\r\n              className='mr-2'\r\n              src='https://img.icons8.com/material-outlined/20/000000/filter--v1.png'\r\n            />\r\n            Bộ lọc tìm kiếm\r\n          </h5>\r\n\r\n          <Form.Group>\r\n            <strong className='mb-1 justify-content-center d-flex align-items-center mt-3 '>\r\n              <Image\r\n                className='pl-1 pr-1'\r\n                src='https://img.icons8.com/fluent/24/000000/us-dollar.png'\r\n              />\r\n              Tìm kiếm theo giá\r\n            </strong>\r\n            <div className='d-flex align-items-center justify-content-center mb-1'>\r\n              <p className='pr-1 mb-0'> Giá từ:</p>\r\n              <strong className='mb-0' style={{ letterSpacing: '0.08rem' }}>\r\n                {start.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + 'đ'}\r\n                {\r\n                  <Image\r\n                    className='pl-1 pr-1'\r\n                    src='https://img.icons8.com/fluent/24/000000/resize-horizontal.png'\r\n                  />\r\n                }\r\n                {end.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + 'đ'}\r\n              </strong>\r\n            </div>\r\n            <PrettoSlider\r\n              value={value}\r\n              onChange={handleChange}\r\n              ValueLabelComponent={ValueLabelComponent}\r\n              aria-labelledby='range-slider'\r\n              getAriaValueText={valuetext}\r\n              valueLabelDisplay='auto'\r\n              aria-label='pretto slider'\r\n              min={0}\r\n              step={50000}\r\n              max={5000000}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Menu\r\n              mode='inline'\r\n              openKeys={openKeys}\r\n              onOpenChange={onOpenChange}\r\n              style={{ width: 270 }}\r\n              className='border-0'\r\n            >\r\n              <SubMenu\r\n                key='sub2'\r\n                icon={<BookOutlined />}\r\n                title='Tìm kiếm theo danh mục'\r\n              >\r\n                {category &&\r\n                  category.map((cate, key) => (\r\n                    <Menu.Item key={key}>\r\n                      <Checkbox value={cate._id} onChange={onChange}>\r\n                        {cate.name}\r\n                      </Checkbox>\r\n                    </Menu.Item>\r\n                  ))}\r\n              </SubMenu>\r\n            </Menu>\r\n          </Form.Group>\r\n          <Form.Group className='text-center '>\r\n            <Button\r\n              type='submit'\r\n              size='normal'\r\n              variant='outline-dark rounded-pill p-1 pl-4 pr-4'\r\n              style={{ letterSpacing: '0.08rem', fontSize: '0.85rem' }}\r\n            >\r\n              Tìm kiếm\r\n            </Button>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FilterNav\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Banner.js",[],{"ruleId":"432","replacedBy":"433"},{"ruleId":"434","replacedBy":"435"},{"ruleId":"436","severity":1,"message":"437","line":45,"column":11,"nodeType":"438","messageId":"439","endLine":45,"endColumn":15},{"ruleId":"436","severity":1,"message":"440","line":30,"column":7,"nodeType":"438","messageId":"439","endLine":30,"endColumn":17},{"ruleId":"436","severity":1,"message":"441","line":50,"column":7,"nodeType":"438","messageId":"439","endLine":50,"endColumn":21},{"ruleId":"436","severity":1,"message":"442","line":105,"column":9,"nodeType":"438","messageId":"439","endLine":105,"endColumn":19},{"ruleId":"436","severity":1,"message":"443","line":107,"column":10,"nodeType":"438","messageId":"439","endLine":107,"endColumn":18},{"ruleId":"436","severity":1,"message":"444","line":110,"column":9,"nodeType":"438","messageId":"439","endLine":110,"endColumn":20},{"ruleId":"436","severity":1,"message":"445","line":114,"column":9,"nodeType":"438","messageId":"439","endLine":114,"endColumn":13},{"ruleId":"446","severity":1,"message":"447","line":117,"column":9,"nodeType":"448","endLine":117,"endColumn":42},{"ruleId":"446","severity":1,"message":"447","line":120,"column":9,"nodeType":"448","endLine":120,"endColumn":40},{"ruleId":"436","severity":1,"message":"449","line":131,"column":11,"nodeType":"438","messageId":"439","endLine":131,"endColumn":18},{"ruleId":"436","severity":1,"message":"450","line":131,"column":20,"nodeType":"438","messageId":"439","endLine":131,"endColumn":27},{"ruleId":"451","severity":1,"message":"452","line":176,"column":6,"nodeType":"453","endLine":176,"endColumn":28,"suggestions":"454"},{"ruleId":"446","severity":1,"message":"447","line":584,"column":31,"nodeType":"448","endLine":584,"endColumn":41},{"ruleId":"446","severity":1,"message":"447","line":587,"column":31,"nodeType":"448","endLine":587,"endColumn":41},{"ruleId":"436","severity":1,"message":"455","line":3,"column":15,"nodeType":"438","messageId":"439","endLine":3,"endColumn":24},{"ruleId":"436","severity":1,"message":"456","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":23},{"ruleId":"436","severity":1,"message":"457","line":5,"column":22,"nodeType":"438","messageId":"439","endLine":5,"endColumn":32},{"ruleId":"436","severity":1,"message":"458","line":11,"column":8,"nodeType":"438","messageId":"439","endLine":11,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":26,"column":11,"nodeType":"438","messageId":"439","endLine":26,"endColumn":15},{"ruleId":"436","severity":1,"message":"459","line":30,"column":8,"nodeType":"438","messageId":"439","endLine":30,"endColumn":22},{"ruleId":"436","severity":1,"message":"460","line":12,"column":17,"nodeType":"438","messageId":"439","endLine":12,"endColumn":27},{"ruleId":"436","severity":1,"message":"461","line":13,"column":15,"nodeType":"438","messageId":"439","endLine":13,"endColumn":23},{"ruleId":"436","severity":1,"message":"462","line":14,"column":3,"nodeType":"438","messageId":"439","endLine":14,"endColumn":16},{"ruleId":"436","severity":1,"message":"463","line":20,"column":10,"nodeType":"438","messageId":"439","endLine":20,"endColumn":24},{"ruleId":"436","severity":1,"message":"449","line":55,"column":11,"nodeType":"438","messageId":"439","endLine":55,"endColumn":18},{"ruleId":"436","severity":1,"message":"464","line":55,"column":20,"nodeType":"438","messageId":"439","endLine":55,"endColumn":25},{"ruleId":"436","severity":1,"message":"437","line":55,"column":27,"nodeType":"438","messageId":"439","endLine":55,"endColumn":31},{"ruleId":"436","severity":1,"message":"465","line":7,"column":8,"nodeType":"438","messageId":"439","endLine":7,"endColumn":21},{"ruleId":"436","severity":1,"message":"466","line":8,"column":8,"nodeType":"438","messageId":"439","endLine":8,"endColumn":14},{"ruleId":"436","severity":1,"message":"467","line":13,"column":7,"nodeType":"438","messageId":"439","endLine":13,"endColumn":18},{"ruleId":"436","severity":1,"message":"468","line":20,"column":10,"nodeType":"438","messageId":"439","endLine":20,"endColumn":14},{"ruleId":"436","severity":1,"message":"469","line":21,"column":10,"nodeType":"438","messageId":"439","endLine":21,"endColumn":14},{"ruleId":"436","severity":1,"message":"470","line":22,"column":10,"nodeType":"438","messageId":"439","endLine":22,"endColumn":15},{"ruleId":"436","severity":1,"message":"471","line":33,"column":13,"nodeType":"438","messageId":"439","endLine":33,"endColumn":18},{"ruleId":"436","severity":1,"message":"472","line":16,"column":3,"nodeType":"438","messageId":"439","endLine":16,"endColumn":25},{"ruleId":"436","severity":1,"message":"473","line":17,"column":3,"nodeType":"438","messageId":"439","endLine":17,"endColumn":28},{"ruleId":"436","severity":1,"message":"474","line":18,"column":3,"nodeType":"438","messageId":"439","endLine":18,"endColumn":28},{"ruleId":"475","severity":1,"message":"476","line":165,"column":7,"nodeType":"477","messageId":"478","endLine":165,"endColumn":11},{"ruleId":"475","severity":1,"message":"476","line":166,"column":7,"nodeType":"477","messageId":"478","endLine":166,"endColumn":11},{"ruleId":"436","severity":1,"message":"465","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":21},{"ruleId":"436","severity":1,"message":"479","line":10,"column":10,"nodeType":"438","messageId":"439","endLine":10,"endColumn":16},{"ruleId":"436","severity":1,"message":"480","line":10,"column":18,"nodeType":"438","messageId":"439","endLine":10,"endColumn":25},{"ruleId":"436","severity":1,"message":"481","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":25},{"ruleId":"436","severity":1,"message":"482","line":11,"column":27,"nodeType":"438","messageId":"439","endLine":11,"endColumn":39},{"ruleId":"436","severity":1,"message":"483","line":12,"column":8,"nodeType":"438","messageId":"439","endLine":12,"endColumn":14},{"ruleId":"436","severity":1,"message":"484","line":30,"column":9,"nodeType":"438","messageId":"439","endLine":30,"endColumn":16},{"ruleId":"436","severity":1,"message":"485","line":25,"column":8,"nodeType":"438","messageId":"439","endLine":25,"endColumn":14},{"ruleId":"436","severity":1,"message":"449","line":62,"column":11,"nodeType":"438","messageId":"439","endLine":62,"endColumn":18},{"ruleId":"436","severity":1,"message":"486","line":72,"column":19,"nodeType":"438","messageId":"439","endLine":72,"endColumn":29},{"ruleId":"436","severity":1,"message":"487","line":86,"column":20,"nodeType":"438","messageId":"439","endLine":86,"endColumn":33},{"ruleId":"451","severity":1,"message":"488","line":241,"column":6,"nodeType":"453","endLine":241,"endColumn":41,"suggestions":"489"},{"ruleId":"436","severity":1,"message":"465","line":6,"column":8,"nodeType":"438","messageId":"439","endLine":6,"endColumn":21},{"ruleId":"436","severity":1,"message":"449","line":13,"column":28,"nodeType":"438","messageId":"439","endLine":13,"endColumn":35},{"ruleId":"436","severity":1,"message":"464","line":16,"column":39,"nodeType":"438","messageId":"439","endLine":16,"endColumn":44},{"ruleId":"432","replacedBy":"490"},{"ruleId":"434","replacedBy":"491"},{"ruleId":"436","severity":1,"message":"465","line":8,"column":8,"nodeType":"438","messageId":"439","endLine":8,"endColumn":21},{"ruleId":"436","severity":1,"message":"492","line":1,"column":28,"nodeType":"438","messageId":"439","endLine":1,"endColumn":36},{"ruleId":"451","severity":1,"message":"493","line":79,"column":6,"nodeType":"453","endLine":79,"endColumn":24,"suggestions":"494"},{"ruleId":"436","severity":1,"message":"495","line":52,"column":23,"nodeType":"438","messageId":"439","endLine":52,"endColumn":37},{"ruleId":"436","severity":1,"message":"496","line":65,"column":14,"nodeType":"438","messageId":"439","endLine":65,"endColumn":29},{"ruleId":"451","severity":1,"message":"497","line":112,"column":6,"nodeType":"453","endLine":112,"endColumn":77,"suggestions":"498"},{"ruleId":"436","severity":1,"message":"499","line":262,"column":11,"nodeType":"438","messageId":"439","endLine":262,"endColumn":14},{"ruleId":"436","severity":1,"message":"464","line":24,"column":20,"nodeType":"438","messageId":"439","endLine":24,"endColumn":25},{"ruleId":"451","severity":1,"message":"500","line":51,"column":6,"nodeType":"453","endLine":51,"endColumn":45,"suggestions":"501"},{"ruleId":"436","severity":1,"message":"502","line":1,"column":10,"nodeType":"438","messageId":"439","endLine":1,"endColumn":14},{"ruleId":"436","severity":1,"message":"503","line":27,"column":8,"nodeType":"438","messageId":"439","endLine":27,"endColumn":16},{"ruleId":"436","severity":1,"message":"504","line":256,"column":14,"nodeType":"438","messageId":"439","endLine":256,"endColumn":24},{"ruleId":"436","severity":1,"message":"505","line":257,"column":12,"nodeType":"438","messageId":"439","endLine":257,"endColumn":20},{"ruleId":"436","severity":1,"message":"506","line":277,"column":14,"nodeType":"438","messageId":"439","endLine":277,"endColumn":26},{"ruleId":"436","severity":1,"message":"507","line":278,"column":12,"nodeType":"438","messageId":"439","endLine":278,"endColumn":22},{"ruleId":"436","severity":1,"message":"508","line":279,"column":15,"nodeType":"438","messageId":"439","endLine":279,"endColumn":28},{"ruleId":"436","severity":1,"message":"509","line":284,"column":14,"nodeType":"438","messageId":"439","endLine":284,"endColumn":27},{"ruleId":"436","severity":1,"message":"510","line":285,"column":12,"nodeType":"438","messageId":"439","endLine":285,"endColumn":23},{"ruleId":"436","severity":1,"message":"511","line":293,"column":9,"nodeType":"438","messageId":"439","endLine":293,"endColumn":10},{"ruleId":"451","severity":1,"message":"512","line":310,"column":6,"nodeType":"453","endLine":310,"endColumn":80,"suggestions":"513"},{"ruleId":"436","severity":1,"message":"504","line":35,"column":14,"nodeType":"438","messageId":"439","endLine":35,"endColumn":24},{"ruleId":"436","severity":1,"message":"505","line":36,"column":12,"nodeType":"438","messageId":"439","endLine":36,"endColumn":20},{"ruleId":"436","severity":1,"message":"514","line":2,"column":24,"nodeType":"438","messageId":"439","endLine":2,"endColumn":29},{"ruleId":"436","severity":1,"message":"515","line":2,"column":31,"nodeType":"438","messageId":"439","endLine":2,"endColumn":41},{"ruleId":"436","severity":1,"message":"516","line":4,"column":10,"nodeType":"438","messageId":"439","endLine":4,"endColumn":19},{"ruleId":"436","severity":1,"message":"517","line":4,"column":21,"nodeType":"438","messageId":"439","endLine":4,"endColumn":26},{"ruleId":"436","severity":1,"message":"518","line":5,"column":8,"nodeType":"438","messageId":"439","endLine":5,"endColumn":17},{"ruleId":"436","severity":1,"message":"519","line":1,"column":8,"nodeType":"438","messageId":"439","endLine":1,"endColumn":30},{"ruleId":"436","severity":1,"message":"520","line":2,"column":8,"nodeType":"438","messageId":"439","endLine":2,"endColumn":24},{"ruleId":"436","severity":1,"message":"514","line":4,"column":23,"nodeType":"438","messageId":"439","endLine":4,"endColumn":28},{"ruleId":"436","severity":1,"message":"521","line":7,"column":10,"nodeType":"438","messageId":"439","endLine":7,"endColumn":15},{"ruleId":"436","severity":1,"message":"463","line":10,"column":10,"nodeType":"438","messageId":"439","endLine":10,"endColumn":24},{"ruleId":"436","severity":1,"message":"522","line":10,"column":26,"nodeType":"438","messageId":"439","endLine":10,"endColumn":43},{"ruleId":"436","severity":1,"message":"468","line":21,"column":10,"nodeType":"438","messageId":"439","endLine":21,"endColumn":14},{"ruleId":"436","severity":1,"message":"523","line":21,"column":16,"nodeType":"438","messageId":"439","endLine":21,"endColumn":23},{"ruleId":"436","severity":1,"message":"524","line":22,"column":10,"nodeType":"438","messageId":"439","endLine":22,"endColumn":15},{"ruleId":"436","severity":1,"message":"525","line":22,"column":17,"nodeType":"438","messageId":"439","endLine":22,"endColumn":25},{"ruleId":"436","severity":1,"message":"526","line":23,"column":10,"nodeType":"438","messageId":"439","endLine":23,"endColumn":18},{"ruleId":"436","severity":1,"message":"527","line":23,"column":20,"nodeType":"438","messageId":"439","endLine":23,"endColumn":31},{"ruleId":"436","severity":1,"message":"528","line":24,"column":10,"nodeType":"438","messageId":"439","endLine":24,"endColumn":25},{"ruleId":"436","severity":1,"message":"529","line":24,"column":27,"nodeType":"438","messageId":"439","endLine":24,"endColumn":45},{"ruleId":"436","severity":1,"message":"530","line":25,"column":10,"nodeType":"438","messageId":"439","endLine":25,"endColumn":17},{"ruleId":"436","severity":1,"message":"486","line":25,"column":19,"nodeType":"438","messageId":"439","endLine":25,"endColumn":29},{"ruleId":"436","severity":1,"message":"449","line":30,"column":11,"nodeType":"438","messageId":"439","endLine":30,"endColumn":18},{"ruleId":"436","severity":1,"message":"464","line":30,"column":20,"nodeType":"438","messageId":"439","endLine":30,"endColumn":25},{"ruleId":"436","severity":1,"message":"450","line":36,"column":11,"nodeType":"438","messageId":"439","endLine":36,"endColumn":18},{"ruleId":"436","severity":1,"message":"531","line":45,"column":11,"nodeType":"438","messageId":"439","endLine":45,"endColumn":19},{"ruleId":"451","severity":1,"message":"532","line":72,"column":6,"nodeType":"453","endLine":72,"endColumn":40,"suggestions":"533"},{"ruleId":"436","severity":1,"message":"534","line":7,"column":8,"nodeType":"438","messageId":"439","endLine":7,"endColumn":20},{"ruleId":"436","severity":1,"message":"535","line":8,"column":8,"nodeType":"438","messageId":"439","endLine":8,"endColumn":20},{"ruleId":"436","severity":1,"message":"536","line":9,"column":8,"nodeType":"438","messageId":"439","endLine":9,"endColumn":22},{"ruleId":"436","severity":1,"message":"537","line":13,"column":17,"nodeType":"438","messageId":"439","endLine":13,"endColumn":26},{"ruleId":"436","severity":1,"message":"538","line":14,"column":10,"nodeType":"438","messageId":"439","endLine":14,"endColumn":21},{"ruleId":"436","severity":1,"message":"539","line":15,"column":10,"nodeType":"438","messageId":"439","endLine":15,"endColumn":13},{"ruleId":"436","severity":1,"message":"514","line":15,"column":15,"nodeType":"438","messageId":"439","endLine":15,"endColumn":20},{"ruleId":"436","severity":1,"message":"540","line":15,"column":22,"nodeType":"438","messageId":"439","endLine":15,"endColumn":31},{"ruleId":"436","severity":1,"message":"541","line":15,"column":33,"nodeType":"438","messageId":"439","endLine":15,"endColumn":36},{"ruleId":"436","severity":1,"message":"542","line":15,"column":38,"nodeType":"438","messageId":"439","endLine":15,"endColumn":44},{"ruleId":"436","severity":1,"message":"543","line":15,"column":46,"nodeType":"438","messageId":"439","endLine":15,"endColumn":50},{"ruleId":"436","severity":1,"message":"544","line":168,"column":10,"nodeType":"438","messageId":"439","endLine":168,"endColumn":20},{"ruleId":"436","severity":1,"message":"449","line":171,"column":18,"nodeType":"438","messageId":"439","endLine":171,"endColumn":25},{"ruleId":"436","severity":1,"message":"464","line":171,"column":27,"nodeType":"438","messageId":"439","endLine":171,"endColumn":32},{"ruleId":"436","severity":1,"message":"545","line":291,"column":15,"nodeType":"438","messageId":"439","endLine":291,"endColumn":29},{"ruleId":"436","severity":1,"message":"499","line":309,"column":11,"nodeType":"438","messageId":"439","endLine":309,"endColumn":14},{"ruleId":"436","severity":1,"message":"540","line":2,"column":40,"nodeType":"438","messageId":"439","endLine":2,"endColumn":49},{"ruleId":"436","severity":1,"message":"464","line":18,"column":20,"nodeType":"438","messageId":"439","endLine":18,"endColumn":25},{"ruleId":"436","severity":1,"message":"546","line":10,"column":8,"nodeType":"438","messageId":"439","endLine":10,"endColumn":22},{"ruleId":"436","severity":1,"message":"504","line":37,"column":20,"nodeType":"438","messageId":"439","endLine":37,"endColumn":30},{"ruleId":"436","severity":1,"message":"505","line":37,"column":39,"nodeType":"438","messageId":"439","endLine":37,"endColumn":47},{"ruleId":"436","severity":1,"message":"483","line":13,"column":8,"nodeType":"438","messageId":"439","endLine":13,"endColumn":14},{"ruleId":"436","severity":1,"message":"547","line":15,"column":8,"nodeType":"438","messageId":"439","endLine":15,"endColumn":16},{"ruleId":"436","severity":1,"message":"548","line":16,"column":8,"nodeType":"438","messageId":"439","endLine":16,"endColumn":16},{"ruleId":"436","severity":1,"message":"549","line":30,"column":9,"nodeType":"438","messageId":"439","endLine":30,"endColumn":16},{"ruleId":"436","severity":1,"message":"550","line":31,"column":9,"nodeType":"438","messageId":"439","endLine":31,"endColumn":19},{"ruleId":"436","severity":1,"message":"484","line":34,"column":9,"nodeType":"438","messageId":"439","endLine":34,"endColumn":16},{"ruleId":"436","severity":1,"message":"551","line":36,"column":9,"nodeType":"438","messageId":"439","endLine":36,"endColumn":21},{"ruleId":"436","severity":1,"message":"444","line":40,"column":9,"nodeType":"438","messageId":"439","endLine":40,"endColumn":20},{"ruleId":"436","severity":1,"message":"504","line":50,"column":20,"nodeType":"438","messageId":"439","endLine":50,"endColumn":30},{"ruleId":"436","severity":1,"message":"552","line":50,"column":41,"nodeType":"438","messageId":"439","endLine":50,"endColumn":51},{"ruleId":"436","severity":1,"message":"553","line":50,"column":53,"nodeType":"438","messageId":"439","endLine":50,"endColumn":61},{"ruleId":"436","severity":1,"message":"554","line":58,"column":14,"nodeType":"438","messageId":"439","endLine":58,"endColumn":27},{"ruleId":"436","severity":1,"message":"555","line":64,"column":14,"nodeType":"438","messageId":"439","endLine":64,"endColumn":32},{"ruleId":"436","severity":1,"message":"556","line":65,"column":14,"nodeType":"438","messageId":"439","endLine":65,"endColumn":32},{"ruleId":"436","severity":1,"message":"557","line":1,"column":24,"nodeType":"438","messageId":"439","endLine":1,"endColumn":38},{"ruleId":"436","severity":1,"message":"539","line":11,"column":10,"nodeType":"438","messageId":"439","endLine":11,"endColumn":13},{"ruleId":"436","severity":1,"message":"541","line":11,"column":22,"nodeType":"438","messageId":"439","endLine":11,"endColumn":25},{"ruleId":"436","severity":1,"message":"484","line":59,"column":9,"nodeType":"438","messageId":"439","endLine":59,"endColumn":16},{"ruleId":"436","severity":1,"message":"449","line":105,"column":11,"nodeType":"438","messageId":"439","endLine":105,"endColumn":18},{"ruleId":"436","severity":1,"message":"450","line":105,"column":20,"nodeType":"438","messageId":"439","endLine":105,"endColumn":27},"no-native-reassign",["558"],"no-negated-in-lhs",["559"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorReff' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'menu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loading' is assigned a value but never used.","'success' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["560"],"'Container' is defined but never used.","'LinkContainer' is defined but never used.","'withStyles' is defined but never used.","'ProductCarousel' is defined but never used.","'SkeletonEffect' is defined but never used.","'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","'ListGroupItem' is defined but never used.","'getUserDetails' is defined but never used.","'error' is assigned a value but never used.","'FormContainer' is defined but never used.","'Loader' is defined but never used.","'firebaseApp' is assigned a value but never used.","'name' is assigned a value but never used.","'mail' is assigned a value but never used.","'photo' is assigned a value but never used.","'token' is assigned a value but never used.","'USER_LOGIN_GOOGLE_FAIL' is defined but never used.","'USER_LOGIN_GOOGLE_REQUEST' is defined but never used.","'USER_LOGIN_GOOGLE_SUCCESS' is defined but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","'Upload' is defined but never used.","'message' is defined but never used.","'LoadingOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'Avatar' is defined but never used.","'classes' is assigned a value but never used.","'Banner' is defined but never used.","'setMessage' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.",["561"],["558"],["559"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["562"],"'setOrderStatus' is assigned a value but never used.","'loadingByMember' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["563"],"'did' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["564"],"'Link' is defined but never used.","'Skeleton' is defined but never used.","'loadingCat' is assigned a value but never used.","'errorCat' is assigned a value but never used.","'loadingCatDe' is assigned a value but never used.","'errorCatDe' is assigned a value but never used.","'categoryCatDe' is assigned a value but never used.","'loadingCreate' is assigned a value but never used.","'errorCreate' is assigned a value but never used.","'k' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoryCat', 'createdProduct._id', and 'pageNumber'. Either include them or remove the dependency array. Outer scope values like 'createProduct' aren't valid dependencies because mutating them doesn't re-render the component.",["565"],"'Image' is defined but never used.","'InputGroup' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'InputBase' is defined but never used.","'CheckCircleOutlineIcon' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'toast' is defined but never used.","'updateUserProfile' is defined but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order._id', 'order.orderStatus', and 'orderStatus'. Either include them or remove the dependency array.",["566"],"'GroupAddIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'VideoLabelIcon' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'activeStep' is assigned a value but never used.","'createdProduct' is assigned a value but never used.","'MessageSuccess' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'keyword' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'successCat' is assigned a value but never used.","'category' is assigned a value but never used.","'successFilter' is assigned a value but never used.","'loadingFilterPrice' is assigned a value but never used.","'successFilterPrice' is assigned a value but never used.","'DollarOutlined' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},"Update the dependencies array to be: [open, userInfo, user, dispatch]",{"range":"581","text":"582"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success]",{"range":"583","text":"584"},"Update the dependencies array to be: [history, order._id, success]",{"range":"585","text":"586"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, successByMember, order, userInfo, history]",{"range":"587","text":"588"},"Update the dependencies array to be: [dispatch, user, userId, successUpdate, history]",{"range":"589","text":"590"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, categoryCat, createdProduct._id, pageNumber]",{"range":"591","text":"592"},"Update the dependencies array to be: [dispatch, order._id, order.orderStatus, orderId, orderStatus, successUpdate]",{"range":"593","text":"594"},[4822,4844],"[open, userInfo, user, dispatch]",[7054,7089],"[dispatch, history, userInfo, user, success]",[2324,2342],"[history, order._id, success]",[3475,3546],"[dispatch, orderId, successPay, successDeliver, successByMember, order, userInfo, history]",[1578,1617],"[dispatch, user, userId, successUpdate, history]",[9432,9506],"[dispatch, history, userInfo, successDelete, successCreate, categoryCat, createdProduct._id, pageNumber]",[2266,2300],"[dispatch, order._id, order.orderStatus, orderId, orderStatus, successUpdate]"]