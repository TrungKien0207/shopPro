[{"F:\\Code\\shopPro\\frontend\\src\\index.js":"1","F:\\Code\\shopPro\\frontend\\src\\App.js":"2","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js":"3","F:\\Code\\shopPro\\frontend\\src\\components\\Header.js":"4","F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js":"5","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js":"6","F:\\Code\\shopPro\\frontend\\src\\components\\Product.js":"7","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js":"8","F:\\Code\\shopPro\\frontend\\src\\store.js":"9","F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js":"10","F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js":"11","F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js":"12","F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js":"13","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js":"14","F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js":"15","F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js":"16","F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js":"17","F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js":"18","F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js":"19","F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js":"20","F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js":"21","F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js":"22","F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js":"23","F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js":"24","F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js":"25","F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js":"26","F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js":"27","F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js":"28","F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js":"30","F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js":"31","F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js":"32","F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js":"33","F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js":"34","F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js":"35","F:\\Code\\shopPro\\frontend\\src\\components\\ActiveRating.js":"36","F:\\Code\\shopPro\\frontend\\src\\components\\ButtonComponent.js":"37","F:\\Code\\shopPro\\frontend\\src\\components\\Step.js":"38","F:\\Code\\shopPro\\frontend\\src\\components\\SearchBox.js":"39","F:\\Code\\shopPro\\frontend\\src\\components\\Paginate.js":"40","F:\\Code\\shopPro\\frontend\\src\\components\\ProductCarousel.js":"41","F:\\Code\\shopPro\\frontend\\src\\components\\Meta.js":"42","F:\\Code\\shopPro\\frontend\\src\\screens\\MyOrdersScreen.js":"43","F:\\Code\\shopPro\\frontend\\src\\configAuth.js":"44","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressShipping.js":"45","F:\\Code\\shopPro\\frontend\\src\\components\\ImagePay.js":"46","F:\\Code\\shopPro\\frontend\\src\\reducers\\categoriesReducers.js":"47","F:\\Code\\shopPro\\frontend\\src\\constants\\categoriesConstants.js":"48","F:\\Code\\shopPro\\frontend\\src\\actions\\categoryAction.js":"49","F:\\Code\\shopPro\\frontend\\src\\components\\test.js":"50","F:\\Code\\shopPro\\frontend\\src\\components\\SkeletonEffect.js":"51","F:\\Code\\shopPro\\frontend\\src\\screens\\ProductOfCategoryScreen.js":"52","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressLine.js":"53","F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js":"54","F:\\Code\\shopPro\\frontend\\src\\components\\FilterNav.js":"55","F:\\Code\\shopPro\\frontend\\src\\components\\Banner.js":"56","F:\\Code\\shopPro\\frontend\\src\\actions\\supplierActions.js":"57","F:\\Code\\shopPro\\frontend\\src\\constants\\supplierConstants.js":"58","F:\\Code\\shopPro\\frontend\\src\\reducers\\supplierReducers.js":"59","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\AdminScreen.js":"60","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\Header.js":"61","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\SideBar.js":"62","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\UserListScreen.js":"63","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CategoriesListScreen.js":"64","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductListScreen.js":"65","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductCreateScreen.js":"66","F:\\Code\\shopPro\\frontend\\src\\components\\ProtectedRoute.js":"67","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SupplierListScreen.js":"68","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\OrderListScreen.js":"69","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CategoryEditScreen.js":"70","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\OrderEditScreen.js":"71","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductEditScreen.js":"72","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SupplierEditScreen.js":"73","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\UserEditScreen.js":"74","F:\\Code\\shopPro\\frontend\\src\\actions\\cloudinary.js":"75","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\ListNumber.js":"76","F:\\Code\\shopPro\\frontend\\src\\actions\\notificationsAction.js":"77","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\NotificationsDropDown.js":"78","F:\\Code\\shopPro\\frontend\\src\\screens\\UsersAddressListScreen.js":"79","F:\\Code\\shopPro\\frontend\\src\\actions\\subCategoryAction.js":"80","F:\\Code\\shopPro\\frontend\\src\\constants\\subCategoryConstants.js":"81","F:\\Code\\shopPro\\frontend\\src\\reducers\\subCategoryReducers.js":"82","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SubCategoryListScreen.js":"83","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SubCategoryEditScreen.js":"84","F:\\Code\\shopPro\\frontend\\src\\reducers\\saleReducer.js":"85","F:\\Code\\shopPro\\frontend\\src\\constants\\saleConstants.js":"86","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SaleListScreen.js":"87","F:\\Code\\shopPro\\frontend\\src\\actions\\saleAction.js":"88","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SaleEditScreen.js":"89","F:\\Code\\shopPro\\frontend\\src\\reducers\\codeReducers.js":"90","F:\\Code\\shopPro\\frontend\\src\\constants\\codeConstants.js":"91","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CodeListScreen.js":"92","F:\\Code\\shopPro\\frontend\\src\\actions\\codeAction.js":"93","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CodeEditScreen.js":"94"},{"size":629,"mtime":1620119595981,"results":"95","hashOfConfig":"96"},{"size":10099,"mtime":1622647910073,"results":"97","hashOfConfig":"96"},{"size":362,"mtime":499162500000,"results":"98","hashOfConfig":"96"},{"size":26353,"mtime":1622270941054,"results":"99","hashOfConfig":"96"},{"size":11268,"mtime":1620267385392,"results":"100","hashOfConfig":"96"},{"size":8719,"mtime":1622896877308,"results":"101","hashOfConfig":"96"},{"size":5647,"mtime":1622862600771,"results":"102","hashOfConfig":"96"},{"size":32321,"mtime":1622880547419,"results":"103","hashOfConfig":"96"},{"size":6038,"mtime":1622788358562,"results":"104","hashOfConfig":"96"},{"size":8470,"mtime":1622273387536,"results":"105","hashOfConfig":"96"},{"size":3358,"mtime":1622273283293,"results":"106","hashOfConfig":"96"},{"size":12313,"mtime":1622273320752,"results":"107","hashOfConfig":"96"},{"size":567,"mtime":1615791677731,"results":"108","hashOfConfig":"96"},{"size":689,"mtime":1619547659359,"results":"109","hashOfConfig":"96"},{"size":25252,"mtime":1622897135396,"results":"110","hashOfConfig":"96"},{"size":1184,"mtime":1615605660974,"results":"111","hashOfConfig":"96"},{"size":1425,"mtime":1622660841978,"results":"112","hashOfConfig":"96"},{"size":238,"mtime":1612540677571,"results":"113","hashOfConfig":"96"},{"size":8565,"mtime":1622295495729,"results":"114","hashOfConfig":"96"},{"size":3634,"mtime":1621830105112,"results":"115","hashOfConfig":"96"},{"size":8427,"mtime":1622862804644,"results":"116","hashOfConfig":"96"},{"size":402,"mtime":1612087628650,"results":"117","hashOfConfig":"96"},{"size":10424,"mtime":1621830196924,"results":"118","hashOfConfig":"96"},{"size":9066,"mtime":1622896989589,"results":"119","hashOfConfig":"96"},{"size":25943,"mtime":1622896972607,"results":"120","hashOfConfig":"96"},{"size":12712,"mtime":1622897602804,"results":"121","hashOfConfig":"96"},{"size":1643,"mtime":1612593111433,"results":"122","hashOfConfig":"96"},{"size":3454,"mtime":1622897318215,"results":"123","hashOfConfig":"96"},{"size":13142,"mtime":1622869817694,"results":"124","hashOfConfig":"96"},{"size":6906,"mtime":1622788450573,"results":"125","hashOfConfig":"96"},{"size":2454,"mtime":1622788151463,"results":"126","hashOfConfig":"96"},{"size":9858,"mtime":1622788247953,"results":"127","hashOfConfig":"96"},{"size":20627,"mtime":1622896929127,"results":"128","hashOfConfig":"96"},{"size":855,"mtime":1619547664611,"results":"129","hashOfConfig":"96"},{"size":311,"mtime":1619377332627,"results":"130","hashOfConfig":"96"},{"size":995,"mtime":1618210153490,"results":"131","hashOfConfig":"96"},{"size":1297,"mtime":1619197232259,"results":"132","hashOfConfig":"96"},{"size":3613,"mtime":1619707633985,"results":"133","hashOfConfig":"96"},{"size":2347,"mtime":1620526178345,"results":"134","hashOfConfig":"96"},{"size":2090,"mtime":1621262623606,"results":"135","hashOfConfig":"96"},{"size":1725,"mtime":1616170962837,"results":"136","hashOfConfig":"96"},{"size":514,"mtime":1615015305728,"results":"137","hashOfConfig":"96"},{"size":22583,"mtime":1622896903844,"results":"138","hashOfConfig":"96"},{"size":393,"mtime":1616226016215,"results":"139","hashOfConfig":"96"},{"size":5057,"mtime":1617288730631,"results":"140","hashOfConfig":"96"},{"size":514,"mtime":1617284362928,"results":"141","hashOfConfig":"96"},{"size":3260,"mtime":1622184108559,"results":"142","hashOfConfig":"96"},{"size":1148,"mtime":1617555469184,"results":"143","hashOfConfig":"96"},{"size":4859,"mtime":1617764862267,"results":"144","hashOfConfig":"96"},{"size":0,"mtime":1617780641945,"results":"145","hashOfConfig":"96"},{"size":251,"mtime":1617900546652,"results":"146","hashOfConfig":"96"},{"size":10271,"mtime":1622273916012,"results":"147","hashOfConfig":"96"},{"size":855,"mtime":1618203083711,"results":"148","hashOfConfig":"96"},{"size":1802,"mtime":1611471571179,"results":"149","hashOfConfig":"96"},{"size":9840,"mtime":1622277496044,"results":"150","hashOfConfig":"96"},{"size":1395,"mtime":1622881204334,"results":"151","hashOfConfig":"96"},{"size":4900,"mtime":1619943611553,"results":"152","hashOfConfig":"96"},{"size":1148,"mtime":1619935367616,"results":"153","hashOfConfig":"96"},{"size":3073,"mtime":1619936932800,"results":"154","hashOfConfig":"96"},{"size":4476,"mtime":1622883179326,"results":"155","hashOfConfig":"96"},{"size":25967,"mtime":1622898394663,"results":"156","hashOfConfig":"96"},{"size":7144,"mtime":1622883196484,"results":"157","hashOfConfig":"96"},{"size":19729,"mtime":1622896808950,"results":"158","hashOfConfig":"96"},{"size":20301,"mtime":1622896541922,"results":"159","hashOfConfig":"96"},{"size":22616,"mtime":1622896688531,"results":"160","hashOfConfig":"96"},{"size":23511,"mtime":1622896659933,"results":"161","hashOfConfig":"96"},{"size":815,"mtime":1620138964451,"results":"162","hashOfConfig":"96"},{"size":24829,"mtime":1622896429162,"results":"163","hashOfConfig":"96"},{"size":45724,"mtime":1622896499891,"results":"164","hashOfConfig":"96"},{"size":4658,"mtime":1622896597339,"results":"165","hashOfConfig":"96"},{"size":24723,"mtime":1622884660762,"results":"166","hashOfConfig":"96"},{"size":23869,"mtime":1622896469613,"results":"167","hashOfConfig":"96"},{"size":4079,"mtime":1622896765647,"results":"168","hashOfConfig":"96"},{"size":11223,"mtime":1622896790625,"results":"169","hashOfConfig":"96"},{"size":331,"mtime":1621665934913,"results":"170","hashOfConfig":"96"},{"size":8363,"mtime":1621444444445,"results":"171","hashOfConfig":"96"},{"size":1638,"mtime":1622284180519,"results":"172","hashOfConfig":"96"},{"size":2309,"mtime":1622300352329,"results":"173","hashOfConfig":"96"},{"size":24632,"mtime":1621885852086,"results":"174","hashOfConfig":"96"},{"size":5609,"mtime":1622220915043,"results":"175","hashOfConfig":"96"},{"size":1292,"mtime":1622184210031,"results":"176","hashOfConfig":"96"},{"size":3369,"mtime":1622219738168,"results":"177","hashOfConfig":"96"},{"size":26955,"mtime":1622896753517,"results":"178","hashOfConfig":"96"},{"size":6793,"mtime":1622896408750,"results":"179","hashOfConfig":"96"},{"size":2586,"mtime":1622623266297,"results":"180","hashOfConfig":"96"},{"size":1052,"mtime":1622623140858,"results":"181","hashOfConfig":"96"},{"size":25050,"mtime":1622896740413,"results":"182","hashOfConfig":"96"},{"size":4313,"mtime":1622863348261,"results":"183","hashOfConfig":"96"},{"size":4665,"mtime":1622896718108,"results":"184","hashOfConfig":"96"},{"size":2587,"mtime":1622642951490,"results":"185","hashOfConfig":"96"},{"size":1052,"mtime":1622642499918,"results":"186","hashOfConfig":"96"},{"size":29970,"mtime":1622896627428,"results":"187","hashOfConfig":"96"},{"size":4290,"mtime":1622645351347,"results":"188","hashOfConfig":"96"},{"size":6702,"mtime":1622896616675,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"1shtzj8",{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"192"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"192"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"192"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"192"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"192"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"192"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"192"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"192"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"192"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"192"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"192"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"192"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"192"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"362"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"192"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\Code\\shopPro\\frontend\\src\\index.js",[],["396","397"],"F:\\Code\\shopPro\\frontend\\src\\App.js",["398"],"import { createMuiTheme } from '@material-ui/core/styles'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { BackTop } from 'antd'\nimport React, { Fragment, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { getUserDetails } from './actions/userActions'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport AdminScreen from './screens/admin/AdminScreen'\nimport CategoriesListScreen from './screens/admin/CategoriesListScreen'\nimport CategoryEditScreen from './screens/admin/CategoryEditScreen'\nimport CodeEditScreen from './screens/admin/CodeEditScreen'\nimport CodeListScreen from './screens/admin/CodeListScreen'\nimport OrderEditScreen from './screens/admin/OrderEditScreen'\nimport OrderListScreen from './screens/admin/OrderListScreen'\nimport ProductCreateScreen from './screens/admin/ProductCreateScreen'\nimport ProductEditScreen from './screens/admin/ProductEditScreen'\nimport ProductListScreen from './screens/admin/ProductListScreen'\nimport SaleEditScreen from './screens/admin/SaleEditScreen'\nimport SaleListScreen from './screens/admin/SaleListScreen'\nimport SubCategoryEditScreen from './screens/admin/SubCategoryEditScreen'\nimport SubCategoriesListScreen from './screens/admin/SubCategoryListScreen'\nimport SupplierEditScreen from './screens/admin/SupplierEditScreen'\nimport SupplierListScreen from './screens/admin/SupplierListScreen'\nimport UserEditScreen from './screens/admin/UserEditScreen'\nimport UserListScreen from './screens/admin/UserListScreen'\nimport CartScreen from './screens/CartScreen.js'\nimport HomeScreen from './screens/HomeScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport MyOrdersScreen from './screens/MyOrdersScreen'\nimport OrderScreen from './screens/OrderScreen.js'\nimport { PaymentScreen } from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport ProductOfCategoryScreen from './screens/ProductOfCategoryScreen'\nimport ProductScreen from './screens/ProductScreen.js'\nimport ProfileScreen from './screens/ProfileScreen'\nimport RegisterScreen from './screens/RegisterScreen.js'\nimport { ShippingScreen } from './screens/ShippingScreen'\nimport UsersAddressListScreen from './screens/UsersAddressListScreen'\n\nconst THEME = createMuiTheme({\n   typography: {\n      fontFamily: `\"Quicksand\", \"Roboto\", \"Arial\", sans-serif`,\n   },\n})\n\nconst App = () => {\n   const dispatch = useDispatch()\n   const userLogin = useSelector((state) => state.userLogin)\n   const { userInfo } = userLogin\n\n   const userDetails = useSelector((state) => state.userDetails)\n   const { user } = userDetails\n\n   useEffect(() => {\n      if (userInfo) {\n         dispatch(getUserDetails(userInfo._id))\n      }\n   }, [dispatch, userInfo])\n\n   return (\n      <>\n         <BackTop />\n\n         <Router>\n            <div>\n               <ThemeProvider theme={THEME}>\n                  {/* <Header /> */}\n\n                  <Fragment className='mb-4'>\n                     <Route path='/' component={HomeScreen} exact />\n                     <Route\n                        path='/search/:keyword'\n                        component={HomeScreen}\n                        exact\n                     />\n\n                     <div>\n                        <Route\n                           path='/profile'\n                           component={ProfileScreen}\n                           exact\n                        />\n\n                        <Route path='/cart/:id?' component={CartScreen} exact />\n\n                        <Route\n                           path='/product/:id/category'\n                           component={ProductOfCategoryScreen}\n                           exact\n                        />\n\n                        <Route\n                           path='/product/:id'\n                           component={ProductScreen}\n                           exact\n                        />\n                        <Route\n                           path='/order/:id'\n                           component={OrderScreen}\n                           exact\n                        />\n                        <Route\n                           path='/myorders'\n                           component={MyOrdersScreen}\n                           exact\n                        />\n                        <Route\n                           path='/register'\n                           component={RegisterScreen}\n                           exact\n                        />\n                        <Route\n                           path='/shipping'\n                           component={ShippingScreen}\n                           exact\n                        />\n                        <Route path='/login' component={LoginScreen} exact />\n                        <Route\n                           path='/placeorder'\n                           component={PlaceOrderScreen}\n                           exact\n                        />\n                        <Route\n                           path='/payment'\n                           component={PaymentScreen}\n                           exact\n                        />\n                        <Route\n                           path='/page/:pageNumber'\n                           component={HomeScreen}\n                           exact\n                        />\n                        <Route\n                           path='/profile/address'\n                           component={UsersAddressListScreen}\n                           exact\n                        />\n                        <Route\n                           path='/search/:keyword/page/:pageNumber'\n                           component={HomeScreen}\n                           exact\n                        />\n                     </div>\n\n                     <Container>\n                        <Route\n                           path='/admin/productlist/:pageNumber'\n                           component={ProductListScreen}\n                           exact\n                        />\n                     </Container>\n                  </Fragment>\n                  {/* <Footer /> */}\n                  <Route path='/admin' component={AdminScreen} exact />\n\n                  <ProtectedRoute\n                     path='/admin/userlist'\n                     isAdmin={true}\n                     component={UserListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/categorieslist'\n                     component={CategoriesListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/subcategorieslist'\n                     component={SubCategoriesListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/productlist'\n                     component={ProductListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/product/create'\n                     component={ProductCreateScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/supplierlist'\n                     component={SupplierListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/codelist'\n                     component={CodeListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/orderlist'\n                     component={OrderListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/category/:id/edit'\n                     component={CategoryEditScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/code/:id/edit'\n                     component={CodeEditScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/salelist'\n                     component={SaleListScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/subcategory/:id/edit'\n                     component={SubCategoryEditScreen}\n                     exact\n                  />\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/sale/:id/edit'\n                     component={SaleEditScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/order/:id/edit'\n                     component={OrderEditScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/product/:id/edit'\n                     component={ProductEditScreen}\n                     exact\n                  />\n\n                  <ProtectedRoute\n                     isAdmin={true}\n                     path='/admin/supplier/:id/edit'\n                     component={SupplierEditScreen}\n                     exact\n                  />\n\n                  <Route\n                     isAdmin={true}\n                     path='/admin/user/:id/edit'\n                     component={UserEditScreen}\n                     exact\n                  />\n               </ThemeProvider>\n            </div>\n         </Router>\n      </>\n   )\n}\n\nexport default App\n","F:\\Code\\shopPro\\frontend\\src\\reportWebVitals.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Header.js",["399","400","401","402","403","404","405","406","407","408"],"// import { Menu } from '@material-ui/core'\r\n// import { Link } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Badge from '@material-ui/core/Badge'\r\nimport Button from '@material-ui/core/Button'\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport Grow from '@material-ui/core/Grow'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport MenuList from '@material-ui/core/MenuList'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport { Menu } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport { black } from 'colors'\r\nimport firebase from 'firebase'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Container, Image, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Route, useHistory } from 'react-router-dom'\r\nimport { listCategories } from '../actions/categoryAction'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\nimport { listSubCategory } from '../actions/subCategoryAction'\r\n\r\nconst StyledMenu = withStyles({\r\n   paper: {\r\n      border: '1px solid #d3d4d5',\r\n   },\r\n})((props) => (\r\n   <Menu\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n         vertical: 'bottom',\r\n         horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n         vertical: 'top',\r\n         horizontal: 'center',\r\n      }}\r\n      {...props}\r\n   />\r\n))\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n   root: {\r\n      '&:focus': {\r\n         backgroundColor: theme.palette.primary.main,\r\n         '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n            color: theme.palette.common.white,\r\n         },\r\n      },\r\n   },\r\n}))(MenuItem)\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      display: 'flex',\r\n   },\r\n   paper: {\r\n      marginRight: theme.spacing(1),\r\n      zIndex: '7 !important',\r\n   },\r\n   orange: {\r\n      color: theme.palette.getContrastText(deepOrange[500]),\r\n      backgroundColor: deepOrange[500],\r\n      width: theme.spacing(4),\r\n      height: theme.spacing(4),\r\n   },\r\n   link: {\r\n      color: black,\r\n      '&:hover': {\r\n         color: '#002984',\r\n         textDecoration: 'none',\r\n      },\r\n      '&:active': {\r\n         color: '#002984',\r\n         textDecoration: 'none',\r\n      },\r\n      '&:visited': {\r\n         color: '#002984',\r\n         textDecoration: 'none',\r\n      },\r\n   },\r\n}))\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n   badge: {\r\n      right: -3,\r\n      top: 13,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n   },\r\n}))(Badge)\r\n\r\nfunction Header(props) {\r\n   const classes = useStyles()\r\n   const [open, setOpen] = React.useState(false)\r\n   const anchorRef = React.useRef(null)\r\n   const anchorReff = React.useRef(null)\r\n   const history = useHistory()\r\n   const [anchorEl, setAnchorEl] = useState(null)\r\n   // const [menu, setMenu] = useState(false)\r\n\r\n   const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget)\r\n   }\r\n\r\n   const menu = (\r\n      <Menu>\r\n         <Menu.Item key='0'>\r\n            <a to='https://www.antgroup.com'>1st menu item</a>\r\n         </Menu.Item>\r\n         <Menu.Item key='1'>\r\n            <a to='https://www.aliyun.com'>2nd menu item</a>\r\n         </Menu.Item>\r\n         <Menu.Divider />\r\n         <Menu.Item key='3'>3rd menu item</Menu.Item>\r\n      </Menu>\r\n   )\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { user } = userDetails\r\n\r\n   const categoriesList = useSelector((state) => state.categoriesList)\r\n   const { category } = categoriesList\r\n\r\n   const subCategoryList = useSelector((state) => state.subCategoryList)\r\n   const { Sub } = subCategoryList\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const cart = useSelector((state) => state.cart)\r\n   const { cartItems } = cart\r\n\r\n   const logoutHandler = () => {\r\n      firebase.auth().signOut()\r\n      dispatch(logout())\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      history.push('/')\r\n   }\r\n\r\n   const handleToggle = () => {\r\n      setOpen((prevOpen) => !prevOpen)\r\n   }\r\n\r\n   const handleClose = (event) => {\r\n      if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n         return\r\n      }\r\n\r\n      setOpen(false)\r\n   }\r\n\r\n   function handleListKeyDown(event) {\r\n      if (event.key === 'Tab') {\r\n         event.preventDefault()\r\n         setOpen(false)\r\n      }\r\n   }\r\n\r\n   // return focus to the button when we transitioned from !open -> open\r\n   const prevOpen = React.useRef(open)\r\n   useEffect(() => {\r\n      if (prevOpen.current === true && open === false) {\r\n         anchorRef.current.focus()\r\n      }\r\n\r\n      dispatch(listCategories())\r\n      dispatch(listSubCategory())\r\n\r\n      prevOpen.current = open\r\n   }, [open, userInfo, user])\r\n\r\n   return (\r\n      <>\r\n         <Navbar\r\n            expand='lg'\r\n            collapseOnSelect\r\n            className='p-0 pl-5 pr-5 m-0 shadow'\r\n            style={{ backgroundColor: '#edfead', height: '4rem' }}\r\n         >\r\n            <Container fluid>\r\n               <LinkContainer to='/'>\r\n                  <Navbar.Brand className='text-uppercase font-weight-bold flex-grow-1 '>\r\n                     {/* <h2>ProShop</h2> */}\r\n                     <Image\r\n                        className='border-bottom border-danger'\r\n                        src='/logo/logo_white.png'\r\n                        style={{ width: '6rem', height: '5rem', zIndex: '0' }}\r\n                     />\r\n                  </Navbar.Brand>\r\n               </LinkContainer>\r\n               <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\r\n               <Route\r\n                  render={({ history }) => <SearchBox history={history} />}\r\n               />\r\n               <Navbar.Collapse id='basic-navbar-nav'>\r\n                  <Nav className='ml-auto' inline>\r\n                     <LinkContainer to='/cart'>\r\n                        <Nav.Link className='text-uppercase'>\r\n                           <IconButton aria-label='cart'>\r\n                              <StyledBadge\r\n                                 badgeContent={cartItems.length}\r\n                                 color='secondary'\r\n                              >\r\n                                 <ShoppingCartIcon />\r\n                              </StyledBadge>\r\n                           </IconButton>\r\n                        </Nav.Link>\r\n                     </LinkContainer>\r\n\r\n                     {userInfo ? (\r\n                        <>\r\n                           <Button\r\n                              ref={anchorRef}\r\n                              aria-controls={\r\n                                 open ? 'menu-list-grow' : undefined\r\n                              }\r\n                              aria-haspopup='true'\r\n                              onClick={handleToggle}\r\n                              className='ml-2  mt-1 mb-1 rounded-circle'\r\n                           >\r\n                              {userInfo ? (\r\n                                 <Image\r\n                                    className='rounded-circle border border-grey'\r\n                                    src={\r\n                                       userDetails.user\r\n                                          ? userDetails.user?.avatar?.url\r\n                                          : userDetails.user.avatar?.url\r\n                                    }\r\n                                    alt={\r\n                                       userDetails.user && userDetails.user.name\r\n                                    }\r\n                                    style={{\r\n                                       width: '2.5rem',\r\n                                       height: '2.5rem',\r\n                                    }}\r\n                                    fluid\r\n                                 />\r\n                              ) : (\r\n                                 <Avatar className={classes.orange}>\r\n                                    {userInfo.name.substring(0, 1)}\r\n                                 </Avatar>\r\n                              )}\r\n                           </Button>\r\n                           <Popper\r\n                              open={open}\r\n                              anchorEl={anchorRef.current}\r\n                              role={undefined}\r\n                              transition\r\n                              disablePortal\r\n                              style={{ zIndex: '2' }}\r\n                           >\r\n                              {({ TransitionProps, placement }) => (\r\n                                 <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{\r\n                                       transformOrigin:\r\n                                          placement === 'bottom'\r\n                                             ? 'center top'\r\n                                             : 'center bottom',\r\n                                    }}\r\n                                 >\r\n                                    <Paper>\r\n                                       <ClickAwayListener\r\n                                          onClickAway={handleClose}\r\n                                       >\r\n                                          <MenuList\r\n                                             autoFocusItem={open}\r\n                                             id='menu-list-grow'\r\n                                             onKeyDown={handleListKeyDown}\r\n                                          >\r\n                                             {userInfo && userInfo.isAdmin && (\r\n                                                <MenuItem onClick={handleClose}>\r\n                                                   <Link\r\n                                                      to='/admin'\r\n                                                      className={classes.link}\r\n                                                      style={{\r\n                                                         color: 'black',\r\n                                                         fontSize: '0.8rem',\r\n                                                         letterSpacing:\r\n                                                            '0.05rem',\r\n                                                      }}\r\n                                                   >\r\n                                                      <Image\r\n                                                         src='https://img.icons8.com/fluent/24/000000/user-male-circle.png'\r\n                                                         className='pr-1'\r\n                                                      />\r\n                                                      <strong className='text-capitalize'>\r\n                                                         Quản lí\r\n                                                      </strong>\r\n                                                   </Link>\r\n                                                </MenuItem>\r\n                                             )}\r\n                                             <MenuItem onClick={handleClose}>\r\n                                                <Link\r\n                                                   to='/profile'\r\n                                                   className={classes.link}\r\n                                                   style={{\r\n                                                      color: 'black',\r\n                                                      fontSize: '0.8rem',\r\n                                                      letterSpacing: '0.05rem',\r\n                                                   }}\r\n                                                >\r\n                                                   <Image\r\n                                                      src='https://img.icons8.com/fluent/24/000000/user-male-circle.png'\r\n                                                      className='pr-1'\r\n                                                   />\r\n                                                   <strong className='text-capitalize'>\r\n                                                      Thông tin cá nhân\r\n                                                   </strong>\r\n                                                </Link>\r\n                                             </MenuItem>\r\n\r\n                                             <MenuItem onClick={handleClose}>\r\n                                                <Link\r\n                                                   to='/myorders'\r\n                                                   className={classes.link}\r\n                                                   style={{\r\n                                                      color: 'black',\r\n                                                      fontSize: '0.8rem',\r\n                                                      letterSpacing: '0.05rem',\r\n                                                   }}\r\n                                                >\r\n                                                   <Image\r\n                                                      src='https://img.icons8.com/fluent/24/000000/receipt-dollar.png'\r\n                                                      className='pr-1'\r\n                                                   />\r\n                                                   <strong className='text-capitalize'>\r\n                                                      Đơn hàng của tôi\r\n                                                   </strong>\r\n                                                </Link>\r\n                                             </MenuItem>\r\n\r\n                                             <MenuItem\r\n                                                onClick={logoutHandler}\r\n                                                style={{\r\n                                                   color: 'black',\r\n                                                   fontSize: '0.8rem',\r\n                                                   letterSpacing: '0.05rem',\r\n                                                }}\r\n                                             >\r\n                                                <Link\r\n                                                   to='/'\r\n                                                   className={classes.link}\r\n                                                   style={{\r\n                                                      color: 'black',\r\n                                                      fontSize: '0.8rem',\r\n                                                      letterSpacing: '0.05rem',\r\n                                                   }}\r\n                                                >\r\n                                                   <Image\r\n                                                      className='pr-1'\r\n                                                      src='https://img.icons8.com/fluent/24/000000/exit.png'\r\n                                                   />\r\n                                                   <strong className='text-capitalize'>\r\n                                                      Đăng Xuất\r\n                                                   </strong>\r\n                                                </Link>\r\n                                             </MenuItem>\r\n                                          </MenuList>\r\n                                       </ClickAwayListener>\r\n                                    </Paper>\r\n                                 </Grow>\r\n                              )}\r\n                           </Popper>\r\n                        </>\r\n                     ) : (\r\n                        <>\r\n                           <Button\r\n                              ref={anchorRef}\r\n                              aria-controls={\r\n                                 open ? 'menu-list-grow' : undefined\r\n                              }\r\n                              aria-haspopup='true'\r\n                              onClick={handleToggle}\r\n                              className='ml-2 mt-1 mb-1 rounded-circle'\r\n                           >\r\n                              <Image src='https://img.icons8.com/fluent/30/000000/circled-menu.png' />\r\n                           </Button>\r\n                           <Popper\r\n                              open={open}\r\n                              anchorEl={anchorRef.current}\r\n                              role={undefined}\r\n                              transition\r\n                              disablePortal\r\n                              style={{ zIndex: '2' }}\r\n                           >\r\n                              {({ TransitionProps, placement }) => (\r\n                                 <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{\r\n                                       transformOrigin:\r\n                                          placement === 'bottom'\r\n                                             ? 'center top'\r\n                                             : 'center bottom',\r\n                                    }}\r\n                                 >\r\n                                    <Paper>\r\n                                       <ClickAwayListener\r\n                                          onClickAway={handleClose}\r\n                                       >\r\n                                          <MenuList\r\n                                             autoFocusItem={open}\r\n                                             id='menu-list-grow'\r\n                                             onKeyDown={handleListKeyDown}\r\n                                          >\r\n                                             <MenuItem\r\n                                                onClick={handleClose}\r\n                                                style={{\r\n                                                   color: 'black',\r\n                                                   fontSize: '0.8rem',\r\n                                                   letterSpacing: '0.05rem',\r\n                                                }}\r\n                                             >\r\n                                                <Link\r\n                                                   to='/login'\r\n                                                   className={classes.link}\r\n                                                >\r\n                                                   <Image\r\n                                                      className='pr-1'\r\n                                                      src='https://img.icons8.com/fluent/24/000000/key.png'\r\n                                                   />\r\n                                                   <strong className='text-capitalize'>\r\n                                                      Đăng Nhập\r\n                                                   </strong>\r\n                                                </Link>\r\n                                             </MenuItem>\r\n                                             <MenuItem\r\n                                                onClick={handleClose}\r\n                                                style={{\r\n                                                   color: 'black',\r\n                                                   fontSize: '0.8rem',\r\n                                                   letterSpacing: '0.05rem',\r\n                                                }}\r\n                                             >\r\n                                                <Link\r\n                                                   to='/register'\r\n                                                   className={classes.link}\r\n                                                >\r\n                                                   <Image\r\n                                                      className='pr-1'\r\n                                                      src='https://img.icons8.com/fluent/24/000000/new-contact.png'\r\n                                                   />\r\n                                                   <strong className='text-capitalize'>\r\n                                                      Đăng Kí\r\n                                                   </strong>\r\n                                                </Link>\r\n                                             </MenuItem>\r\n                                          </MenuList>\r\n                                       </ClickAwayListener>\r\n                                    </Paper>\r\n                                 </Grow>\r\n                              )}\r\n                           </Popper>\r\n                        </>\r\n                     )}\r\n                  </Nav>\r\n               </Navbar.Collapse>\r\n            </Container>\r\n         </Navbar>\r\n         <Navbar\r\n            expand='lg'\r\n            collapseOnSelect\r\n            className='p-0 pl-5 pr-5'\r\n            style={{ backgroundColor: '#edfead' }}\r\n            variant='tabs'\r\n         >\r\n            {/* <Row>\r\n          <Col md={12} className='pl-5'> */}\r\n            {/* <div className='d-flex justify-content-around'>\r\n            {category &&\r\n              category.map((cat) => (\r\n                <div className='container_link_color'>\r\n                  <Dropdown overlay={menu}>\r\n                    <Link\r\n                      to='/product'\r\n                      className='ant-dropdown-link text-decoration-none link_color'\r\n                      onClick={(e) => e.preventDefault()}\r\n                      style={{ fontSize: '1rem' }}\r\n                    >\r\n                      {cat.name}\r\n                      <DownOutlined\r\n                        className='pl-1'\r\n                        style={{ fontSize: '0.5rem' }}\r\n                      />\r\n                    </Link>\r\n                  </Dropdown>\r\n                </div>\r\n              ))}\r\n          </div> */}\r\n            <div class='collapse navbar-collapse pl-2 pr-2' id='main_nav'>\r\n               <ul className='navbar-nav'>\r\n                  <li class='nav-item active' style={{ fontSize: '0.85rem' }}>\r\n                     <Link className='nav-link' to='/'>\r\n                        Trang chủ\r\n                     </Link>\r\n                  </li>\r\n\r\n                  <li class='nav-item active' style={{ fontSize: '0.85rem' }}>\r\n                     <Link className='nav-link' to='/'>\r\n                        Giới thiệu\r\n                     </Link>\r\n                  </li>\r\n                  <li\r\n                     className='nav-item dropdown has-megamenu'\r\n                     style={{ fontSize: '0.85rem' }}\r\n                  >\r\n                     <Link\r\n                        className='nav-link dropdown-toggle'\r\n                        to='#'\r\n                        data-bs-toggle='dropdown'\r\n                     >\r\n                        Danh mục\r\n                     </Link>\r\n                     <div\r\n                        className='dropdown-menu megamenu border border-secondary shadow'\r\n                        style={{ borderRadius: '2rem' }}\r\n                        role='menu'\r\n                     >\r\n                        <div className='row g-6' style={{ width: '30rem' }}>\r\n                           {category &&\r\n                              category.map((cat) => (\r\n                                 <div className='col-lg-4 col-8 text-center pt-2 pb-2'>\r\n                                    <div className='col-megamenu container_link_color'>\r\n                                       <LinkContainer\r\n                                          to={`/product/${cat._id}/category`}\r\n                                          className='link_color'\r\n                                       >\r\n                                          <h6\r\n                                             className='title'\r\n                                             style={{ fontSize: '0.85rem' }}\r\n                                          >\r\n                                             {cat.name}\r\n                                          </h6>\r\n                                       </LinkContainer>\r\n                                       <ul className='list-unstyled'>\r\n                                          {Sub &&\r\n                                             Sub?.map((s) => (\r\n                                                <li>\r\n                                                   <Link\r\n                                                      to={`/product/${s._id}/category`}\r\n                                                   >\r\n                                                      {s.category === cat._id &&\r\n                                                         s.name}\r\n                                                   </Link>\r\n                                                </li>\r\n                                             ))}\r\n                                       </ul>\r\n                                    </div>\r\n                                 </div>\r\n                              ))}\r\n                        </div>\r\n                     </div>\r\n                  </li>\r\n\r\n                  <li class='nav-item active' style={{ fontSize: '0.85rem' }}>\r\n                     <Link className='nav-link' to='/'>\r\n                        Liên hệ\r\n                     </Link>\r\n                  </li>\r\n               </ul>\r\n            </div>\r\n            {/* </Col>\r\n        </Row> */}\r\n         </Navbar>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Header\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Footer.js",["409","410","411"],"import { Link } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { Col, Container, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport { black } from 'colors'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n\r\n  link: {\r\n    color: black,\r\n    '&:hover': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n    '&:active': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n    '&:visited': {\r\n      color: '#002984',\r\n      textDecoration: 'none',\r\n    },\r\n  },\r\n}))\r\n\r\nFooter.propTypes = {}\r\n\r\nfunction Footer(props) {\r\n  const classes = useStyles()\r\n  return (\r\n    <footer style={{ backgroundColor: '#edfead' }}>\r\n      <div className='pl-5 pb-4  pr-5'>\r\n        <Row>\r\n          <Col md={2}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Hỗ trợ</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Hình thức giao hàng\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Hình thức thanh toán\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Chính sách đổi trả\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Chính sách bảo hành\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Thông tin</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Tuyển dụng\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Góp ý\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Giải đáp thắc mắc\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup className='pt-5 pb-4'>\r\n              <h5>Về Natural Food</h5>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Giới thiệu\r\n                </Link>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <Link\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                  href='/'\r\n                >\r\n                  Liên hệ\r\n                </Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={5}>\r\n            <ListGroup>\r\n              <div className='d-flex justify-content-center'>\r\n                <Image\r\n                  src='/logo/logo_white.png'\r\n                  style={{ width: '9rem', height: '8rem', zIndex: '0' }}\r\n                />\r\n              </div>\r\n\r\n              <div className='d-flex justify-content-evenly'>\r\n                <Link\r\n                  href='#'\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/gmail-new.png' />\r\n                </Link>\r\n                <Link\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                  href='#'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/facebook-new.png' />\r\n                </Link>\r\n                <Link\r\n                  className='border bg-secondary p-2 rounded-circle'\r\n                  href='#'\r\n                >\r\n                  <Image src='https://img.icons8.com/fluent/24/000000/twitter.png' />\r\n                </Link>\r\n              </div>\r\n\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Địa chỉ: </strong>\r\n                    <p className='mb-0 pl-1'>\r\n                      22 Lý Chiêu Hoàng, Phường 10, Quận 6, TP HCM\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Email: </strong>\r\n                    <p className='mb-0 pl-1'>tuvan_online@naturalfood.com.vn</p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Số điện thoại: </strong>\r\n                    <p className='mb-0 pl-1'>(028) 38 753 443</p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <strong>Hotline: </strong>\r\n                    <p className='mb-0 pl-1'>\r\n                      19002126 ( cước phí: 3000đ/phút )\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                className='border-0 p-0 pt-2'\r\n                style={{ backgroundColor: '#edfead' }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    color: 'black',\r\n                    fontSize: '0.875rem',\r\n                    letterSpacing: '0.05rem',\r\n                  }}\r\n                  className={classes.link + 'pt-1'}\r\n                >\r\n                  <div className='d-flex justify-content-start'>\r\n                    <p className='mb-0'>\r\n                      Thời gian tư vấn: Từ 07h30 đến 12h15, 13h15 đến 21h30 các\r\n                      ngày trong tuần ( Trừ ngày Lễ, Tết)\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\HomeScreen.js",["412","413","414","415"],"F:\\Code\\shopPro\\frontend\\src\\components\\Product.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductScreen.js",["416","417","418","419"],"F:\\Code\\shopPro\\frontend\\src\\store.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\productReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\productConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\productActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Loader.js",["420","421"],"import { useState } from 'react'\r\nimport { css } from '@emotion/core'\r\nimport ClipLoader from 'react-spinners/ClipLoader'\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`\r\n\r\nfunction Loader() {\r\n  let [loading, setLoading] = useState(true)\r\n  let [color, setColor] = useState('orange')\r\n\r\n  return (\r\n    <div className='sweet-loading text-center'>\r\n      <ClipLoader color={color} loading={loading} css={override} size={60} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Message.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\CartScreen.js",["422","423","424","425","426","427"],"F:\\Code\\shopPro\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\cartActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\cartConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\userReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\userConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\LoginScreen.js",["428","429","430","431","432"],"F:\\Code\\shopPro\\frontend\\src\\components\\FormContainer.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\userActions.js",["433","434"],"import axios from 'axios'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport {\r\n   CLEAR_ERRORS,\r\n   USER_CREATE_ADDRESS_FAIL,\r\n   USER_CREATE_ADDRESS_REQUEST,\r\n   USER_CREATE_ADDRESS_SUCCESS,\r\n   USER_DELETE_ADDRESS_FAIL,\r\n   USER_DELETE_ADDRESS_REQUEST,\r\n   USER_DELETE_ADDRESS_SUCCESS,\r\n   USER_DELETE_FAIL,\r\n   USER_DELETE_REQUEST,\r\n   USER_DELETE_SUCCESS,\r\n   USER_DETAILS_FAIL,\r\n   USER_DETAILS_REQUEST,\r\n   USER_DETAILS_RESET,\r\n   USER_DETAILS_SUCCESS,\r\n   USER_EDIT_ADDRESS_FAIL,\r\n   USER_EDIT_ADDRESS_REQUEST,\r\n   USER_EDIT_ADDRESS_SUCCESS,\r\n   USER_LIST_FAIL,\r\n   USER_LIST_REQUEST,\r\n   USER_LIST_RESET,\r\n   USER_LIST_SUCCESS,\r\n   USER_LOGIN_FAIL,\r\n   USER_LOGIN_REQUEST,\r\n   USER_LOGIN_SUCCESS,\r\n   USER_LOGOUT,\r\n   USER_REGISTER_FAIL,\r\n   USER_REGISTER_REQUEST,\r\n   USER_REGISTER_SUCCESS,\r\n   USER_SELECT_ROLE_FAIL,\r\n   USER_SELECT_ROLE_REQUEST,\r\n   USER_SELECT_ROLE_SUCCESS,\r\n   USER_UPDATE_FAIL,\r\n   USER_UPDATE_PROFILE_FAIL,\r\n   USER_UPDATE_PROFILE_REQUEST,\r\n   USER_UPDATE_PROFILE_SUCCESS,\r\n   USER_UPDATE_REQUEST,\r\n   USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_LOGIN_REQUEST,\r\n      })\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n         '/api/users/login',\r\n         { email, password },\r\n         config\r\n      )\r\n\r\n      dispatch({\r\n         type: USER_LOGIN_SUCCESS,\r\n         payload: data,\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_LOGIN_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const register = (name, email, avatar, password) => async (dispatch) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_REGISTER_REQUEST,\r\n      })\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.post(\r\n         '/api/users',\r\n         { name, email, avatar, password },\r\n         config\r\n      )\r\n\r\n      dispatch({\r\n         type: USER_LOGIN_SUCCESS,\r\n         payload: data,\r\n      })\r\n\r\n      dispatch({\r\n         type: USER_REGISTER_SUCCESS,\r\n         payload: data,\r\n      })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_REGISTER_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_DETAILS_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n      dispatch({\r\n         type: USER_DETAILS_SUCCESS,\r\n         payload: data,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_DETAILS_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_UPDATE_PROFILE_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.put('/api/users/profile', user, config)\r\n\r\n      console.log('data post update profile', data)\r\n\r\n      dispatch({\r\n         type: USER_UPDATE_PROFILE_SUCCESS,\r\n         type: USER_LOGOUT,\r\n         type: USER_DETAILS_RESET,\r\n         payload: data,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_UPDATE_PROFILE_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n   localStorage.removeItem('userInfo')\r\n   dispatch({ type: USER_LOGOUT })\r\n   dispatch({ type: USER_DETAILS_RESET })\r\n   dispatch({ type: ORDER_LIST_MY_RESET })\r\n   dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_LIST_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.get('/api/users', config)\r\n\r\n      dispatch({\r\n         type: USER_LIST_SUCCESS,\r\n         payload: data,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_LIST_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_DELETE_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      await axios.delete(`/api/users/${id}`, config)\r\n\r\n      dispatch({\r\n         type: USER_DELETE_SUCCESS,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_DELETE_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_UPDATE_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_UPDATE_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const deleteAddressUser = (id) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_DELETE_ADDRESS_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      console.log('id address', id)\r\n\r\n      await axios.post('/api/users/deleteaddress', id, config)\r\n\r\n      dispatch({\r\n         type: USER_DELETE_ADDRESS_SUCCESS,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_DELETE_ADDRESS_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const createAddressUser = (address) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_CREATE_ADDRESS_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      await axios.post('/api/users/createaddress', address, config)\r\n\r\n      dispatch({\r\n         type: USER_CREATE_ADDRESS_SUCCESS,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_CREATE_ADDRESS_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const updateAddressUser = (address) => async (dispatch, getState) => {\r\n   try {\r\n      dispatch({\r\n         type: USER_EDIT_ADDRESS_REQUEST,\r\n      })\r\n\r\n      const {\r\n         userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n         headers: {\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n         },\r\n      }\r\n\r\n      await axios.post('/api/users/address', address, config)\r\n\r\n      dispatch({\r\n         type: USER_EDIT_ADDRESS_SUCCESS,\r\n      })\r\n   } catch (error) {\r\n      dispatch({\r\n         type: USER_EDIT_ADDRESS_FAIL,\r\n         payload:\r\n            error.response && error.response.data.message\r\n               ? error.response.data.message\r\n               : error.message,\r\n      })\r\n   }\r\n}\r\n\r\nexport const selectRoleAddressUser =\r\n   (address) => async (dispatch, getState) => {\r\n      try {\r\n         dispatch({\r\n            type: USER_SELECT_ROLE_REQUEST,\r\n         })\r\n\r\n         const {\r\n            userLogin: { userInfo },\r\n         } = getState()\r\n\r\n         const config = {\r\n            headers: {\r\n               Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n         }\r\n\r\n         await axios.post('/api/users/roleaddress', address, config)\r\n\r\n         dispatch({\r\n            type: USER_SELECT_ROLE_SUCCESS,\r\n         })\r\n      } catch (error) {\r\n         dispatch({\r\n            type: USER_SELECT_ROLE_FAIL,\r\n            payload:\r\n               error.response && error.response.data.message\r\n                  ? error.response.data.message\r\n                  : error.message,\r\n         })\r\n      }\r\n   }\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n   dispatch({\r\n      type: CLEAR_ERRORS,\r\n   })\r\n}\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\RegisterScreen.js",["435","436"],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProfileScreen.js",["437","438","439","440","441","442","443","444"],"F:\\Code\\shopPro\\frontend\\src\\screens\\ShippingScreen.js",["445","446","447","448","449","450","451","452","453"],"F:\\Code\\shopPro\\frontend\\src\\components\\CheckoutSteps.js",[],["454","455"],"F:\\Code\\shopPro\\frontend\\src\\screens\\PaymentScreen.js",["456"],"F:\\Code\\shopPro\\frontend\\src\\screens\\PlaceOrderScreen.js",["457","458","459","460"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, Col, Image, ListGroup, Row, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeFromCart } from '../actions/cartActions'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport Announcement from '../components/Announcement'\r\nimport Message from '../components/Message'\r\nimport Step from '../components/Step'\r\nimport Footer from '../components/Footer.js'\r\nimport Header from '../components/Header.js'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\nimport {\r\n   ORDER_CREATE_RESET,\r\n   ORDER_DETAIL_RESET,\r\n} from '../constants/orderConstants'\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { listCode } from '../actions/codeAction'\r\n\r\nPlaceOrderScreen.propTypes = {}\r\n\r\nlet formatPhoneNumber = (str) => {\r\n   //Filter only numbers from the input\r\n   let cleaned = ('' + str).replace(/\\D/g, '')\r\n\r\n   //Check if the input is of correct length\r\n   let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r\n\r\n   if (match) {\r\n      return '(' + match[1] + ') ' + match[2] + ' ' + match[3]\r\n   }\r\n\r\n   return null\r\n}\r\n\r\nfunction format(n, currency) {\r\n   return n.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + currency\r\n}\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n   const dispatch = useDispatch()\r\n\r\n   const cart = useSelector((state) => state.cart)\r\n\r\n   // Calculate prices\r\n   cart.itemsPrice = cart.cartItems.reduce(\r\n      (acc, item) => acc + item.price * item.qty,\r\n      0\r\n   )\r\n\r\n   const addDecimals = (num) => {\r\n      return Math.round(num)\r\n   }\r\n\r\n   if (\r\n      cart.shippingAddress.thanhPho === 'Thành phố Hà Nội' ||\r\n      cart.shippingAddress.thanhPho === 'Thành phố Hồ Chí Minh'\r\n   ) {\r\n      cart.shippingPrice = 25000\r\n   } else if (cart.shippingAddress.thanhPho === 'Thành phố Cần Thơ') {\r\n      cart.shippingPrice = 15000\r\n   } else {\r\n      cart.shippingPrice = 35000\r\n   }\r\n\r\n   const [discountCode, setDiscountCode] = useState('')\r\n\r\n   const codeList = useSelector((state) => state.codeList)\r\n   const { code } = codeList\r\n\r\n   // cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n   let discounted = ''\r\n\r\n   code?.map((c) =>\r\n      c.name === discountCode ? (discounted = c.discount) : (discounted = 0)\r\n   )\r\n\r\n   cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n   cart.totalPrice =\r\n      Number(cart.itemsPrice) + Number(cart.shippingPrice) - Number(discounted)\r\n\r\n   const orderCreate = useSelector((state) => state.orderCreate)\r\n   const { order, success, error } = orderCreate\r\n\r\n   const placeOrderHandler = () => {\r\n      dispatch(\r\n         createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n            discount: discounted,\r\n         })\r\n      )\r\n      // } else {\r\n      //    toast.error(\r\n      //       <div>\r\n      //          <ErrorOutlineIcon className='pr-1' fontSize='large' /> Mã giảm\r\n      //          giá không tồn tại\r\n      //       </div>,\r\n      //       {\r\n      //          position: 'top-right',\r\n      //          autoClose: 2500,\r\n      //          hideProgressBar: true,\r\n      //          closeOnClick: true,\r\n      //          pauseOnHover: true,\r\n      //          draggable: true,\r\n      //          progress: undefined,\r\n      //       }\r\n      //    )\r\n      // }\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(listCode())\r\n      if (success) {\r\n         history.push(`/order/${order._id}`)\r\n         dispatch({ type: USER_DETAILS_RESET })\r\n         dispatch({ type: ORDER_CREATE_RESET })\r\n\r\n         cart.cartItems.map((item) => dispatch(removeFromCart(item.product)))\r\n      }\r\n      window.scrollTo(0, 0)\r\n   }, [history, success])\r\n\r\n   return (\r\n      <>\r\n         <Header />\r\n         <Row className='m-4'>\r\n            <Col md={8} className='mt-2'>\r\n               <Step step1 step2 step3 step4 />\r\n               <ListGroup\r\n                  variant='flush'\r\n                  className='shadow mt-3 card_color p-1 border-order'\r\n               >\r\n                  <ListGroup.Item className='pt-3'>\r\n                     <h4 className='text-uppercase'>Thông tin giao hàng</h4>\r\n                     <p className='mb-1 ml-2' style={{ fontSize: '0.9rem' }}>\r\n                        <strong>Địa chỉ: </strong>\r\n                        {cart.shippingAddress.diaChi} {' - '}{' '}\r\n                        {cart.shippingAddress.xa} {' - '}\r\n                        {cart.shippingAddress.huyen} {' - '}\r\n                        {cart.shippingAddress.thanhPho}.\r\n                     </p>\r\n                     <p className='mb-2 ml-2' style={{ fontSize: '0.9rem' }}>\r\n                        <strong>Số điện thoại: </strong>\r\n                        {formatPhoneNumber(cart.shippingAddress.numberPhone)}\r\n                     </p>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                     <h4 className='text-uppercase mt-2'>\r\n                        Phương thức thanh toán\r\n                     </h4>\r\n                     <div\r\n                        className='d-flex mb-2 ml-2'\r\n                        style={{ fontSize: '0.9rem' }}\r\n                     >\r\n                        <strong className='pr-1'>Phương Thức: </strong>\r\n                        {cart.paymentMethod ? (\r\n                           cart.paymentMethod\r\n                        ) : (\r\n                           <strong className='text-danger'>\r\n                              Chưa chọn phương thức thanh toán\r\n                           </strong>\r\n                        )}\r\n                     </div>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                     <h4 className='text-uppercase mt-2'>Mã giảm giá</h4>\r\n                     <div style={{ fontSize: '0.9rem', width: '20rem' }}>\r\n                        <Form>\r\n                           <Form.Group controlId='email'>\r\n                              <Form.Control\r\n                                 className='border-1 border-grey rounded-pill'\r\n                                 type='text'\r\n                                 placeholder='Nhập địa chỉ mã giảm giá'\r\n                                 value={discountCode}\r\n                                 onChange={(e) =>\r\n                                    setDiscountCode(e.target.value)\r\n                                 }\r\n                              ></Form.Control>\r\n                           </Form.Group>\r\n                        </Form>\r\n                     </div>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                     <h4 className='text-uppercase mt-2'>Giỏ hàng</h4>\r\n                     {cart.cartItems.length === 0 ? (\r\n                        <Message>Giỏ hàng của bạn trống</Message>\r\n                     ) : (\r\n                        <ListGroup variant='flush'>\r\n                           {cart.cartItems.map((item, index) => (\r\n                              <ListGroup.Item key={index}>\r\n                                 <Row>\r\n                                    <Col md={2}>\r\n                                       <Image\r\n                                          src={item.images[0].url}\r\n                                          alt={item.name}\r\n                                          fluid\r\n                                          rounded\r\n                                       />\r\n                                    </Col>\r\n\r\n                                    <Col\r\n                                       md={5}\r\n                                       className='d-flex align-items-center'\r\n                                    >\r\n                                       <Link\r\n                                          to={`/product/${item.product}`}\r\n                                          className='link-product'\r\n                                       >\r\n                                          {item.name}\r\n                                       </Link>\r\n                                    </Col>\r\n\r\n                                    <Col\r\n                                       md={5}\r\n                                       className='d-flex align-items-center'\r\n                                    >\r\n                                       <b style={{ fontSize: '1rem' }}>\r\n                                          {item.qty} x {format(item.price, 'đ')}\r\n                                          {' = '}\r\n                                          {format(item.qty * item.price, 'đ')}\r\n                                       </b>\r\n                                    </Col>\r\n                                 </Row>\r\n                              </ListGroup.Item>\r\n                           ))}\r\n                        </ListGroup>\r\n                     )}\r\n                  </ListGroup.Item>\r\n               </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n               <Card\r\n                  className='shadow mt-2 border-0 card_color p-1 border-order'\r\n                  style={{ zIndex: '1' }}\r\n               >\r\n                  <ListGroup variant='flush' className='card_color'>\r\n                     <ListGroup.Item>\r\n                        <h4 className='text-uppercase text-center'>\r\n                           Chi tiết hoá đơn\r\n                        </h4>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <Row>\r\n                           <Col md={8}>Tổng tiền sản phẩm</Col>\r\n                           <Col md={4}>\r\n                              <strong>{format(cart.itemsPrice, 'đ')}</strong>\r\n                           </Col>\r\n                        </Row>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <Row>\r\n                           <Col md={8}>Phí vận chuyển</Col>\r\n                           <Col m={4}>\r\n                              <strong>{format(cart.shippingPrice, 'đ')}</strong>\r\n                           </Col>\r\n                        </Row>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <Row>\r\n                           <Col md={8}>Giảm giá</Col>\r\n                           <Col m={4}>\r\n                              {code?.map((c) => (\r\n                                 <strong>\r\n                                    {discountCode === c.name\r\n                                       ? format(c.discount, 'đ')\r\n                                       : '0đ'}\r\n                                 </strong>\r\n                              ))}\r\n                           </Col>\r\n                        </Row>\r\n                     </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n                        <Row>\r\n                           <Col md={8}>\r\n                              <strong>Tổng cộng (bao gồm VAT):</strong>\r\n                           </Col>\r\n                           <Col md={4}>\r\n                              <strong>{format(cart.totalPrice, 'đ')}</strong>\r\n                           </Col>\r\n                        </Row>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        {error && (\r\n                           <Announcement variant='danger'>\r\n                              Vui lòng chọn phương thức thanh toán\r\n                           </Announcement>\r\n                        )}\r\n                        {/* {code?.map(\r\n                           (c) =>\r\n                              c.name !== discountCode && (\r\n                                 <Announcement variant='danger'>\r\n                                    Mã giảm giá không tồn tại\r\n                                 </Announcement>\r\n                              )\r\n                        )} */}\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <Button\r\n                           type='button'\r\n                           variant='outline-light'\r\n                           className='btn-block text-uppercase btn-apply btn_color pt-3 rounded-pill'\r\n                           disabled={cart.cartItems === 0}\r\n                           onClick={placeOrderHandler}\r\n                        >\r\n                           <h5>Xác nhận đặt hàng</h5>\r\n                        </Button>\r\n                     </ListGroup.Item>\r\n                  </ListGroup>\r\n                  <ToastContainer />\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n         <Footer />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\orderConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\orderActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\OrderScreen.js",["461","462","463","464","465"],"F:\\Code\\shopPro\\frontend\\src\\components\\MessageSuccess.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Announcement.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ActiveRating.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ButtonComponent.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Step.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\SearchBox.js",["466","467","468","469","470"],"import { React, useState } from 'react'\r\nimport { Form, Button, Image, InputGroup } from 'react-bootstrap'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport { ButtonBase, FormGroup, Input } from '@material-ui/core'\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from 'react-speech-recognition'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandle = (e) => {\r\n    // setKeyword(transcript)\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      if (keyword) {\r\n        history.push(`/search/${keyword}`)\r\n      } else {\r\n        history.push(`/search/${transcript}`)\r\n      }\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const { transcript, resetTranscript } = useSpeechRecognition()\r\n\r\n  if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return null\r\n  }\r\n\r\n  const click = () => {\r\n    if (transcript) {\r\n      setKeyword(transcript)\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setKeyword(' ')\r\n    resetTranscript()\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandle} inline>\r\n      <div className='d-flex align-items-center'>\r\n        <Form.Control\r\n          type='text'\r\n          name='q'\r\n          placeholder='Tìm kiếm sản phẩm.'\r\n          className='mr-sm-2 ml-sm-5 rounded-pill'\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          value={transcript ? transcript : keyword}\r\n          style={{ width: '30rem' }}\r\n        ></Form.Control>\r\n        <Button\r\n          variant='outline-light'\r\n          className='p-1 text-dark border-0'\r\n          style={{ marginLeft: '-14%', height: '2rem' }}\r\n          onClick={clear}\r\n        >\r\n          <ClearIcon />\r\n        </Button>\r\n\r\n        <Button\r\n          variant='outline-light'\r\n          onClick={SpeechRecognition.startListening}\r\n          className='p-1 text-dark border-0'\r\n          style={{ marginLeft: '-10%', fontSize: '1rem' }}\r\n        >\r\n          <i className='fa fa-microphone' />\r\n        </Button>\r\n      </div>\r\n\r\n      <Button\r\n        type='submit'\r\n        className='p-2 btn_color rounded-circle'\r\n        style={{ fontSize: '0.7rem', marginLeft: '-15%' }}\r\n        onClick={click}\r\n      >\r\n        <SearchIcon />\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Paginate.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ProductCarousel.js",[],["471","472"],"F:\\Code\\shopPro\\frontend\\src\\components\\Meta.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\MyOrdersScreen.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"F:\\Code\\shopPro\\frontend\\src\\configAuth.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\ProgressShipping.js",["500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"import Step from '@material-ui/core/Step'\r\nimport StepConnector from '@material-ui/core/StepConnector'\r\nimport StepLabel from '@material-ui/core/StepLabel'\r\nimport Stepper from '@material-ui/core/Stepper'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Check from '@material-ui/icons/Check'\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel'\r\nimport CachedIcon from '@material-ui/icons/Cached'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Image, ListGroup, Row, Button, Form } from 'react-bootstrap'\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping'\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable'\r\n\r\nconst useQontoStepIconStyles = makeStyles({\r\n  root: {\r\n    color: '#eaeaf0',\r\n    display: 'flex',\r\n    height: 22,\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    color: '#784af4',\r\n  },\r\n  circle: {\r\n    width: 8,\r\n    height: 8,\r\n    borderRadius: '50%',\r\n    backgroundColor: 'currentColor',\r\n  },\r\n  completed: {\r\n    color: '#784af4',\r\n    zIndex: 1,\r\n    fontSize: 18,\r\n  },\r\n})\r\n\r\nfunction QontoStepIcon(props) {\r\n  const classes = useQontoStepIconStyles()\r\n  const { active, completed } = props\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n      })}\r\n    >\r\n      {completed ? (\r\n        <Check className={classes.completed} />\r\n      ) : (\r\n        <div className={classes.circle} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nQontoStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n  alternativeLabel: {\r\n    top: 22,\r\n  },\r\n  active: {\r\n    '& $line': {\r\n      backgroundColor: '#2e5a1c;',\r\n    },\r\n  },\r\n  completed: {\r\n    '& $line': {\r\n      backgroundColor: '#2e5a1c;',\r\n    },\r\n  },\r\n  line: {\r\n    height: 3,\r\n    border: 0,\r\n    backgroundColor: '#eaeaf0',\r\n    borderRadius: 1,\r\n  },\r\n})(StepConnector)\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#ccc',\r\n    zIndex: 1,\r\n    color: '#fff',\r\n    width: 50,\r\n    height: 50,\r\n    display: 'flex',\r\n    borderRadius: '50%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  active: {\r\n    backgroundColor: '#4e9525;',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n  completed: {\r\n    backgroundColor: '#4e9525;',\r\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n  },\r\n})\r\n\r\nfunction ColorlibStepIcon(props) {\r\n  const classes = useColorlibStepIconStyles()\r\n  const { active, completed } = props\r\n\r\n  const icons = {\r\n    1: <CachedIcon style={{ fontSize: '1.8rem' }} />,\r\n    2: <LocalShippingIcon style={{ fontSize: '1.8rem' }} />,\r\n    3: <EventAvailableIcon style={{ fontSize: '1.8rem' }} />,\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, {\r\n        [classes.active]: active,\r\n        [classes.completed]: completed,\r\n      })}\r\n    >\r\n      {icons[String(props.icon)]}\r\n    </div>\r\n  )\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n  /**\r\n   * Whether this step is active.\r\n   */\r\n  active: PropTypes.bool,\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\r\n  completed: PropTypes.bool,\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst ProgressShipping = () => {\r\n  const classes = useStyles()\r\n  const [activeStep, setActiveStep] = useState(0)\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  // const steps = getSteps()\r\n\r\n  const steps = ['Chờ xác nhận', 'Đang vận chuyển', 'Đã giao hàng']\r\n\r\n  const stepHandler = () => {\r\n    setActiveStep(1)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper\r\n        alternativeLabel\r\n        activeStep={steps.indexOf(order.orderStatus)}\r\n        connector={<ColorlibConnector />}\r\n      >\r\n        {steps.map((label) => (\r\n          <Step key={label} onChange={stepHandler}>\r\n            {order.orderStatus === label ? (\r\n              <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                <p style={{ fontSize: '1rem' }}>{label}</p>\r\n              </StepLabel>\r\n            ) : (\r\n              <StepLabel StepIconComponent={ColorlibStepIcon}>\r\n                <p style={{ fontSize: '1rem' }}>{label}</p>\r\n              </StepLabel>\r\n            )}\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProgressShipping\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\ImagePay.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\categoriesReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\categoriesConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\categoryAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\test.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\SkeletonEffect.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\ProductOfCategoryScreen.js",["514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530"],"import Chip from '@material-ui/core/Chip'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport React, { useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getCategoryDetails } from '../actions/categoryAction'\r\nimport {\r\n   getProductOfCategory,\r\n   getProductOfSubCategory,\r\n} from '../actions/productActions'\r\nimport { getSubCategoryDetails } from '../actions/subCategoryAction'\r\nimport FilterNav from '../components/FilterNav'\r\nimport Footer from '../components/Footer.js'\r\nimport Header from '../components/Header.js'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Paginate from '../components/Paginate'\r\nimport Product from '../components/Product'\r\nimport SkeletonEffect from '../components/SkeletonEffect'\r\nimport {\r\n   PRODUCT_OF_CATEGORY_RESET,\r\n   PRODUCT_OF_SUB_CATEGORY_RESET,\r\n} from '../constants/productConstants'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n         margin: theme.spacing(0.5),\r\n      },\r\n   },\r\n}))\r\n\r\nconst ProductOfCategoryScreen = ({ match }) => {\r\n   const keyword = match.params.keyword\r\n   const pageNumber = match.params.pageNumber || 1\r\n   const catId = match.params.id\r\n\r\n   const classes = useStyles()\r\n\r\n   const handleDelete = () => {\r\n      console.info('You clicked the delete icon.')\r\n   }\r\n\r\n   const handleClick = () => {\r\n      console.info('You clicked the Chip.')\r\n   }\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const productOfCategory = useSelector((state) => state.productOfCategory)\r\n   const { loading, error, products, pages, page } = productOfCategory\r\n\r\n   const productOfSubCategory = useSelector(\r\n      (state) => state.productOfSubCategory\r\n   )\r\n   const {\r\n      loading: loadingSub,\r\n      error: errorSub,\r\n      products: productSub,\r\n   } = productOfSubCategory\r\n\r\n   const categoryDetails = useSelector((state) => state.categoryDetails)\r\n   const {\r\n      loading: loadingCat,\r\n      success: successCat,\r\n      category,\r\n   } = categoryDetails\r\n\r\n   const subCategoryDetails = useSelector((state) => state.subCategoryDetails)\r\n   const { subcat } = subCategoryDetails\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const productFilter = useSelector((state) => state.productFilter)\r\n   const {\r\n      loading: loadingFilter,\r\n      success: successFilter,\r\n      product: productsFilter,\r\n   } = productFilter\r\n\r\n   const productSubFilter = useSelector((state) => state.productSubFilter)\r\n   const {\r\n      loading: loadingSubFilter,\r\n      success: successSubFilter,\r\n      product: productsSubFilter,\r\n   } = productSubFilter\r\n\r\n   const productFilterPrice = useSelector((state) => state.productFilterPrice)\r\n   const {\r\n      loading: loadingFilterPrice,\r\n      success: successFilterPrice,\r\n      product: productsFilterPrice,\r\n   } = productFilterPrice\r\n\r\n   console.log('product', productSub)\r\n\r\n   useEffect(() => {\r\n      dispatch(getProductOfCategory(catId))\r\n      // dispatch({ type: PRODUCT_OF_SUB_CATEGORY_RESET })\r\n\r\n      if (products.length === 0) {\r\n         dispatch({ type: PRODUCT_OF_CATEGORY_RESET })\r\n         dispatch(getProductOfSubCategory(catId))\r\n      }\r\n\r\n      if (userInfo) {\r\n         dispatch(getCategoryDetails(catId))\r\n         dispatch(getSubCategoryDetails(catId))\r\n      }\r\n\r\n      window.scrollTo(0, 0)\r\n   }, [dispatch, userInfo, catId])\r\n\r\n   return (\r\n      <>\r\n         <Header />\r\n         <div className='pt-2'>\r\n            <>\r\n               <Meta />\r\n\r\n               <>\r\n                  <Row\r\n                     className='card_color shadow '\r\n                     style={{ minHeight: '105vh', backgroundColor: '#FFF' }}\r\n                  >\r\n                     <Col md={3} className='border-right border-gray'>\r\n                        <FilterNav />\r\n                     </Col>\r\n                     <Col md={9}>\r\n                        <div className='pt-2 pl-3 pr-3 '>\r\n                           <Col\r\n                              md={12}\r\n                              className='d-flex justify-content-center '\r\n                           >\r\n                              {productsFilter &&\r\n                                 productsFilter.map((prod) => (\r\n                                    <Chip\r\n                                       variant='outlined'\r\n                                       color='primary'\r\n                                       size='small'\r\n                                       label={prod.category.name}\r\n                                    />\r\n                                 ))}\r\n                           </Col>\r\n                           <Row>\r\n                              {loadingFilterPrice ? (\r\n                                 <SkeletonEffect />\r\n                              ) : (\r\n                                 productsFilterPrice?.map(\r\n                                    (\r\n                                       price // phai co ? de kiem tra price === null\r\n                                    ) => (\r\n                                       <>\r\n                                          <Col\r\n                                             key={price._id}\r\n                                             sm={12}\r\n                                             md={6}\r\n                                             lg={4}\r\n                                             xl={3}\r\n                                          >\r\n                                             <Product product={price} />\r\n                                          </Col>\r\n                                       </>\r\n                                    )\r\n                                 )\r\n                              )}\r\n                              {loadingFilter ? (\r\n                                 <SkeletonEffect />\r\n                              ) : (\r\n                                 productsFilter?.map(\r\n                                    (\r\n                                       product // phai co ? de kiem tra product === null\r\n                                    ) => (\r\n                                       <Col\r\n                                          key={product._id}\r\n                                          sm={12}\r\n                                          md={6}\r\n                                          lg={4}\r\n                                          xl={3}\r\n                                       >\r\n                                          <Product product={product} />\r\n                                       </Col>\r\n                                    )\r\n                                 )\r\n                              )}\r\n                              {loadingSubFilter ? (\r\n                                 <SkeletonEffect />\r\n                              ) : (\r\n                                 productsSubFilter?.map(\r\n                                    (\r\n                                       product // phai co ? de kiem tra product === null\r\n                                    ) => (\r\n                                       <Col\r\n                                          key={product._id}\r\n                                          sm={12}\r\n                                          md={6}\r\n                                          lg={4}\r\n                                          xl={3}\r\n                                       >\r\n                                          <Product product={product} />\r\n                                       </Col>\r\n                                    )\r\n                                 )\r\n                              )}\r\n                              {loading ? (\r\n                                 <SkeletonEffect />\r\n                              ) : (\r\n                                 products?.map(\r\n                                    (\r\n                                       product // phai co ? de kiem tra product === null\r\n                                    ) => (\r\n                                       <Col\r\n                                          key={product._id}\r\n                                          sm={12}\r\n                                          md={6}\r\n                                          lg={4}\r\n                                          xl={3}\r\n                                       >\r\n                                          <Product product={product} />\r\n                                       </Col>\r\n                                    )\r\n                                 )\r\n                              )}\r\n                              {loadingSub ? (\r\n                                 <SkeletonEffect />\r\n                              ) : (\r\n                                 productSub?.map(\r\n                                    (\r\n                                       product // phai co ? de kiem tra product === null\r\n                                    ) => (\r\n                                       <Col\r\n                                          key={product._id}\r\n                                          sm={12}\r\n                                          md={6}\r\n                                          lg={4}\r\n                                          xl={3}\r\n                                       >\r\n                                          <Product product={product} />\r\n                                       </Col>\r\n                                    )\r\n                                 )\r\n                              )}\r\n                           </Row>\r\n                           <div className='d-flex justify-content-center'>\r\n                              <Paginate\r\n                                 pages={pages}\r\n                                 page={page}\r\n                                 // keyword={keyword ? keyword : ''}\r\n                              />\r\n                           </div>\r\n                        </div>\r\n                     </Col>\r\n                  </Row>\r\n               </>\r\n            </>\r\n         </div>\r\n         <Footer />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ProductOfCategoryScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\ProgressLine.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\Rating.js",[],"F:\\Code\\shopPro\\frontend\\src\\components\\FilterNav.js",["531","532"],"import { BookOutlined } from '@ant-design/icons'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport { Checkbox, Menu } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listCategories } from '../actions/categoryAction'\r\nimport {\r\n   filterPriceProduct,\r\n   filterProduct,\r\n   filterSubProduct,\r\n} from '../actions/productActions'\r\nimport { listSubCategory } from '../actions/subCategoryAction'\r\nimport {\r\n   PRODUCT_FILTER_PRICE_RESET,\r\n   PRODUCT_FILTER_SUB_RESET,\r\n   PRODUCT_OF_CATEGORY_RESET,\r\n   PRODUCT_OF_SUB_CATEGORY_RESET,\r\n} from '../constants/productConstants'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst rootSubmenuKeys = ['sub1', 'sub2', 'sub4']\r\n\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      width: 300,\r\n   },\r\n})\r\n\r\nconst PrettoSlider = withStyles({\r\n   root: {\r\n      color: '#52af77',\r\n      height: 8,\r\n   },\r\n   thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n         boxShadow: 'inherit',\r\n      },\r\n   },\r\n   active: {},\r\n   valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n   },\r\n   track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n   },\r\n   rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n   },\r\n})(Slider)\r\n\r\nfunction valuetext(value) {\r\n   return `${value}`\r\n}\r\n\r\nconst FilterNav = () => {\r\n   const classes = useStyles()\r\n   const [value, setValue] = useState([0, 5000000])\r\n   const [cat, setCat] = useState([])\r\n   const [sub, setSub] = useState([])\r\n   const [start, setStart] = useState('')\r\n   const [end, setEnd] = useState('')\r\n   const [openKeys, setOpenKeys] = React.useState(['sub1', 'sub2'])\r\n\r\n   const onOpenChange = (keys) => {\r\n      const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1)\r\n      if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n         setOpenKeys(keys)\r\n      } else {\r\n         setOpenKeys(latestOpenKey ? [latestOpenKey] : [])\r\n      }\r\n   }\r\n   function ValueLabelComponent(props) {\r\n      const { children, open, value } = props\r\n\r\n      props.index === 1 ? setEnd(props.value) : setStart(props.value)\r\n\r\n      return (\r\n         <Tooltip\r\n            open={open}\r\n            enterTouchDelay={0}\r\n            placement='bottom'\r\n            title={value.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n         >\r\n            {children}\r\n         </Tooltip>\r\n      )\r\n   }\r\n\r\n   // console.log('end', end)\r\n   // console.log('start', start)\r\n\r\n   ValueLabelComponent.propTypes = {\r\n      children: PropTypes.element.isRequired,\r\n      open: PropTypes.bool.isRequired,\r\n      value: PropTypes.number.isRequired,\r\n   }\r\n\r\n   const handleChange = (event, newValue) => {\r\n      setValue(newValue)\r\n   }\r\n\r\n   const categoriesList = useSelector((state) => state.categoriesList)\r\n   const { category } = categoriesList\r\n\r\n   const subCategoryList = useSelector((state) => state.subCategoryList)\r\n   const { Sub } = subCategoryList\r\n\r\n   const productFilterPrice = useSelector((state) => state.productFilterPrice)\r\n   const { product: productsFilterPrice } = productFilterPrice\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   function onChange(checkedValues) {\r\n      if (checkedValues.target.checked === true) {\r\n         setCat([...cat, checkedValues.target.value])\r\n      } else {\r\n         cat.map(\r\n            (e) =>\r\n               e === checkedValues.target.value && cat.splice(cat.indexOf(e), 1)\r\n         )\r\n         setCat([...cat])\r\n      }\r\n   }\r\n\r\n   function onChange2(checkedValues) {\r\n      if (checkedValues.target.checked === true) {\r\n         setSub([...sub, checkedValues.target.value])\r\n      } else {\r\n         sub.map(\r\n            (e) =>\r\n               e === checkedValues.target.value && sub.splice(sub.indexOf(e), 1)\r\n         )\r\n         setSub([...sub])\r\n      }\r\n   }\r\n\r\n   console.log('sub', sub)\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      if ((cat.length === 0) & (sub.length === 0)) {\r\n         dispatch(filterPriceProduct([start, end]))\r\n      } else if (sub.length === 0) {\r\n         dispatch({ type: PRODUCT_FILTER_SUB_RESET })\r\n         dispatch({ type: PRODUCT_FILTER_PRICE_RESET })\r\n         dispatch({ type: PRODUCT_OF_SUB_CATEGORY_RESET })\r\n         dispatch({ type: PRODUCT_OF_CATEGORY_RESET })\r\n         dispatch(filterProduct(cat))\r\n      } else {\r\n         dispatch({ type: PRODUCT_FILTER_PRICE_RESET })\r\n         dispatch({ type: PRODUCT_OF_SUB_CATEGORY_RESET })\r\n         dispatch({ type: PRODUCT_OF_CATEGORY_RESET })\r\n         dispatch(filterSubProduct(sub))\r\n      }\r\n   }\r\n\r\n   useEffect(() => {\r\n      dispatch(listCategories())\r\n      dispatch(listSubCategory())\r\n   }, [dispatch])\r\n\r\n   return (\r\n      <>\r\n         <Form onSubmit={submitHandler}>\r\n            <div className='m-3 mb-0'>\r\n               <h5 className='justify-content-center mt-2 d-flex align-items-center'>\r\n                  <Image\r\n                     className='mr-2'\r\n                     src='https://img.icons8.com/material-outlined/20/000000/filter--v1.png'\r\n                  />\r\n                  Bộ lọc tìm kiếm\r\n               </h5>\r\n\r\n               <Form.Group>\r\n                  <strong className='mb-1 justify-content-center d-flex align-items-center mt-3 '>\r\n                     <Image\r\n                        className='pl-1 pr-1'\r\n                        src='https://img.icons8.com/fluent/24/000000/us-dollar.png'\r\n                     />\r\n                     Tìm kiếm theo giá\r\n                  </strong>\r\n                  <div className='d-flex align-items-center justify-content-center mb-1'>\r\n                     <p className='pr-1 mb-0'> Giá từ:</p>\r\n                     <strong\r\n                        className='mb-0'\r\n                        style={{ letterSpacing: '0.08rem' }}\r\n                     >\r\n                        {start\r\n                           .toString()\r\n                           .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + 'đ'}\r\n                        {\r\n                           <Image\r\n                              className='pl-1 pr-1'\r\n                              src='https://img.icons8.com/fluent/24/000000/resize-horizontal.png'\r\n                           />\r\n                        }\r\n                        {end.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') +\r\n                           'đ'}\r\n                     </strong>\r\n                  </div>\r\n                  <PrettoSlider\r\n                     value={value}\r\n                     onChange={handleChange}\r\n                     ValueLabelComponent={ValueLabelComponent}\r\n                     aria-labelledby='range-slider'\r\n                     getAriaValueText={valuetext}\r\n                     valueLabelDisplay='auto'\r\n                     aria-label='pretto slider'\r\n                     min={0}\r\n                     step={50000}\r\n                     max={5000000}\r\n                  />\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n                  <Menu\r\n                     mode='inline'\r\n                     openKeys={openKeys}\r\n                     onOpenChange={onOpenChange}\r\n                     style={{ width: 270 }}\r\n                     className='border-0'\r\n                  >\r\n                     <SubMenu\r\n                        key='sub1'\r\n                        icon={<BookOutlined />}\r\n                        title='Tìm kiếm theo danh mục'\r\n                     >\r\n                        {category &&\r\n                           category.map((cate, key) => (\r\n                              <Menu.Item key={key}>\r\n                                 <Checkbox value={cate._id} onChange={onChange}>\r\n                                    {cate.name}\r\n                                 </Checkbox>\r\n                              </Menu.Item>\r\n                           ))}\r\n                     </SubMenu>\r\n                  </Menu>\r\n               </Form.Group>\r\n\r\n               <Form.Group>\r\n                  <Menu\r\n                     mode='inline'\r\n                     openKeys={openKeys}\r\n                     onOpenChange={onOpenChange}\r\n                     style={{ width: 270 }}\r\n                     className='border-0'\r\n                  >\r\n                     <SubMenu\r\n                        key='sub2'\r\n                        icon={<BookOutlined />}\r\n                        title='Tìm kiếm theo danh mục con'\r\n                     >\r\n                        {Sub &&\r\n                           Sub.map((cate, key) => (\r\n                              <Menu.Item key={key}>\r\n                                 <Checkbox\r\n                                    value={cate._id}\r\n                                    onChange={onChange2}\r\n                                 >\r\n                                    {cate.name}\r\n                                 </Checkbox>\r\n                              </Menu.Item>\r\n                           ))}\r\n                     </SubMenu>\r\n                  </Menu>\r\n               </Form.Group>\r\n               <Form.Group className='text-center '>\r\n                  <Button\r\n                     type='submit'\r\n                     size='normal'\r\n                     variant='outline-dark rounded-pill p-1 pl-4 pr-4'\r\n                     style={{ letterSpacing: '0.08rem', fontSize: '0.85rem' }}\r\n                  >\r\n                     Tìm kiếm\r\n                  </Button>\r\n               </Form.Group>\r\n            </div>\r\n         </Form>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default FilterNav\r\n","F:\\Code\\shopPro\\frontend\\src\\components\\Banner.js",[],"F:\\Code\\shopPro\\frontend\\src\\actions\\supplierActions.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\supplierConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\supplierReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\AdminScreen.js",["533"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\Header.js",["534","535","536","537","538","539","540","541","542","543","544","545","546","547"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\SideBar.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\UserListScreen.js",["548"],"import Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport clsx from 'clsx'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect } from 'react'\r\nimport { Button, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../../notisfied.css'\r\nimport { deleteUser, listUsers } from '../../actions/userActions'\r\nimport Announcement from '../../components/Announcement'\r\nimport SkeletonEffect from '../../components/SkeletonEffect'\r\nimport SideBar from './components/SideBar'\r\nimport Header from './components/Header'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n   if (b[orderBy] < a[orderBy]) {\r\n      return -1\r\n   }\r\n   if (b[orderBy] > a[orderBy]) {\r\n      return 1\r\n   }\r\n   return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n   return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n   const stabilizedThis = array.map((el, index) => [el, index])\r\n   stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0])\r\n      if (order !== 0) return order\r\n      return a[1] - b[1]\r\n   })\r\n   return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst headCells = [\r\n   {\r\n      id: 'id',\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: 'ID',\r\n   },\r\n   { id: 'name', numeric: true, disablePadding: false, label: 'TÊN' },\r\n   {\r\n      id: 'email',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'ĐỊA CHỈ EMAIL',\r\n   },\r\n   { id: 'isAdmin', numeric: true, disablePadding: false, label: 'ADMIN' },\r\n   { id: 'action', numeric: true, disablePadding: false, label: '' },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n   const {\r\n      classes,\r\n      onSelectAllClick,\r\n      order,\r\n      orderBy,\r\n      numSelected,\r\n      rowCount,\r\n      onRequestSort,\r\n   } = props\r\n   const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property)\r\n   }\r\n\r\n   return (\r\n      <TableHead>\r\n         <TableRow>\r\n            <TableCell padding='checkbox'>\r\n               <Checkbox\r\n                  indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                  checked={rowCount > 0 && numSelected === rowCount}\r\n                  onChange={onSelectAllClick}\r\n                  inputProps={{ 'aria-label': 'select all desserts' }}\r\n               />\r\n            </TableCell>\r\n            {headCells.map((headCell) => (\r\n               <TableCell\r\n                  key={headCell.id}\r\n                  align='center'\r\n                  padding={headCell.disablePadding ? 'none' : 'default'}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n                  className='pl-5'\r\n                  style={{ fontWeight: '700' }}\r\n               >\r\n                  <TableSortLabel\r\n                     active={orderBy === headCell.id}\r\n                     direction={orderBy === headCell.id ? order : 'asc'}\r\n                     onClick={createSortHandler(headCell.id)}\r\n                  >\r\n                     {headCell.label}\r\n                     {orderBy === headCell.id ? (\r\n                        <span className={classes.visuallyHidden}>\r\n                           {order === 'desc'\r\n                              ? 'sorted descending'\r\n                              : 'sorted ascending'}\r\n                        </span>\r\n                     ) : null}\r\n                  </TableSortLabel>\r\n               </TableCell>\r\n            ))}\r\n         </TableRow>\r\n      </TableHead>\r\n   )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n   numSelected: PropTypes.number.isRequired,\r\n   onRequestSort: PropTypes.func.isRequired,\r\n   onSelectAllClick: PropTypes.func.isRequired,\r\n   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n   orderBy: PropTypes.string.isRequired,\r\n   rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n   root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n   },\r\n   highlight:\r\n      theme.palette.type === 'light'\r\n         ? {\r\n              color: theme.palette.secondary.main,\r\n              backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n           }\r\n         : {\r\n              color: theme.palette.text.primary,\r\n              backgroundColor: theme.palette.secondary.dark,\r\n           },\r\n   title: {\r\n      flex: '1 1 100%',\r\n   },\r\n}))\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: '100%',\r\n   },\r\n   paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n   },\r\n   table: {\r\n      minWidth: 750,\r\n      align: 'center',\r\n   },\r\n   visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n   },\r\n}))\r\n\r\nfunction UserListScreen({ history }) {\r\n   const classes = useStyles()\r\n   const [order, setOrder] = React.useState('asc')\r\n   const [orderBy, setOrderBy] = React.useState('calories')\r\n   const [selected, setSelected] = React.useState([])\r\n   const [page, setPage] = React.useState(0)\r\n   const [dense, setDense] = React.useState(false)\r\n   const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n\r\n   const handleRequestSort = (event, property) => {\r\n      const isAsc = orderBy === property && order === 'asc'\r\n      setOrder(isAsc ? 'desc' : 'asc')\r\n      setOrderBy(property)\r\n   }\r\n\r\n   const handleSelectAllClick = (event) => {\r\n      if (event.target.checked) {\r\n         const newSelecteds = users.map((user) => user._id)\r\n         setSelected(newSelecteds)\r\n         return\r\n      }\r\n      setSelected([])\r\n   }\r\n\r\n   const handleClick = (event, name) => {\r\n      const selectedIndex = selected.indexOf(name)\r\n      let newSelected = []\r\n\r\n      if (selectedIndex === -1) {\r\n         newSelected = newSelected.concat(selected, name)\r\n      } else if (selectedIndex === 0) {\r\n         newSelected = newSelected.concat(selected.slice(1))\r\n      } else if (selectedIndex === selected.length - 1) {\r\n         newSelected = newSelected.concat(selected.slice(0, -1))\r\n      } else if (selectedIndex > 0) {\r\n         newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1)\r\n         )\r\n      }\r\n\r\n      setSelected(newSelected)\r\n   }\r\n\r\n   const handleChangePage = (event, newPage) => {\r\n      setPage(newPage)\r\n   }\r\n\r\n   const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10))\r\n      setPage(0)\r\n   }\r\n\r\n   const handleChangeDense = (event) => {\r\n      setDense(event.target.checked)\r\n   }\r\n\r\n   const isSelected = (name) => selected.indexOf(name) !== -1\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const userList = useSelector((state) => state.userList)\r\n   const { loading, error, users } = userList\r\n\r\n   const emptyRows =\r\n      users !== undefined &&\r\n      rowsPerPage - Math.min(rowsPerPage, users.length - page * rowsPerPage)\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const userDelete = useSelector((state) => state.userDelete)\r\n   const { success: successDelete } = userDelete\r\n\r\n   const deleteHandle = (id) => {\r\n      if (window.confirm('You are sure?')) {\r\n         dispatch(deleteUser(id))\r\n      }\r\n   }\r\n\r\n   const EnhancedTableToolbar = (props) => {\r\n      const classes = useToolbarStyles()\r\n      const { numSelected } = props\r\n\r\n      const did = users.find((user) => user._id)\r\n\r\n      return (\r\n         <Toolbar\r\n            className={clsx(classes.root, {\r\n               [classes.highlight]: numSelected > 0,\r\n            })}\r\n         >\r\n            {numSelected > 0 ? (\r\n               <Typography\r\n                  className={classes.title}\r\n                  color='inherit'\r\n                  variant='subtitle1'\r\n                  component='div'\r\n               >\r\n                  {numSelected} selected\r\n               </Typography>\r\n            ) : (\r\n               <Typography\r\n                  className={classes.title}\r\n                  variant='h6'\r\n                  id='tableTitle'\r\n                  component='div'\r\n               >\r\n                  <h2>Danh sách tài khoản người dùng</h2>\r\n               </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n               <Tooltip title='Delete'>\r\n                  <IconButton\r\n                     aria-label='delete'\r\n                     onClick={() => deleteHandle(selected)}\r\n                  >\r\n                     <DeleteIcon />\r\n                  </IconButton>\r\n               </Tooltip>\r\n            ) : (\r\n               <Tooltip title='Filter list'>\r\n                  <IconButton aria-label='filter list'>\r\n                     <FilterListIcon />\r\n                  </IconButton>\r\n               </Tooltip>\r\n            )}\r\n         </Toolbar>\r\n      )\r\n   }\r\n\r\n   EnhancedTableToolbar.propTypes = {\r\n      numSelected: PropTypes.number.isRequired,\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (userInfo && userInfo.isAdmin) {\r\n         dispatch(listUsers())\r\n      } else {\r\n         history.push('/login')\r\n      }\r\n   }, [dispatch, history, successDelete, userInfo])\r\n\r\n   return (\r\n      <>\r\n         <Header />\r\n         <Row style={{ backgroundColor: '#b68973' }}>\r\n            <Col md={2} className='p-0'>\r\n               <SideBar />\r\n            </Col>\r\n            <Col md={10} className='pl-0 '>\r\n               {loading ? (\r\n                  <SkeletonEffect />\r\n               ) : error ? (\r\n                  <Announcement variant='danger'>{error}</Announcement>\r\n               ) : (\r\n                  <>\r\n                     <div className={classes.root}>\r\n                        <Paper\r\n                           className={classes.paper}\r\n                           // style={{\r\n                           //   borderRadius: '1rem',\r\n                           //   border: '0.25px solid #ddd',\r\n                           // }}\r\n                        >\r\n                           <TableContainer\r\n                              className='text-center p-5'\r\n                              style={{\r\n                                 borderRadius: '1rem',\r\n                              }}\r\n                           >\r\n                              <EnhancedTableToolbar\r\n                                 numSelected={selected.length}\r\n                              />\r\n                              <Table\r\n                                 className={classes.table}\r\n                                 aria-labelledby='tableTitle'\r\n                                 size={dense ? 'small' : 'medium'}\r\n                                 aria-label='enhanced table'\r\n                              >\r\n                                 <EnhancedTableHead\r\n                                    classes={classes}\r\n                                    numSelected={selected.length}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n                                    onSelectAllClick={handleSelectAllClick}\r\n                                    onRequestSort={handleRequestSort}\r\n                                    rowCount={users.length}\r\n                                 />\r\n                                 <TableBody>\r\n                                    {stableSort(\r\n                                       users,\r\n                                       getComparator(order, orderBy)\r\n                                    )\r\n                                       .slice(\r\n                                          page * rowsPerPage,\r\n                                          page * rowsPerPage + rowsPerPage\r\n                                       )\r\n                                       .map((user, index) => {\r\n                                          const isItemSelected = isSelected(\r\n                                             user._id\r\n                                          )\r\n                                          const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                                          return (\r\n                                             <TableRow\r\n                                                hover\r\n                                                onClick={(event) =>\r\n                                                   handleClick(event, user._id)\r\n                                                }\r\n                                                role='checkbox'\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={user._id}\r\n                                                selected={isItemSelected}\r\n                                             >\r\n                                                <TableCell padding='checkbox'>\r\n                                                   <Checkbox\r\n                                                      checked={isItemSelected}\r\n                                                      inputProps={{\r\n                                                         'aria-labelledby':\r\n                                                            labelId,\r\n                                                      }}\r\n                                                   />\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                   component='th'\r\n                                                   id={labelId}\r\n                                                   scope='row'\r\n                                                   padding='none'\r\n                                                   align='center'\r\n                                                >\r\n                                                   {user._id}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                   align='left'\r\n                                                   className='text-center'\r\n                                                >\r\n                                                   {user.name}\r\n                                                </TableCell>\r\n                                                <TableCell align='center'>\r\n                                                   {user.email}\r\n                                                </TableCell>\r\n                                                <TableCell align='center'>\r\n                                                   {' '}\r\n                                                   {user.isAdmin ? (\r\n                                                      <i\r\n                                                         className='fas fa-check'\r\n                                                         style={{\r\n                                                            color: 'green',\r\n                                                         }}\r\n                                                      ></i>\r\n                                                   ) : (\r\n                                                      <i\r\n                                                         className='fas fa-times'\r\n                                                         style={{\r\n                                                            color: 'red',\r\n                                                         }}\r\n                                                      ></i>\r\n                                                   )}\r\n                                                </TableCell>\r\n                                                <TableCell align='center'>\r\n                                                   <LinkContainer\r\n                                                      to={`/admin/user/${user._id}/edit`}\r\n                                                   >\r\n                                                      <Button\r\n                                                         variant='info'\r\n                                                         className='btn-sm rounded-pill'\r\n                                                      >\r\n                                                         <i className='far fa-edit'></i>\r\n                                                      </Button>\r\n                                                   </LinkContainer>\r\n                                                </TableCell>\r\n                                             </TableRow>\r\n                                          )\r\n                                       })}\r\n                                    {emptyRows > 0 && (\r\n                                       <TableRow\r\n                                          style={{\r\n                                             height:\r\n                                                (dense ? 33 : 53) * emptyRows,\r\n                                          }}\r\n                                       >\r\n                                          <TableCell colSpan={6} />\r\n                                       </TableRow>\r\n                                    )}\r\n                                 </TableBody>\r\n                              </Table>\r\n                           </TableContainer>\r\n                           <TablePagination\r\n                              rowsPerPageOptions={[5, 10, 25]}\r\n                              component='div'\r\n                              count={users.length}\r\n                              rowsPerPage={rowsPerPage}\r\n                              page={page}\r\n                              onChangePage={handleChangePage}\r\n                              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                           />\r\n                        </Paper>\r\n                        <FormControlLabel\r\n                           control={\r\n                              <Switch\r\n                                 checked={dense}\r\n                                 onChange={handleChangeDense}\r\n                              />\r\n                           }\r\n                           label='Dense padding'\r\n                        />\r\n                     </div>\r\n                  </>\r\n               )}\r\n            </Col>\r\n         </Row>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default UserListScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CategoriesListScreen.js",["549","550"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductListScreen.js",["551","552"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductCreateScreen.js",["553","554","555","556","557","558","559"],"F:\\Code\\shopPro\\frontend\\src\\components\\ProtectedRoute.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SupplierListScreen.js",["560","561","562","563"],"import Checkbox from '@material-ui/core/Checkbox'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TablePagination from '@material-ui/core/TablePagination'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Close, Message } from '@material-ui/icons'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport clsx from 'clsx'\r\nimport { format, utcToZonedTime } from 'date-fns-tz'\r\nimport PropTypes from 'prop-types'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport '../../notisfied.css'\r\nimport {\r\n   createSupplier,\r\n   deleteSupplier,\r\n   listSupplierAdm,\r\n} from '../../actions/supplierActions'\r\nimport Announcement from '../../components/Announcement'\r\nimport Loader from '../../components/Loader'\r\nimport MessageSuccess from '../../components/MessageSuccess'\r\nimport SkeletonEffect from '../../components/SkeletonEffect'\r\nimport SideBar from './components/SideBar'\r\nimport Header from './components/Header'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n   if (b[orderBy] < a[orderBy]) {\r\n      return -1\r\n   }\r\n   if (b[orderBy] > a[orderBy]) {\r\n      return 1\r\n   }\r\n   return 0\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n   return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n   const stabilizedThis = array.map((el, index) => [el, index])\r\n   stabilizedThis.sort((a, b) => {\r\n      const order = comparator(a[0], b[0])\r\n      if (order !== 0) return order\r\n      return a[1] - b[1]\r\n   })\r\n   return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst headCells = [\r\n   {\r\n      id: 'id',\r\n      numeric: false,\r\n      disablePadding: true,\r\n      label: 'ID',\r\n   },\r\n   { id: 'name', numeric: true, disablePadding: false, label: 'TÊN' },\r\n   {\r\n      id: 'create',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'THỜI GIAN TẠO',\r\n   },\r\n   {\r\n      id: 'update',\r\n      numeric: true,\r\n      disablePadding: false,\r\n      label: 'THỜI GIAN CẬP NHẬT',\r\n   },\r\n\r\n   { id: 'action', numeric: true, disablePadding: false, label: '' },\r\n]\r\n\r\nfunction EnhancedTableHead(props) {\r\n   const {\r\n      classes,\r\n      onSelectAllClick,\r\n      order,\r\n      orderBy,\r\n      numSelected,\r\n      rowCount,\r\n      onRequestSort,\r\n   } = props\r\n   const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property)\r\n   }\r\n\r\n   return (\r\n      <TableHead>\r\n         <TableRow>\r\n            <TableCell padding='checkbox'>\r\n               <Checkbox\r\n                  indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                  checked={rowCount > 0 && numSelected === rowCount}\r\n                  onChange={onSelectAllClick}\r\n                  inputProps={{ 'aria-label': 'select all desserts' }}\r\n               />\r\n            </TableCell>\r\n            {headCells.map((headCell) => (\r\n               <TableCell\r\n                  key={headCell.id}\r\n                  align='center'\r\n                  padding={headCell.disablePadding ? 'none' : 'default'}\r\n                  sortDirection={orderBy === headCell.id ? order : false}\r\n                  className='pl-5'\r\n                  style={{ fontWeight: '700' }}\r\n               >\r\n                  <TableSortLabel\r\n                     active={orderBy === headCell.id}\r\n                     direction={orderBy === headCell.id ? order : 'asc'}\r\n                     onClick={createSortHandler(headCell.id)}\r\n                  >\r\n                     {headCell.label}\r\n                     {orderBy === headCell.id ? (\r\n                        <span className={classes.visuallyHidden}>\r\n                           {order === 'desc'\r\n                              ? 'sorted descending'\r\n                              : 'sorted ascending'}\r\n                        </span>\r\n                     ) : null}\r\n                  </TableSortLabel>\r\n               </TableCell>\r\n            ))}\r\n         </TableRow>\r\n      </TableHead>\r\n   )\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n   classes: PropTypes.object.isRequired,\r\n   numSelected: PropTypes.number.isRequired,\r\n   onRequestSort: PropTypes.func.isRequired,\r\n   onSelectAllClick: PropTypes.func.isRequired,\r\n   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n   orderBy: PropTypes.string.isRequired,\r\n   rowCount: PropTypes.number.isRequired,\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n   root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n   },\r\n   highlight:\r\n      theme.palette.type === 'light'\r\n         ? {\r\n              color: theme.palette.secondary.main,\r\n              backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n           }\r\n         : {\r\n              color: theme.palette.text.primary,\r\n              backgroundColor: theme.palette.secondary.dark,\r\n           },\r\n   title: {\r\n      flex: '1 1 100%',\r\n   },\r\n}))\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: '100%',\r\n   },\r\n   paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n   },\r\n   table: {\r\n      minWidth: 750,\r\n      align: 'center',\r\n   },\r\n   visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n   },\r\n}))\r\n\r\nconst SupplierListScreen = () => {\r\n   const classes = useStyles()\r\n   const [order, setOrder] = React.useState('asc')\r\n   const [orderBy, setOrderBy] = React.useState('calories')\r\n   const [selected, setSelected] = React.useState([])\r\n   const [page, setPage] = React.useState(0)\r\n   const [dense, setDense] = React.useState(false)\r\n   const [rowsPerPage, setRowsPerPage] = React.useState(5)\r\n\r\n   const handleRequestSort = (event, property) => {\r\n      const isAsc = orderBy === property && order === 'asc'\r\n      setOrder(isAsc ? 'desc' : 'asc')\r\n      setOrderBy(property)\r\n   }\r\n\r\n   const handleSelectAllClick = (event) => {\r\n      if (event.target.checked) {\r\n         const newSelecteds = supplier.map((sup) => sup._id)\r\n         setSelected(newSelecteds)\r\n         return\r\n      }\r\n      setSelected([])\r\n   }\r\n\r\n   const handleClick = (event, name) => {\r\n      const selectedIndex = selected.indexOf(name)\r\n      let newSelected = []\r\n\r\n      if (selectedIndex === -1) {\r\n         newSelected = newSelected.concat(selected, name)\r\n      } else if (selectedIndex === 0) {\r\n         newSelected = newSelected.concat(selected.slice(1))\r\n      } else if (selectedIndex === selected.length - 1) {\r\n         newSelected = newSelected.concat(selected.slice(0, -1))\r\n      } else if (selectedIndex > 0) {\r\n         newSelected = newSelected.concat(\r\n            selected.slice(0, selectedIndex),\r\n            selected.slice(selectedIndex + 1)\r\n         )\r\n      }\r\n\r\n      setSelected(newSelected)\r\n   }\r\n\r\n   const handleChangePage = (event, newPage) => {\r\n      setPage(newPage)\r\n   }\r\n\r\n   const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10))\r\n      setPage(0)\r\n   }\r\n\r\n   const handleChangeDense = (event) => {\r\n      setDense(event.target.checked)\r\n   }\r\n\r\n   const isSelected = (name) => selected.indexOf(name) !== -1\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const [open, setOpen] = useState(false)\r\n   const [name, setName] = useState('')\r\n\r\n   const handleClickOpen = () => {\r\n      setOpen(true)\r\n   }\r\n\r\n   const handleClose = () => {\r\n      setOpen(false)\r\n   }\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const supplierListAdm = useSelector((state) => state.supplierListAdm)\r\n   const { loading, error, supplier } = supplierListAdm\r\n\r\n   const supplierDelete = useSelector((state) => state.supplierDelete)\r\n   const {\r\n      loading: loadingDelete,\r\n      error: errorDelete,\r\n      success: successDelete,\r\n   } = supplierDelete\r\n\r\n   const supplierCreate = useSelector((state) => state.supplierCreate)\r\n   const {\r\n      loading: loadingCreate,\r\n      error: errorCreate,\r\n      success: successCreate,\r\n      supplier: createdProduct,\r\n   } = supplierCreate\r\n\r\n   const emptyRows =\r\n      supplier !== undefined &&\r\n      rowsPerPage - Math.min(rowsPerPage, supplier.length - page * rowsPerPage)\r\n\r\n   const deleteHandle = (id) => {\r\n      if (window.confirm('Bạn có chắc?')) {\r\n         dispatch(deleteSupplier({ id }))\r\n         setSelected([])\r\n      }\r\n   }\r\n\r\n   const EnhancedTableToolbar = (props) => {\r\n      const classes = useToolbarStyles()\r\n      const { numSelected } = props\r\n\r\n      const did = supplier.find((cat) => cat._id)\r\n      return (\r\n         <Toolbar\r\n            className={clsx(classes.root, {\r\n               [classes.highlight]: numSelected > 0,\r\n            })}\r\n         >\r\n            {numSelected > 0 ? (\r\n               <Typography\r\n                  className={classes.title}\r\n                  color='inherit'\r\n                  variant='subtitle1'\r\n                  component='div'\r\n               >\r\n                  {numSelected} selected\r\n               </Typography>\r\n            ) : (\r\n               <Typography\r\n                  className={classes.title}\r\n                  variant='h6'\r\n                  id='tableTitle'\r\n                  component='div'\r\n               >\r\n                  <h2>DANH SÁCH NHÀ CUNG CẤP</h2>\r\n               </Typography>\r\n            )}\r\n\r\n            {numSelected > 0 ? (\r\n               <Tooltip title='Delete'>\r\n                  <IconButton\r\n                     aria-label='delete'\r\n                     onClick={() => deleteHandle(selected)}\r\n                  >\r\n                     <DeleteIcon />\r\n                  </IconButton>\r\n               </Tooltip>\r\n            ) : (\r\n               <Tooltip title='Filter list'>\r\n                  <IconButton aria-label='filter list'>\r\n                     <FilterListIcon />\r\n                  </IconButton>\r\n               </Tooltip>\r\n            )}\r\n         </Toolbar>\r\n      )\r\n   }\r\n\r\n   EnhancedTableToolbar.propTypes = {\r\n      numSelected: PropTypes.number.isRequired,\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (userInfo) {\r\n         dispatch(listSupplierAdm())\r\n      }\r\n   }, [dispatch, userInfo, successCreate, successDelete])\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(createSupplier(name))\r\n   }\r\n\r\n   const submitHandlerDetails = (e) => {\r\n      e.preventDefault()\r\n      dispatch(createSupplier(name))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Header />\r\n         <Row style={{ backgroundColor: '#b68973' }}>\r\n            <Col md={2} className='p-0'>\r\n               <SideBar />\r\n            </Col>\r\n            <Col md={10} className='pl-0'>\r\n               {loadingDelete && (\r\n                     <MessageSuccess variant='Đã xoá thành công'></MessageSuccess>\r\n                  ) && <SkeletonEffect />}\r\n               {errorDelete && <Message>{errorDelete}</Message>}\r\n               {loadingCreate && (\r\n                  <MessageSuccess\r\n                     variant={'Đã thêm ' + name + ' thành công'}\r\n                  ></MessageSuccess>\r\n               )}\r\n               {errorCreate && <Message>{errorCreate}</Message>}\r\n               {loading ? (\r\n                  <SkeletonEffect />\r\n               ) : error ? (\r\n                  <Announcement variant='danger'>{error}</Announcement>\r\n               ) : (\r\n                  <>\r\n                     <div>\r\n                        <Dialog\r\n                           disableBackdropClick\r\n                           disableEscapeKeyDown\r\n                           open={open}\r\n                           onClose={handleClose}\r\n                           aria-labelledby='form-dialog-title'\r\n                           maxWidth='xl'\r\n                        >\r\n                           <div className='d-flex justify-content-end'>\r\n                              <Button\r\n                                 onClick={handleClose}\r\n                                 className='p-1 m-1 rounded-pill'\r\n                                 variant='light'\r\n                              >\r\n                                 <Close />\r\n                              </Button>\r\n                           </div>\r\n\r\n                           <DialogContent style={{ width: '30rem' }}>\r\n                              <h4 className='text-center'>Thêm nhà cung cấp</h4>\r\n                              <Form onSubmit={submitHandler}>\r\n                                 <Form.Group>\r\n                                    <Form.Label as='p' className='mb-1'>\r\n                                       Tên nhà cung cấp\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                       className='border border-grey rounded-pill'\r\n                                       type='name'\r\n                                       size='normal'\r\n                                       placeholder='Enter name'\r\n                                       value={name}\r\n                                       onChange={(e) => setName(e.target.value)}\r\n                                    ></Form.Control>\r\n                                 </Form.Group>\r\n                                 <div className='pl-3 pr-3 text-center'>\r\n                                    <Button\r\n                                       type='submit'\r\n                                       size='sm'\r\n                                       variant='outline-light'\r\n                                       className='rounded-pill btn-b btn_color_created pl-5 pr-5'\r\n                                       style={{\r\n                                          fontSize: '1rem',\r\n                                          letterSpacing: '0.25rem',\r\n                                       }}\r\n                                    >\r\n                                       Tạo\r\n                                    </Button>\r\n                                 </div>\r\n                              </Form>\r\n                           </DialogContent>\r\n                        </Dialog>\r\n                     </div>\r\n\r\n                     <div className={classes.root}>\r\n                        <div className='d-flex justify-content-end'>\r\n                           <Button\r\n                              variant='outline-light'\r\n                              className='my-2 text-uppercase rounded-pill pt-2 pb-2'\r\n                              onClick={handleClickOpen}\r\n                              size='normal'\r\n                           >\r\n                              <i className='fas fa-plus'></i> Thêm nhà cung cấp\r\n                           </Button>\r\n                        </div>\r\n                        <Paper className={classes.paper}>\r\n                           <TableContainer\r\n                              className='text-center p-5'\r\n                              style={{\r\n                                 borderRadius: '1rem',\r\n                              }}\r\n                           >\r\n                              <EnhancedTableToolbar\r\n                                 numSelected={selected.length}\r\n                              />\r\n                              <Table\r\n                                 className={classes.table}\r\n                                 aria-labelledby='tableTitle'\r\n                                 size={dense ? 'small' : 'medium'}\r\n                                 aria-label='enhanced table'\r\n                              >\r\n                                 <EnhancedTableHead\r\n                                    classes={classes}\r\n                                    numSelected={selected.length}\r\n                                    order={order}\r\n                                    orderBy={orderBy}\r\n                                    onSelectAllClick={handleSelectAllClick}\r\n                                    onRequestSort={handleRequestSort}\r\n                                    rowCount={supplier.length}\r\n                                 />\r\n                                 <TableBody>\r\n                                    {stableSort(\r\n                                       supplier,\r\n                                       getComparator(order, orderBy)\r\n                                    )\r\n                                       .slice(\r\n                                          page * rowsPerPage,\r\n                                          page * rowsPerPage + rowsPerPage\r\n                                       )\r\n                                       .map((sup, index) => {\r\n                                          const isItemSelected = isSelected(\r\n                                             sup._id\r\n                                          )\r\n                                          const labelId = `enhanced-table-checkbox-${index}`\r\n\r\n                                          return (\r\n                                             <TableRow\r\n                                                hover\r\n                                                onClick={(event) =>\r\n                                                   handleClick(event, sup._id)\r\n                                                }\r\n                                                role='checkbox'\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={sup._id}\r\n                                                selected={isItemSelected}\r\n                                             >\r\n                                                <TableCell padding='checkbox'>\r\n                                                   <Checkbox\r\n                                                      checked={isItemSelected}\r\n                                                      inputProps={{\r\n                                                         'aria-labelledby':\r\n                                                            labelId,\r\n                                                      }}\r\n                                                   />\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                   component='th'\r\n                                                   id={labelId}\r\n                                                   scope='row'\r\n                                                   padding='none'\r\n                                                   align='center'\r\n                                                >\r\n                                                   {sup._id}\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                   align='left'\r\n                                                   className='text-center'\r\n                                                >\r\n                                                   {sup.name}\r\n                                                </TableCell>\r\n                                                <TableCell align='center'>\r\n                                                   {format(\r\n                                                      new utcToZonedTime(\r\n                                                         sup.createdAt,\r\n                                                         'Asia/Ho_Chi_Minh'\r\n                                                      ),\r\n                                                      'HH:mm:ss - dd/MM/yyyy',\r\n                                                      {\r\n                                                         timeZone:\r\n                                                            'Asia/Ho_Chi_Minh',\r\n                                                      }\r\n                                                   )}\r\n                                                </TableCell>\r\n                                                <TableCell align='center'>\r\n                                                   {format(\r\n                                                      new utcToZonedTime(\r\n                                                         sup.updatedAt,\r\n                                                         'Asia/Ho_Chi_Minh'\r\n                                                      ),\r\n                                                      'HH:mm:ss - MM/dd/yyyy',\r\n                                                      {\r\n                                                         timeZone:\r\n                                                            'Asia/Ho_Chi_Minh',\r\n                                                      }\r\n                                                   )}\r\n                                                </TableCell>\r\n\r\n                                                <TableCell align='center'>\r\n                                                   <LinkContainer\r\n                                                      to={`/admin/supplier/${sup._id}/edit`}\r\n                                                   >\r\n                                                      <Button\r\n                                                         variant='outline-light'\r\n                                                         className='btn-sm rounded-pill btn_color_details'\r\n                                                      >\r\n                                                         CHI TIẾT\r\n                                                      </Button>\r\n                                                   </LinkContainer>\r\n                                                </TableCell>\r\n                                             </TableRow>\r\n                                          )\r\n                                       })}\r\n                                    {emptyRows > 0 && (\r\n                                       <TableRow\r\n                                          style={{\r\n                                             height:\r\n                                                (dense ? 33 : 53) * emptyRows,\r\n                                          }}\r\n                                       >\r\n                                          <TableCell colSpan={6} />\r\n                                       </TableRow>\r\n                                    )}\r\n                                 </TableBody>\r\n                              </Table>\r\n                           </TableContainer>\r\n                           <TablePagination\r\n                              rowsPerPageOptions={[5, 10, 25]}\r\n                              component='div'\r\n                              count={supplier.length}\r\n                              rowsPerPage={rowsPerPage}\r\n                              page={page}\r\n                              onChangePage={handleChangePage}\r\n                              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                           />\r\n                        </Paper>\r\n                        <FormControlLabel\r\n                           control={\r\n                              <Switch\r\n                                 checked={dense}\r\n                                 onChange={handleChangeDense}\r\n                              />\r\n                           }\r\n                           label='Dense padding'\r\n                        />\r\n                     </div>\r\n                  </>\r\n               )}\r\n            </Col>\r\n         </Row>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default SupplierListScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\OrderListScreen.js",["564","565","566"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CategoryEditScreen.js",["567","568","569"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\OrderEditScreen.js",["570","571","572"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\ProductEditScreen.js",["573","574","575"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SupplierEditScreen.js",["576","577"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\UserEditScreen.js",["578","579","580"],"F:\\Code\\shopPro\\frontend\\src\\actions\\cloudinary.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\ListNumber.js",["581","582","583","584","585"],"import { Button } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport { Card, Col, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listOrders } from '../../../actions/orderActions'\r\nimport { listAllProduct, listProducts } from '../../../actions/productActions'\r\nimport { listSupplierAdm } from '../../../actions/supplierActions'\r\n\r\nfunction formatMoney(n, currency) {\r\n   return n.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + currency\r\n}\r\n\r\nconst ListNumbers = ({ history }) => {\r\n   const dispatch = useDispatch()\r\n\r\n   const productListAll = useSelector((state) => state.productListAll)\r\n   const { products } = productListAll\r\n\r\n   const orderConsult = useSelector((state) => state.orderConsult)\r\n   const { order } = orderConsult\r\n\r\n   const supplierListAdm = useSelector((state) => state.supplierListAdm)\r\n   const { supplier } = supplierListAdm\r\n\r\n   const orderList = useSelector((state) => state.orderList)\r\n   const { ordersList } = orderList\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   let outOfStock = 0\r\n   let productOut = []\r\n   products.map((product) => {\r\n      if (product.countInStock == 0) {\r\n         productOut.push(product)\r\n         outOfStock += 1\r\n      }\r\n   })\r\n\r\n   useEffect(() => {\r\n      if (!userInfo.isAdmin) {\r\n         history.push('/login')\r\n      }\r\n\r\n      if (userInfo) {\r\n         dispatch(listOrders())\r\n         dispatch(listAllProduct())\r\n         dispatch(listSupplierAdm())\r\n      }\r\n   }, [dispatch, history, userInfo])\r\n\r\n   return (\r\n      <div>\r\n         <Row className='p-3 '>\r\n            <Col md={3}>\r\n               <Card\r\n                  className='shadow card_color'\r\n                  style={{ height: '16rem', border: '0.25rem solid #2e5a1c' }}\r\n               >\r\n                  <Card.Body>\r\n                     <Card.Title className='text-center'>\r\n                        <h4>Tổng số đơn hàng</h4>\r\n                     </Card.Title>\r\n                     <Card.Subtitle\r\n                        className='mb-3  pt-2 text-center text-secondary'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        Tổng số đơn hàng đã được đặt\r\n                     </Card.Subtitle>\r\n                     <Card.Title className='text-center'>\r\n                        <h1 style={{ fontSize: '3rem' }}>\r\n                           {ordersList && ordersList.orders?.length}\r\n                        </h1>\r\n                     </Card.Title>\r\n                     <Card.Subtitle className='mb-2 text-center'>\r\n                        <h5 className='text-secondary'>Đơn hàng</h5>\r\n                     </Card.Subtitle>\r\n                     <Card.Link\r\n                        href='/admin/orderlist'\r\n                        className='d-flex justify-content-end'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        <Button color='secondary'>\r\n                           <strong className='text-capitalize'>Chi tiết</strong>\r\n                        </Button>\r\n                     </Card.Link>\r\n                  </Card.Body>\r\n               </Card>\r\n            </Col>\r\n            <Col md={3}>\r\n               <Card\r\n                  className='shadow card_color'\r\n                  style={{ height: '16rem', border: '0.25rem solid #2e5a1c' }}\r\n               >\r\n                  <Card.Body>\r\n                     <Card.Title className='text-center'>\r\n                        <h4>Doanh thu</h4>\r\n                     </Card.Title>\r\n                     <Card.Subtitle\r\n                        className='mb-4 mt-4 pt-2 text-center text-secondary'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        Tổng số doanh thu từ các đơn hàng\r\n                     </Card.Subtitle>\r\n                     <Card.Title className='text-center mb-4'>\r\n                        <h2\r\n                           style={{ fontSize: '1.4rem' }}\r\n                           className='text-lowercase'\r\n                        >\r\n                           {ordersList?.totalAmount &&\r\n                              formatMoney(ordersList?.totalAmount, 'đ')}\r\n                        </h2>\r\n                     </Card.Title>\r\n\r\n                     <Card.Link\r\n                        href='/admin/orderlist'\r\n                        className='d-flex justify-content-end'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        <Button color='secondary'>\r\n                           <strong className='text-capitalize'>\r\n                              {' '}\r\n                              Chi tiết\r\n                           </strong>\r\n                        </Button>\r\n                     </Card.Link>\r\n                  </Card.Body>\r\n               </Card>\r\n            </Col>\r\n            <Col md={3}>\r\n               <Card\r\n                  className='shadow card_color'\r\n                  style={{ height: '16rem', border: '0.25rem solid #2e5a1c' }}\r\n               >\r\n                  <Card.Body>\r\n                     <Card.Title className='text-center'>\r\n                        <h4>Tổng số sản phẩm</h4>\r\n                     </Card.Title>\r\n                     <Card.Subtitle\r\n                        className=' pt-2 text-center text-secondary'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        Tổng số sản phẩm đang được bày bán\r\n                     </Card.Subtitle>\r\n                     <Card.Title className='text-center'>\r\n                        <h1 style={{ fontSize: '3rem' }}>\r\n                           {products && products.length}\r\n                        </h1>\r\n                     </Card.Title>\r\n                     <Card.Subtitle className='mb-2 text-center'>\r\n                        <h5 className='text-secondary'>Sản phẩm</h5>\r\n                     </Card.Subtitle>\r\n                     <Card.Link\r\n                        href='/admin/productlist'\r\n                        className='d-flex justify-content-end'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        <Button color='secondary'>\r\n                           <strong className='text-capitalize'>Chi tiết</strong>\r\n                        </Button>\r\n                     </Card.Link>\r\n                  </Card.Body>\r\n               </Card>\r\n            </Col>\r\n\r\n            <Col md={3}>\r\n               <Card\r\n                  className='shadow card_color'\r\n                  style={{ height: '16rem', border: '0.25rem solid #2e5a1c' }}\r\n                  text='light'\r\n               >\r\n                  <Card.Body>\r\n                     <Card.Title className='text-center'>\r\n                        <h4>Tổng số sản phẩm hết hàng</h4>\r\n                     </Card.Title>\r\n                     <Card.Subtitle\r\n                        className='mb-3 pt-2 text-center text-secondary'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        Tổng số sản phẩm hết hàng\r\n                     </Card.Subtitle>\r\n                     <Card.Title className='text-center'>\r\n                        <h1 style={{ fontSize: '3rem' }}>{outOfStock}</h1>\r\n                     </Card.Title>\r\n                     <Card.Subtitle className='mb-1 text-center'>\r\n                        <h5 className='text-secondary'>Sản phẩm</h5>\r\n                     </Card.Subtitle>\r\n                     <Card.Link\r\n                        href='/admin/productlist'\r\n                        className='d-flex justify-content-end'\r\n                        style={{ borderTop: '0.15rem solid #ddd' }}\r\n                     >\r\n                        <Button color='secondary'>\r\n                           <strong className='text-capitalize'>Chi tiết</strong>\r\n                        </Button>\r\n                     </Card.Link>\r\n                  </Card.Body>\r\n               </Card>\r\n            </Col>\r\n         </Row>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ListNumbers\r\n","F:\\Code\\shopPro\\frontend\\src\\actions\\notificationsAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\components\\NotificationsDropDown.js",[],["586","587"],"F:\\Code\\shopPro\\frontend\\src\\screens\\UsersAddressListScreen.js",["588"],"import Dialog from '@material-ui/core/Dialog'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Close } from '@material-ui/icons'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n   createAddressUser,\r\n   deleteAddressUser,\r\n   getUserDetails,\r\n   selectRoleAddressUser,\r\n   updateAddressUser,\r\n} from '../actions/userActions'\r\nimport Announcement from '../components/Announcement.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Header from '../components/Header.js'\r\nimport Message from '../components/Message'\r\nimport SkeletonEffect from '../components/SkeletonEffect'\r\nimport data from '../data.json'\r\n\r\nlet formatPhoneNumber = (str) => {\r\n   //Filter only numbers from the input\r\n   let cleaned = ('' + str).replace(/\\D/g, '')\r\n\r\n   //Check if the input is of correct length\r\n   let match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/)\r\n\r\n   if (match) {\r\n      return '(' + match[1] + ') ' + match[2] + ' ' + match[3]\r\n   }\r\n\r\n   return null\r\n}\r\n\r\nconst UsersAddressListScreen = ({ history }) => {\r\n   const [thanhPho, setThanhPho] = useState('')\r\n   const [huyen, setHuyen] = useState('')\r\n   const [xa, setXa] = useState('')\r\n   const [diaChi, setDiachi] = useState('')\r\n   const [numberPhone, setNumberPhone] = useState('')\r\n   const [open, setOpen] = useState(false)\r\n   const [openEdit, setOpenEdit] = useState(false)\r\n   const [idAddress, setIdAddress] = useState('')\r\n\r\n   const addressUser = { thanhPho, huyen, xa, diaChi, numberPhone }\r\n   const updateInformationAddress = {\r\n      idAddress,\r\n      thanhPho,\r\n      huyen,\r\n      xa,\r\n      diaChi,\r\n      numberPhone,\r\n   }\r\n\r\n   const handleClickOpen = () => {\r\n      setOpen(true)\r\n   }\r\n\r\n   const handleClose = () => {\r\n      setOpen(false)\r\n   }\r\n\r\n   const handleClickOpenEdit = (id) => {\r\n      setOpenEdit(true)\r\n      setIdAddress(id)\r\n   }\r\n\r\n   const handleCloseEdit = () => {\r\n      setOpenEdit(false)\r\n   }\r\n\r\n   const dispatch = useDispatch()\r\n\r\n   const userLogin = useSelector((state) => state.userLogin)\r\n   const { userInfo } = userLogin\r\n\r\n   const userDetails = useSelector((state) => state.userDetails)\r\n   const { loading, error, user } = userDetails\r\n\r\n   const userDeleteAddress = useSelector((state) => state.userDeleteAddress)\r\n   const { success: successDeleteAddress } = userDeleteAddress\r\n\r\n   const userCreateAddress = useSelector((state) => state.userCreateAddress)\r\n   const { success: successCreateAddress } = userCreateAddress\r\n\r\n   const userSelectRole = useSelector((state) => state.userSelectRole)\r\n   const { success: successSelectRole } = userSelectRole\r\n\r\n   const userUpdateAddress = useSelector((state) => state.userUpdateAddress)\r\n   const { success: successUpdateAddress } = userUpdateAddress\r\n\r\n   useEffect(() => {\r\n      if (!userInfo) {\r\n         history.push('/login')\r\n      } else {\r\n         if (\r\n            successDeleteAddress ||\r\n            successCreateAddress ||\r\n            successSelectRole ||\r\n            successUpdateAddress\r\n         ) {\r\n            setOpen(false)\r\n            setOpenEdit(false)\r\n\r\n            dispatch(getUserDetails('profile'))\r\n         }\r\n      }\r\n      window.scrollTo(0, 0)\r\n   }, [\r\n      history,\r\n      dispatch,\r\n      successDeleteAddress,\r\n      successCreateAddress,\r\n      successSelectRole,\r\n      successUpdateAddress,\r\n   ])\r\n\r\n   const deleteAddress = (id) => {\r\n      dispatch(deleteAddressUser({ id: id }))\r\n   }\r\n\r\n   const createAddress = (e) => {\r\n      e.preventDefault()\r\n      dispatch(createAddressUser(addressUser))\r\n   }\r\n\r\n   const selectRole = (id, role) => {\r\n      dispatch(selectRoleAddressUser({ id: id, role: role }))\r\n   }\r\n\r\n   const updateAddress = (e) => {\r\n      e.preventDefault()\r\n      dispatch(updateAddressUser(updateInformationAddress))\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <Header />\r\n\r\n         {loading ? (\r\n            <SkeletonEffect />\r\n         ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n         ) : (\r\n            <>\r\n               <div>\r\n                  <Dialog\r\n                     maxWidth='xl'\r\n                     open={open}\r\n                     onClose={handleClose}\r\n                     aria-labelledby='form-dialog-title'\r\n                  >\r\n                     <div className='d-flex justify-content-end'>\r\n                        <Button\r\n                           onClick={handleClose}\r\n                           className='p-1 m-1 rounded-pill'\r\n                           variant='light'\r\n                        >\r\n                           <Close />\r\n                        </Button>\r\n                     </div>\r\n                     <h4 id='form-dialog-title' className='text-center p-3'>\r\n                        Thêm địa chỉ mới\r\n                     </h4>\r\n                     <DialogContent style={{ width: '35rem' }}>\r\n                        <Form\r\n                           onSubmit={createAddress}\r\n                           className='mt-2 border-0 mb-2'\r\n                        >\r\n                           <Form.Group controlId='address'>\r\n                              <Form.Label as='p' className='mb-1 mt-2'>\r\n                                 <strong>Thành Phố / Tỉnh</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 placeholder='Enter address'\r\n                                 value={thanhPho}\r\n                                 onChange={(e) => setThanhPho(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>\r\n                                    Vui lòng chọn thành phố/tỉnh...\r\n                                 </option>\r\n                                 {data.map((tp) => (\r\n                                    <option\r\n                                       style={{ color: 'black' }}\r\n                                       key={tp.Id}\r\n                                       value={tp.Name}\r\n                                    >\r\n                                       {tp.Name}\r\n                                    </option>\r\n                                 ))}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='city'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong> Quận / Huyện</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 placeholder='Enter city'\r\n                                 value={huyen}\r\n                                 onChange={(e) => setHuyen(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>Vui lòng chọn quận/huyện...</option>\r\n                                 {data.map(\r\n                                    (a) =>\r\n                                       a.Name === thanhPho &&\r\n                                       a.Districts.map((b) => (\r\n                                          <option\r\n                                             key={b.Id}\r\n                                             style={{ color: 'black' }}\r\n                                             value={b.Name}\r\n                                          >\r\n                                             {b.Name}\r\n                                          </option>\r\n                                       ))\r\n                                 )}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='postalCode'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Phường / Xã</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 required\r\n                                 placeholder='Enter postalCode'\r\n                                 value={xa}\r\n                                 onChange={(e) => setXa(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>\r\n                                    Vui lòng chọn thành xã/phường...\r\n                                 </option>\r\n                                 {data.map(\r\n                                    (a) =>\r\n                                       a.Name === thanhPho &&\r\n                                       a.Districts.map(\r\n                                          (b) =>\r\n                                             b.Name === huyen &&\r\n                                             b.Wards.map((c) => (\r\n                                                <option\r\n                                                   style={{ color: 'black' }}\r\n                                                >\r\n                                                   {c.Name}\r\n                                                </option>\r\n                                             ))\r\n                                       )\r\n                                 )}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='country'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Địa chỉ chi tiết</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 placeholder='Enter country'\r\n                                 value={diaChi}\r\n                                 onChange={(e) => setDiachi(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              ></Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='country'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Số điện thoại</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 placeholder='Enter country'\r\n                                 value={formatPhoneNumber(numberPhone)}\r\n                                 onChange={(e) =>\r\n                                    setNumberPhone(e.target.value)\r\n                                 }\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              ></Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <div className='d-flex justify-content-center'>\r\n                              <Button\r\n                                 type='submit'\r\n                                 className='btn_color rounded-pill text-center'\r\n                                 style={{ width: '15rem' }}\r\n                              >\r\n                                 Tạo\r\n                              </Button>\r\n                           </div>\r\n                        </Form>\r\n                     </DialogContent>\r\n                  </Dialog>\r\n               </div>\r\n               <div>\r\n                  <Dialog\r\n                     maxWidth='xl'\r\n                     open={openEdit}\r\n                     onClose={handleCloseEdit}\r\n                     aria-labelledby='form-dialog-title'\r\n                  >\r\n                     <div className='d-flex justify-content-end'>\r\n                        <Button\r\n                           onClick={handleCloseEdit}\r\n                           className='p-1 m-1 rounded-pill'\r\n                           variant='light'\r\n                        >\r\n                           <Close />\r\n                        </Button>\r\n                     </div>\r\n                     <h4 id='form-dialog-title' className='text-center p-3'>\r\n                        Sửa thông tin địa chỉ\r\n                     </h4>\r\n                     <DialogContent style={{ width: '35rem' }}>\r\n                        <Form\r\n                           onSubmit={updateAddress}\r\n                           className='mt-2 border-0 mb-2'\r\n                        >\r\n                           <Form.Group controlId='address'>\r\n                              <Form.Label as='p' className='mb-1 mt-2'>\r\n                                 <strong>Thành Phố / Tỉnh</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 placeholder='Enter address'\r\n                                 value={thanhPho}\r\n                                 onChange={(e) => setThanhPho(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>\r\n                                    Vui lòng chọn thành phố/tỉnh...\r\n                                 </option>\r\n                                 {data.map((tp) => (\r\n                                    <option\r\n                                       style={{ color: 'black' }}\r\n                                       key={tp.Id}\r\n                                       value={tp.Name}\r\n                                    >\r\n                                       {tp.Name}\r\n                                    </option>\r\n                                 ))}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='city'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong> Quận / Huyện</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 placeholder='Enter city'\r\n                                 value={huyen}\r\n                                 onChange={(e) => setHuyen(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>Vui lòng chọn quận/huyện...</option>\r\n                                 {data.map(\r\n                                    (a) =>\r\n                                       a.Name === thanhPho &&\r\n                                       a.Districts.map((b) => (\r\n                                          <option\r\n                                             key={b.Id}\r\n                                             style={{ color: 'black' }}\r\n                                             value={b.Name}\r\n                                          >\r\n                                             {b.Name}\r\n                                          </option>\r\n                                       ))\r\n                                 )}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='postalCode'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Phường / Xã</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 as='select'\r\n                                 required\r\n                                 placeholder='Enter postalCode'\r\n                                 value={xa}\r\n                                 onChange={(e) => setXa(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              >\r\n                                 <option>\r\n                                    Vui lòng chọn thành xã/phường...\r\n                                 </option>\r\n                                 {data.map(\r\n                                    (a) =>\r\n                                       a.Name === thanhPho &&\r\n                                       a.Districts.map(\r\n                                          (b) =>\r\n                                             b.Name === huyen &&\r\n                                             b.Wards.map((c) => (\r\n                                                <option\r\n                                                   style={{ color: 'black' }}\r\n                                                >\r\n                                                   {c.Name}\r\n                                                </option>\r\n                                             ))\r\n                                       )\r\n                                 )}\r\n                              </Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='country'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Địa chỉ chi tiết</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 placeholder='Enter country'\r\n                                 value={diaChi}\r\n                                 onChange={(e) => setDiachi(e.target.value)}\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              ></Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <Form.Group controlId='country'>\r\n                              <Form.Label as='p' className='mb-1'>\r\n                                 <strong>Số điện thoại</strong>\r\n                              </Form.Label>\r\n                              <Form.Control\r\n                                 type='text'\r\n                                 placeholder='Enter country'\r\n                                 value={formatPhoneNumber(numberPhone)}\r\n                                 onChange={(e) =>\r\n                                    setNumberPhone(e.target.value)\r\n                                 }\r\n                                 className='border-1 border-gray rounded-pill'\r\n                              ></Form.Control>\r\n                           </Form.Group>\r\n\r\n                           <div className='d-flex justify-content-center'>\r\n                              <Button\r\n                                 type='submit'\r\n                                 className='btn_color rounded-pill text-center'\r\n                                 style={{ width: '15rem' }}\r\n                              >\r\n                                 Cập nhật\r\n                              </Button>\r\n                           </div>\r\n                        </Form>\r\n                     </DialogContent>\r\n                  </Dialog>\r\n               </div>\r\n               <Container className='mt-4 mb-4 card_color shadow p-4'>\r\n                  <div\r\n                     className='text-center pb-3 d-flex justify-content-between align-items-center'\r\n                     style={{ borderBottom: '0.1rem solid #ddd' }}\r\n                  >\r\n                     <h4>Danh sách địa chỉ</h4>\r\n                     <Button\r\n                        className='btn_color_created rounded-pill'\r\n                        variant='outline-light'\r\n                        size='sm'\r\n                        onClick={handleClickOpen}\r\n                        disabled={user.address && user?.address.length === 5}\r\n                     >\r\n                        <i className='fas fa-plus pr-1'></i>Thêm địa chỉ mới\r\n                     </Button>\r\n                  </div>\r\n                  {user.address && user?.address.length === 5 && (\r\n                     <Announcement\r\n                        variant='warning'\r\n                        className='d-flex justify-content-center'\r\n                     >\r\n                        Danh sách địa chỉ đã đầy. Nếu bạn muốn thêm một địa chỉ\r\n                        mới, xin vui lòng xoá địa chỉ không cần thiết. Xin cảm\r\n                        ơn!\r\n                     </Announcement>\r\n                  )}\r\n                  {user.address?.map((add) => (\r\n                     <div\r\n                        className='p-3 mt-1 mb-1'\r\n                        style={{ borderBottom: '0.1rem solid #ddd' }}\r\n                     >\r\n                        <Row className='mb-2'>\r\n                           <Col md={3} className='d-flex align-items-center '>\r\n                              <strong>Số điện thoại</strong>\r\n                           </Col>\r\n                           <Col\r\n                              md={7}\r\n                              style={{ fontSize: '0.9rem' }}\r\n                              className='d-flex align-items-center'\r\n                           >\r\n                              {formatPhoneNumber(add.numberPhone)}\r\n                           </Col>\r\n                           <Col md={1} className='d-flex align-items-center '>\r\n                              <Link>\r\n                                 <Button\r\n                                    variant='outline-warning'\r\n                                    size='sm'\r\n                                    className='rounded-pill'\r\n                                    onClick={() => handleClickOpenEdit(add._id)}\r\n                                 >\r\n                                    Sửa\r\n                                 </Button>\r\n                              </Link>\r\n                           </Col>\r\n                           <Col md={1}>\r\n                              <Button\r\n                                 variant='outline-danger'\r\n                                 size='sm'\r\n                                 className='rounded-pill'\r\n                                 onClick={() => deleteAddress(add._id)}\r\n                              >\r\n                                 Xoá\r\n                              </Button>\r\n                           </Col>\r\n                        </Row>\r\n                        <Row className='button_select_default'>\r\n                           <Col md={3} className='d-flex align-items-center'>\r\n                              <strong>Địa chỉ liên hệ</strong>\r\n                           </Col>\r\n                           <Col\r\n                              md={7}\r\n                              style={{ fontSize: '0.9rem' }}\r\n                              className='d-flex align-items-center'\r\n                           >\r\n                              {add.diaChi} {' - '} {add.xa} {' - '} {add.huyen}{' '}\r\n                              {' - '}\r\n                              {add.thanhPho}.\r\n                           </Col>\r\n                           <Col md={2} className='text-center'>\r\n                              <Button\r\n                                 size='sm'\r\n                                 variant='outline-dark'\r\n                                 className='rounded-pill btn-block select_default'\r\n                                 disabled={add.role === true}\r\n                                 onClick={() => selectRole(add._id, true)}\r\n                              >\r\n                                 Thiết lập mặc định\r\n                              </Button>\r\n                           </Col>\r\n                        </Row>\r\n                     </div>\r\n                  ))}\r\n               </Container>\r\n            </>\r\n         )}\r\n         <Footer />\r\n      </>\r\n   )\r\n}\r\n\r\nexport default UsersAddressListScreen\r\n","F:\\Code\\shopPro\\frontend\\src\\actions\\subCategoryAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\subCategoryConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\reducers\\subCategoryReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SubCategoryListScreen.js",["589","590","591","592"],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SubCategoryEditScreen.js",["593","594","595","596","597"],"F:\\Code\\shopPro\\frontend\\src\\reducers\\saleReducer.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\saleConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SaleListScreen.js",["598","599","600"],"F:\\Code\\shopPro\\frontend\\src\\actions\\saleAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\SaleEditScreen.js",["601","602","603","604","605"],"F:\\Code\\shopPro\\frontend\\src\\reducers\\codeReducers.js",[],"F:\\Code\\shopPro\\frontend\\src\\constants\\codeConstants.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CodeListScreen.js",["606","607","608"],"F:\\Code\\shopPro\\frontend\\src\\actions\\codeAction.js",[],"F:\\Code\\shopPro\\frontend\\src\\screens\\admin\\CodeEditScreen.js",["609","610"],{"ruleId":"611","replacedBy":"612"},{"ruleId":"613","replacedBy":"614"},{"ruleId":"615","severity":1,"message":"616","line":54,"column":12,"nodeType":"617","messageId":"618","endLine":54,"endColumn":16},{"ruleId":"615","severity":1,"message":"619","line":22,"column":41,"nodeType":"617","messageId":"618","endLine":22,"endColumn":52},{"ruleId":"615","severity":1,"message":"620","line":32,"column":7,"nodeType":"617","messageId":"618","endLine":32,"endColumn":17},{"ruleId":"615","severity":1,"message":"621","line":52,"column":7,"nodeType":"617","messageId":"618","endLine":52,"endColumn":21},{"ruleId":"615","severity":1,"message":"622","line":107,"column":10,"nodeType":"617","messageId":"618","endLine":107,"endColumn":20},{"ruleId":"615","severity":1,"message":"623","line":109,"column":11,"nodeType":"617","messageId":"618","endLine":109,"endColumn":19},{"ruleId":"615","severity":1,"message":"624","line":112,"column":10,"nodeType":"617","messageId":"618","endLine":112,"endColumn":21},{"ruleId":"615","severity":1,"message":"625","line":116,"column":10,"nodeType":"617","messageId":"618","endLine":116,"endColumn":14},{"ruleId":"626","severity":1,"message":"627","line":119,"column":13,"nodeType":"628","endLine":119,"endColumn":46},{"ruleId":"626","severity":1,"message":"627","line":122,"column":13,"nodeType":"628","endLine":122,"endColumn":44},{"ruleId":"629","severity":1,"message":"630","line":183,"column":7,"nodeType":"631","endLine":183,"endColumn":29,"suggestions":"632"},{"ruleId":"615","severity":1,"message":"633","line":3,"column":15,"nodeType":"617","messageId":"618","endLine":3,"endColumn":24},{"ruleId":"615","severity":1,"message":"634","line":4,"column":10,"nodeType":"617","messageId":"618","endLine":4,"endColumn":23},{"ruleId":"615","severity":1,"message":"635","line":5,"column":22,"nodeType":"617","messageId":"618","endLine":5,"endColumn":32},{"ruleId":"615","severity":1,"message":"636","line":41,"column":7,"nodeType":"617","messageId":"618","endLine":41,"endColumn":18},{"ruleId":"615","severity":1,"message":"637","line":65,"column":7,"nodeType":"617","messageId":"618","endLine":65,"endColumn":20},{"ruleId":"615","severity":1,"message":"638","line":75,"column":10,"nodeType":"617","messageId":"618","endLine":75,"endColumn":25},{"ruleId":"615","severity":1,"message":"616","line":109,"column":12,"nodeType":"617","messageId":"618","endLine":109,"endColumn":16},{"ruleId":"615","severity":1,"message":"616","line":90,"column":12,"nodeType":"617","messageId":"618","endLine":90,"endColumn":16},{"ruleId":"615","severity":1,"message":"639","line":99,"column":12,"nodeType":"617","messageId":"618","endLine":99,"endColumn":16},{"ruleId":"615","severity":1,"message":"640","line":112,"column":8,"nodeType":"617","messageId":"618","endLine":112,"endColumn":16},{"ruleId":"615","severity":1,"message":"641","line":125,"column":13,"nodeType":"617","messageId":"618","endLine":125,"endColumn":21},{"ruleId":"615","severity":1,"message":"642","line":12,"column":17,"nodeType":"617","messageId":"618","endLine":12,"endColumn":27},{"ruleId":"615","severity":1,"message":"643","line":13,"column":15,"nodeType":"617","messageId":"618","endLine":13,"endColumn":23},{"ruleId":"615","severity":1,"message":"644","line":1,"column":10,"nodeType":"617","messageId":"618","endLine":1,"endColumn":14},{"ruleId":"615","severity":1,"message":"645","line":52,"column":12,"nodeType":"617","messageId":"618","endLine":52,"endColumn":19},{"ruleId":"615","severity":1,"message":"646","line":52,"column":21,"nodeType":"617","messageId":"618","endLine":52,"endColumn":26},{"ruleId":"615","severity":1,"message":"616","line":52,"column":28,"nodeType":"617","messageId":"618","endLine":52,"endColumn":32},{"ruleId":"615","severity":1,"message":"647","line":60,"column":11,"nodeType":"617","messageId":"618","endLine":60,"endColumn":16},{"ruleId":"615","severity":1,"message":"648","line":60,"column":18,"nodeType":"617","messageId":"618","endLine":60,"endColumn":26},{"ruleId":"615","severity":1,"message":"649","line":13,"column":7,"nodeType":"617","messageId":"618","endLine":13,"endColumn":18},{"ruleId":"615","severity":1,"message":"650","line":20,"column":11,"nodeType":"617","messageId":"618","endLine":20,"endColumn":15},{"ruleId":"615","severity":1,"message":"651","line":21,"column":11,"nodeType":"617","messageId":"618","endLine":21,"endColumn":15},{"ruleId":"615","severity":1,"message":"652","line":22,"column":11,"nodeType":"617","messageId":"618","endLine":22,"endColumn":17},{"ruleId":"615","severity":1,"message":"653","line":33,"column":17,"nodeType":"617","messageId":"618","endLine":33,"endColumn":22},{"ruleId":"654","severity":1,"message":"655","line":175,"column":10,"nodeType":"656","messageId":"657","endLine":175,"endColumn":14},{"ruleId":"654","severity":1,"message":"655","line":176,"column":10,"nodeType":"656","messageId":"657","endLine":176,"endColumn":14},{"ruleId":"615","severity":1,"message":"658","line":29,"column":10,"nodeType":"617","messageId":"618","endLine":29,"endColumn":17},{"ruleId":"615","severity":1,"message":"659","line":37,"column":11,"nodeType":"617","messageId":"618","endLine":37,"endColumn":20},{"ruleId":"615","severity":1,"message":"660","line":11,"column":8,"nodeType":"617","messageId":"618","endLine":11,"endColumn":30},{"ruleId":"615","severity":1,"message":"661","line":28,"column":8,"nodeType":"617","messageId":"618","endLine":28,"endColumn":14},{"ruleId":"615","severity":1,"message":"662","line":32,"column":8,"nodeType":"617","messageId":"618","endLine":32,"endColumn":12},{"ruleId":"615","severity":1,"message":"663","line":72,"column":20,"nodeType":"617","messageId":"618","endLine":72,"endColumn":30},{"ruleId":"615","severity":1,"message":"664","line":80,"column":10,"nodeType":"617","messageId":"618","endLine":80,"endColumn":17},{"ruleId":"615","severity":1,"message":"665","line":88,"column":21,"nodeType":"617","messageId":"618","endLine":88,"endColumn":34},{"ruleId":"666","severity":1,"message":"667","line":219,"column":13,"nodeType":"668","messageId":"669","endLine":229,"endColumn":14},{"ruleId":"629","severity":1,"message":"670","line":235,"column":7,"nodeType":"631","endLine":235,"endColumn":41,"suggestions":"671"},{"ruleId":"615","severity":1,"message":"672","line":6,"column":8,"nodeType":"617","messageId":"618","endLine":6,"endColumn":21},{"ruleId":"615","severity":1,"message":"662","line":9,"column":8,"nodeType":"617","messageId":"618","endLine":9,"endColumn":12},{"ruleId":"615","severity":1,"message":"673","line":14,"column":8,"nodeType":"617","messageId":"618","endLine":14,"endColumn":21},{"ruleId":"615","severity":1,"message":"645","line":34,"column":29,"nodeType":"617","messageId":"618","endLine":34,"endColumn":36},{"ruleId":"615","severity":1,"message":"674","line":37,"column":40,"nodeType":"617","messageId":"618","endLine":37,"endColumn":47},{"ruleId":"615","severity":1,"message":"675","line":48,"column":16,"nodeType":"617","messageId":"618","endLine":48,"endColumn":22},{"ruleId":"615","severity":1,"message":"676","line":49,"column":10,"nodeType":"617","messageId":"618","endLine":49,"endColumn":34},{"ruleId":"666","severity":1,"message":"667","line":93,"column":13,"nodeType":"668","messageId":"669","endLine":103,"endColumn":14},{"ruleId":"629","severity":1,"message":"670","line":107,"column":7,"nodeType":"631","endLine":107,"endColumn":32,"suggestions":"677"},{"ruleId":"611","replacedBy":"678"},{"ruleId":"613","replacedBy":"679"},{"ruleId":"615","severity":1,"message":"672","line":8,"column":8,"nodeType":"617","messageId":"618","endLine":8,"endColumn":21},{"ruleId":"615","severity":1,"message":"680","line":15,"column":4,"nodeType":"617","messageId":"618","endLine":15,"endColumn":22},{"ruleId":"615","severity":1,"message":"681","line":17,"column":8,"nodeType":"617","messageId":"618","endLine":17,"endColumn":24},{"ruleId":"615","severity":1,"message":"682","line":18,"column":10,"nodeType":"617","messageId":"618","endLine":18,"endColumn":15},{"ruleId":"629","severity":1,"message":"683","line":128,"column":7,"nodeType":"631","endLine":128,"endColumn":25,"suggestions":"684"},{"ruleId":"615","severity":1,"message":"685","line":21,"column":4,"nodeType":"617","messageId":"618","endLine":21,"endColumn":22},{"ruleId":"615","severity":1,"message":"680","line":23,"column":4,"nodeType":"617","messageId":"618","endLine":23,"endColumn":22},{"ruleId":"615","severity":1,"message":"686","line":57,"column":24,"nodeType":"617","messageId":"618","endLine":57,"endColumn":38},{"ruleId":"615","severity":1,"message":"687","line":69,"column":21,"nodeType":"617","messageId":"618","endLine":69,"endColumn":36},{"ruleId":"629","severity":1,"message":"688","line":123,"column":7,"nodeType":"631","endLine":123,"endColumn":78,"suggestions":"689"},{"ruleId":"615","severity":1,"message":"690","line":2,"column":24,"nodeType":"617","messageId":"618","endLine":2,"endColumn":29},{"ruleId":"615","severity":1,"message":"691","line":2,"column":31,"nodeType":"617","messageId":"618","endLine":2,"endColumn":41},{"ruleId":"615","severity":1,"message":"692","line":4,"column":10,"nodeType":"617","messageId":"618","endLine":4,"endColumn":20},{"ruleId":"615","severity":1,"message":"693","line":4,"column":22,"nodeType":"617","messageId":"618","endLine":4,"endColumn":31},{"ruleId":"615","severity":1,"message":"694","line":4,"column":33,"nodeType":"617","messageId":"618","endLine":4,"endColumn":38},{"ruleId":"611","replacedBy":"695"},{"ruleId":"613","replacedBy":"696"},{"ruleId":"615","severity":1,"message":"660","line":1,"column":8,"nodeType":"617","messageId":"618","endLine":1,"endColumn":30},{"ruleId":"615","severity":1,"message":"681","line":2,"column":8,"nodeType":"617","messageId":"618","endLine":2,"endColumn":24},{"ruleId":"615","severity":1,"message":"690","line":4,"column":23,"nodeType":"617","messageId":"618","endLine":4,"endColumn":28},{"ruleId":"615","severity":1,"message":"682","line":7,"column":10,"nodeType":"617","messageId":"618","endLine":7,"endColumn":15},{"ruleId":"615","severity":1,"message":"697","line":10,"column":10,"nodeType":"617","messageId":"618","endLine":10,"endColumn":24},{"ruleId":"615","severity":1,"message":"698","line":10,"column":26,"nodeType":"617","messageId":"618","endLine":10,"endColumn":43},{"ruleId":"615","severity":1,"message":"699","line":31,"column":8,"nodeType":"617","messageId":"618","endLine":31,"endColumn":16},{"ruleId":"615","severity":1,"message":"700","line":32,"column":8,"nodeType":"617","messageId":"618","endLine":32,"endColumn":18},{"ruleId":"615","severity":1,"message":"701","line":33,"column":8,"nodeType":"617","messageId":"618","endLine":33,"endColumn":15},{"ruleId":"615","severity":1,"message":"702","line":36,"column":8,"nodeType":"617","messageId":"618","endLine":36,"endColumn":18},{"ruleId":"615","severity":1,"message":"703","line":37,"column":8,"nodeType":"617","messageId":"618","endLine":37,"endColumn":22},{"ruleId":"615","severity":1,"message":"704","line":97,"column":7,"nodeType":"617","messageId":"618","endLine":97,"endColumn":23},{"ruleId":"615","severity":1,"message":"705","line":100,"column":7,"nodeType":"617","messageId":"618","endLine":100,"endColumn":18},{"ruleId":"615","severity":1,"message":"706","line":101,"column":7,"nodeType":"617","messageId":"618","endLine":101,"endColumn":15},{"ruleId":"615","severity":1,"message":"650","line":232,"column":11,"nodeType":"617","messageId":"618","endLine":232,"endColumn":15},{"ruleId":"615","severity":1,"message":"707","line":232,"column":17,"nodeType":"617","messageId":"618","endLine":232,"endColumn":24},{"ruleId":"615","severity":1,"message":"708","line":233,"column":11,"nodeType":"617","messageId":"618","endLine":233,"endColumn":16},{"ruleId":"615","severity":1,"message":"709","line":233,"column":18,"nodeType":"617","messageId":"618","endLine":233,"endColumn":26},{"ruleId":"615","severity":1,"message":"710","line":234,"column":11,"nodeType":"617","messageId":"618","endLine":234,"endColumn":19},{"ruleId":"615","severity":1,"message":"711","line":234,"column":21,"nodeType":"617","messageId":"618","endLine":234,"endColumn":32},{"ruleId":"615","severity":1,"message":"712","line":235,"column":11,"nodeType":"617","messageId":"618","endLine":235,"endColumn":26},{"ruleId":"615","severity":1,"message":"713","line":235,"column":28,"nodeType":"617","messageId":"618","endLine":235,"endColumn":46},{"ruleId":"615","severity":1,"message":"714","line":236,"column":11,"nodeType":"617","messageId":"618","endLine":236,"endColumn":18},{"ruleId":"615","severity":1,"message":"663","line":236,"column":20,"nodeType":"617","messageId":"618","endLine":236,"endColumn":30},{"ruleId":"615","severity":1,"message":"645","line":298,"column":12,"nodeType":"617","messageId":"618","endLine":298,"endColumn":19},{"ruleId":"615","severity":1,"message":"646","line":298,"column":21,"nodeType":"617","messageId":"618","endLine":298,"endColumn":26},{"ruleId":"615","severity":1,"message":"674","line":304,"column":12,"nodeType":"617","messageId":"618","endLine":304,"endColumn":19},{"ruleId":"615","severity":1,"message":"715","line":7,"column":8,"nodeType":"617","messageId":"618","endLine":7,"endColumn":20},{"ruleId":"615","severity":1,"message":"716","line":8,"column":8,"nodeType":"617","messageId":"618","endLine":8,"endColumn":20},{"ruleId":"615","severity":1,"message":"717","line":9,"column":8,"nodeType":"617","messageId":"618","endLine":9,"endColumn":22},{"ruleId":"615","severity":1,"message":"718","line":13,"column":17,"nodeType":"617","messageId":"618","endLine":13,"endColumn":26},{"ruleId":"615","severity":1,"message":"719","line":14,"column":10,"nodeType":"617","messageId":"618","endLine":14,"endColumn":21},{"ruleId":"615","severity":1,"message":"720","line":15,"column":10,"nodeType":"617","messageId":"618","endLine":15,"endColumn":13},{"ruleId":"615","severity":1,"message":"690","line":15,"column":15,"nodeType":"617","messageId":"618","endLine":15,"endColumn":20},{"ruleId":"615","severity":1,"message":"721","line":15,"column":22,"nodeType":"617","messageId":"618","endLine":15,"endColumn":31},{"ruleId":"615","severity":1,"message":"722","line":15,"column":33,"nodeType":"617","messageId":"618","endLine":15,"endColumn":36},{"ruleId":"615","severity":1,"message":"723","line":15,"column":38,"nodeType":"617","messageId":"618","endLine":15,"endColumn":44},{"ruleId":"615","severity":1,"message":"724","line":15,"column":46,"nodeType":"617","messageId":"618","endLine":15,"endColumn":50},{"ruleId":"615","severity":1,"message":"725","line":168,"column":10,"nodeType":"617","messageId":"618","endLine":168,"endColumn":20},{"ruleId":"615","severity":1,"message":"645","line":171,"column":18,"nodeType":"617","messageId":"618","endLine":171,"endColumn":25},{"ruleId":"615","severity":1,"message":"646","line":171,"column":27,"nodeType":"617","messageId":"618","endLine":171,"endColumn":32},{"ruleId":"615","severity":1,"message":"726","line":15,"column":8,"nodeType":"617","messageId":"618","endLine":15,"endColumn":15},{"ruleId":"615","severity":1,"message":"727","line":22,"column":4,"nodeType":"617","messageId":"618","endLine":22,"endColumn":33},{"ruleId":"615","severity":1,"message":"728","line":37,"column":10,"nodeType":"617","messageId":"618","endLine":37,"endColumn":17},{"ruleId":"615","severity":1,"message":"729","line":38,"column":10,"nodeType":"617","messageId":"618","endLine":38,"endColumn":20},{"ruleId":"615","severity":1,"message":"658","line":41,"column":10,"nodeType":"617","messageId":"618","endLine":41,"endColumn":17},{"ruleId":"615","severity":1,"message":"730","line":43,"column":10,"nodeType":"617","messageId":"618","endLine":43,"endColumn":22},{"ruleId":"615","severity":1,"message":"624","line":47,"column":10,"nodeType":"617","messageId":"618","endLine":47,"endColumn":21},{"ruleId":"615","severity":1,"message":"646","line":54,"column":21,"nodeType":"617","messageId":"618","endLine":54,"endColumn":26},{"ruleId":"615","severity":1,"message":"731","line":61,"column":14,"nodeType":"617","messageId":"618","endLine":61,"endColumn":22},{"ruleId":"615","severity":1,"message":"732","line":67,"column":16,"nodeType":"617","messageId":"618","endLine":67,"endColumn":26},{"ruleId":"615","severity":1,"message":"733","line":68,"column":16,"nodeType":"617","messageId":"618","endLine":68,"endColumn":26},{"ruleId":"615","severity":1,"message":"734","line":69,"column":7,"nodeType":"617","messageId":"618","endLine":69,"endColumn":15},{"ruleId":"615","severity":1,"message":"735","line":73,"column":12,"nodeType":"617","messageId":"618","endLine":73,"endColumn":18},{"ruleId":"615","severity":1,"message":"736","line":81,"column":16,"nodeType":"617","messageId":"618","endLine":81,"endColumn":29},{"ruleId":"615","severity":1,"message":"737","line":88,"column":16,"nodeType":"617","messageId":"618","endLine":88,"endColumn":32},{"ruleId":"615","severity":1,"message":"738","line":95,"column":16,"nodeType":"617","messageId":"618","endLine":95,"endColumn":34},{"ruleId":"629","severity":1,"message":"739","line":116,"column":7,"nodeType":"631","endLine":116,"endColumn":34,"suggestions":"740"},{"ruleId":"615","severity":1,"message":"658","line":69,"column":10,"nodeType":"617","messageId":"618","endLine":69,"endColumn":17},{"ruleId":"615","severity":1,"message":"741","line":122,"column":21,"nodeType":"617","messageId":"618","endLine":122,"endColumn":40},{"ruleId":"615","severity":1,"message":"742","line":22,"column":10,"nodeType":"617","messageId":"618","endLine":22,"endColumn":16},{"ruleId":"615","severity":1,"message":"620","line":40,"column":7,"nodeType":"617","messageId":"618","endLine":40,"endColumn":17},{"ruleId":"615","severity":1,"message":"621","line":60,"column":7,"nodeType":"617","messageId":"618","endLine":60,"endColumn":21},{"ruleId":"615","severity":1,"message":"623","line":121,"column":11,"nodeType":"617","messageId":"618","endLine":121,"endColumn":19},{"ruleId":"615","severity":1,"message":"743","line":122,"column":11,"nodeType":"617","messageId":"618","endLine":122,"endColumn":20},{"ruleId":"615","severity":1,"message":"744","line":122,"column":22,"nodeType":"617","messageId":"618","endLine":122,"endColumn":34},{"ruleId":"615","severity":1,"message":"745","line":125,"column":11,"nodeType":"617","messageId":"618","endLine":125,"endColumn":31},{"ruleId":"615","severity":1,"message":"746","line":126,"column":11,"nodeType":"617","messageId":"618","endLine":126,"endColumn":24},{"ruleId":"615","severity":1,"message":"747","line":127,"column":26,"nodeType":"617","messageId":"618","endLine":127,"endColumn":42},{"ruleId":"615","severity":1,"message":"624","line":130,"column":10,"nodeType":"617","messageId":"618","endLine":130,"endColumn":21},{"ruleId":"615","severity":1,"message":"748","line":143,"column":32,"nodeType":"617","messageId":"618","endLine":143,"endColumn":40},{"ruleId":"615","severity":1,"message":"749","line":208,"column":16,"nodeType":"617","messageId":"618","endLine":208,"endColumn":19},{"ruleId":"629","severity":1,"message":"750","line":239,"column":7,"nodeType":"631","endLine":239,"endColumn":14,"suggestions":"751"},{"ruleId":"629","severity":1,"message":"752","line":272,"column":7,"nodeType":"631","endLine":272,"endColumn":43,"suggestions":"753"},{"ruleId":"615","severity":1,"message":"754","line":290,"column":10,"nodeType":"617","messageId":"618","endLine":290,"endColumn":27},{"ruleId":"615","severity":1,"message":"755","line":264,"column":11,"nodeType":"617","messageId":"618","endLine":264,"endColumn":14},{"ruleId":"615","severity":1,"message":"756","line":292,"column":15,"nodeType":"617","messageId":"618","endLine":292,"endColumn":29},{"ruleId":"615","severity":1,"message":"755","line":310,"column":11,"nodeType":"617","messageId":"618","endLine":310,"endColumn":14},{"ruleId":"615","severity":1,"message":"729","line":251,"column":10,"nodeType":"617","messageId":"618","endLine":251,"endColumn":20},{"ruleId":"629","severity":1,"message":"757","line":293,"column":7,"nodeType":"631","endLine":293,"endColumn":66,"suggestions":"758"},{"ruleId":"615","severity":1,"message":"759","line":1,"column":8,"nodeType":"617","messageId":"618","endLine":1,"endColumn":13},{"ruleId":"615","severity":1,"message":"760","line":7,"column":10,"nodeType":"617","messageId":"618","endLine":7,"endColumn":26},{"ruleId":"615","severity":1,"message":"761","line":8,"column":25,"nodeType":"617","messageId":"618","endLine":8,"endColumn":35},{"ruleId":"615","severity":1,"message":"661","line":10,"column":8,"nodeType":"617","messageId":"618","endLine":10,"endColumn":14},{"ruleId":"615","severity":1,"message":"762","line":20,"column":10,"nodeType":"617","messageId":"618","endLine":20,"endColumn":21},{"ruleId":"615","severity":1,"message":"763","line":38,"column":11,"nodeType":"617","messageId":"618","endLine":38,"endColumn":24},{"ruleId":"615","severity":1,"message":"764","line":38,"column":26,"nodeType":"617","messageId":"618","endLine":38,"endColumn":42},{"ruleId":"615","severity":1,"message":"661","line":37,"column":8,"nodeType":"617","messageId":"618","endLine":37,"endColumn":14},{"ruleId":"615","severity":1,"message":"756","line":293,"column":17,"nodeType":"617","messageId":"618","endLine":293,"endColumn":31},{"ruleId":"615","severity":1,"message":"755","line":311,"column":13,"nodeType":"617","messageId":"618","endLine":311,"endColumn":16},{"ruleId":"615","severity":1,"message":"765","line":373,"column":10,"nodeType":"617","messageId":"618","endLine":373,"endColumn":30},{"ruleId":"615","severity":1,"message":"766","line":56,"column":10,"nodeType":"617","messageId":"618","endLine":56,"endColumn":23},{"ruleId":"615","severity":1,"message":"767","line":62,"column":10,"nodeType":"617","messageId":"618","endLine":62,"endColumn":20},{"ruleId":"615","severity":1,"message":"658","line":101,"column":7,"nodeType":"617","messageId":"618","endLine":101,"endColumn":14},{"ruleId":"615","severity":1,"message":"721","line":2,"column":40,"nodeType":"617","messageId":"618","endLine":2,"endColumn":49},{"ruleId":"615","severity":1,"message":"661","line":4,"column":8,"nodeType":"617","messageId":"618","endLine":4,"endColumn":14},{"ruleId":"615","severity":1,"message":"646","line":24,"column":21,"nodeType":"617","messageId":"618","endLine":24,"endColumn":26},{"ruleId":"615","severity":1,"message":"768","line":76,"column":21,"nodeType":"617","messageId":"618","endLine":76,"endColumn":31},{"ruleId":"615","severity":1,"message":"769","line":76,"column":42,"nodeType":"617","messageId":"618","endLine":76,"endColumn":52},{"ruleId":"629","severity":1,"message":"670","line":96,"column":7,"nodeType":"631","endLine":96,"endColumn":41,"suggestions":"770"},{"ruleId":"615","severity":1,"message":"759","line":1,"column":8,"nodeType":"617","messageId":"618","endLine":1,"endColumn":13},{"ruleId":"615","severity":1,"message":"771","line":5,"column":10,"nodeType":"617","messageId":"618","endLine":5,"endColumn":14},{"ruleId":"615","severity":1,"message":"760","line":16,"column":10,"nodeType":"617","messageId":"618","endLine":16,"endColumn":26},{"ruleId":"615","severity":1,"message":"661","line":9,"column":8,"nodeType":"617","messageId":"618","endLine":9,"endColumn":14},{"ruleId":"615","severity":1,"message":"646","line":25,"column":20,"nodeType":"617","messageId":"618","endLine":25,"endColumn":25},{"ruleId":"615","severity":1,"message":"771","line":5,"column":10,"nodeType":"617","messageId":"618","endLine":5,"endColumn":14},{"ruleId":"615","severity":1,"message":"672","line":7,"column":8,"nodeType":"617","messageId":"618","endLine":7,"endColumn":21},{"ruleId":"615","severity":1,"message":"646","line":33,"column":21,"nodeType":"617","messageId":"618","endLine":33,"endColumn":26},{"ruleId":"615","severity":1,"message":"772","line":6,"column":26,"nodeType":"617","messageId":"618","endLine":6,"endColumn":38},{"ruleId":"615","severity":1,"message":"773","line":20,"column":12,"nodeType":"617","messageId":"618","endLine":20,"endColumn":17},{"ruleId":"615","severity":1,"message":"774","line":23,"column":12,"nodeType":"617","messageId":"618","endLine":23,"endColumn":20},{"ruleId":"775","severity":1,"message":"776","line":33,"column":27,"nodeType":"777","messageId":"778","endLine":33,"endColumn":29},{"ruleId":"779","severity":1,"message":"780","line":34,"column":32,"nodeType":"781","messageId":"657","endLine":34,"endColumn":34},{"ruleId":"611","replacedBy":"782"},{"ruleId":"613","replacedBy":"783"},{"ruleId":"629","severity":1,"message":"670","line":110,"column":7,"nodeType":"631","endLine":117,"endColumn":5,"suggestions":"784"},{"ruleId":"615","severity":1,"message":"785","line":32,"column":4,"nodeType":"617","messageId":"618","endLine":32,"endColumn":18},{"ruleId":"615","severity":1,"message":"786","line":33,"column":4,"nodeType":"617","messageId":"618","endLine":33,"endColumn":18},{"ruleId":"615","severity":1,"message":"661","line":37,"column":8,"nodeType":"617","messageId":"618","endLine":37,"endColumn":14},{"ruleId":"615","severity":1,"message":"755","line":321,"column":13,"nodeType":"617","messageId":"618","endLine":321,"endColumn":16},{"ruleId":"615","severity":1,"message":"721","line":2,"column":40,"nodeType":"617","messageId":"618","endLine":2,"endColumn":49},{"ruleId":"615","severity":1,"message":"661","line":4,"column":8,"nodeType":"617","messageId":"618","endLine":4,"endColumn":14},{"ruleId":"615","severity":1,"message":"787","line":6,"column":4,"nodeType":"617","messageId":"618","endLine":6,"endColumn":22},{"ruleId":"615","severity":1,"message":"788","line":8,"column":4,"nodeType":"617","messageId":"618","endLine":8,"endColumn":18},{"ruleId":"615","severity":1,"message":"646","line":30,"column":21,"nodeType":"617","messageId":"618","endLine":30,"endColumn":26},{"ruleId":"615","severity":1,"message":"661","line":32,"column":8,"nodeType":"617","messageId":"618","endLine":32,"endColumn":14},{"ruleId":"615","severity":1,"message":"756","line":294,"column":13,"nodeType":"617","messageId":"618","endLine":294,"endColumn":27},{"ruleId":"615","severity":1,"message":"755","line":312,"column":13,"nodeType":"617","messageId":"618","endLine":312,"endColumn":16},{"ruleId":"615","severity":1,"message":"721","line":2,"column":40,"nodeType":"617","messageId":"618","endLine":2,"endColumn":49},{"ruleId":"615","severity":1,"message":"661","line":4,"column":8,"nodeType":"617","messageId":"618","endLine":4,"endColumn":14},{"ruleId":"615","severity":1,"message":"787","line":6,"column":4,"nodeType":"617","messageId":"618","endLine":6,"endColumn":22},{"ruleId":"615","severity":1,"message":"788","line":7,"column":4,"nodeType":"617","messageId":"618","endLine":7,"endColumn":18},{"ruleId":"615","severity":1,"message":"646","line":25,"column":21,"nodeType":"617","messageId":"618","endLine":25,"endColumn":26},{"ruleId":"615","severity":1,"message":"661","line":38,"column":8,"nodeType":"617","messageId":"618","endLine":38,"endColumn":14},{"ruleId":"615","severity":1,"message":"789","line":316,"column":13,"nodeType":"617","messageId":"618","endLine":316,"endColumn":24},{"ruleId":"615","severity":1,"message":"755","line":338,"column":13,"nodeType":"617","messageId":"618","endLine":338,"endColumn":16},{"ruleId":"615","severity":1,"message":"661","line":14,"column":8,"nodeType":"617","messageId":"618","endLine":14,"endColumn":14},{"ruleId":"615","severity":1,"message":"646","line":36,"column":21,"nodeType":"617","messageId":"618","endLine":36,"endColumn":26},"no-native-reassign",["790"],"no-negated-in-lhs",["791"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'StyledMenu' is assigned a value but never used.","'StyledMenuItem' is assigned a value but never used.","'anchorReff' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'menu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["792"],"'Container' is defined but never used.","'LinkContainer' is defined but never used.","'withStyles' is defined but never used.","'DialogTitle' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'sale' is assigned a value but never used.","'settings' is assigned a value but never used.","'onChange' is defined but never used.","'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","'Chip' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'firebaseApp' is assigned a value but never used.","'name' is assigned a value but never used.","'mail' is assigned a value but never used.","'avatar' is assigned a value but never used.","'token' is assigned a value but never used.","no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","'classes' is assigned a value but never used.","'uploading' is assigned a value but never used.","'CheckCircleOutlineIcon' is defined but never used.","'Loader' is defined but never used.","'data' is defined but never used.","'setMessage' is assigned a value but never used.","'address' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["793"],"'FormContainer' is defined but never used.","'DialogActions' is defined but never used.","'success' is assigned a value but never used.","'setAdd' is assigned a value but never used.","'updateInformationAddress' is assigned a value but never used.",["794"],["790"],["791"],"'ORDER_DETAIL_RESET' is defined but never used.","'ErrorOutlineIcon' is defined but never used.","'toast' is defined but never used.","React Hook useEffect has missing dependencies: 'cart.cartItems', 'dispatch', and 'order._id'. Either include them or remove the dependency array.",["795"],"'ORDER_CREATE_RESET' is defined but never used.","'setOrderStatus' is assigned a value but never used.","'loadingByMember' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["796"],"'Image' is defined but never used.","'InputGroup' is defined but never used.","'ButtonBase' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.",["790"],["791"],"'getUserDetails' is defined but never used.","'updateUserProfile' is defined but never used.","'Checkbox' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'DeleteIcon' is defined but never used.","'FilterListIcon' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'setName' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'GroupAddIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'VideoLabelIcon' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'activeStep' is assigned a value but never used.","'Message' is defined but never used.","'PRODUCT_OF_SUB_CATEGORY_RESET' is defined but never used.","'keyword' is assigned a value but never used.","'pageNumber' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'errorSub' is assigned a value but never used.","'loadingCat' is assigned a value but never used.","'successCat' is assigned a value but never used.","'category' is assigned a value but never used.","'subcat' is assigned a value but never used.","'successFilter' is assigned a value but never used.","'successSubFilter' is assigned a value but never used.","'successFilterPrice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'products.length'. Either include it or remove the dependency array.",["797"],"'productsFilterPrice' is assigned a value but never used.","'format' is defined but never used.","'anchorEl1' is assigned a value but never used.","'setAnchorEl1' is assigned a value but never used.","'loadingNotifications' is assigned a value but never used.","'notifications' is assigned a value but never used.","'setHasFirstFetch' is assigned a value but never used.","'userData' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["798"],"React Hook useEffect has missing dependencies: 'open', 'open1', and 'openNotification'. Either include them or remove the dependency array.",["799"],"'markAsReadHandler' is assigned a value but never used.","'did' is assigned a value but never used.","'createdProduct' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'categoryCat' and 'createdProduct._id'. Either include them or remove the dependency array.",["800"],"'axios' is defined but never used.","'deleteFileImages' is defined but never used.","'newProduct' is defined but never used.","'formatPrice' is defined but never used.","'imagesPreview' is assigned a value but never used.","'setImagesPreview' is assigned a value but never used.","'submitHandlerDetails' is assigned a value but never used.","'getComparator' is defined but never used.","'stableSort' is defined but never used.","'loadingPay' is assigned a value but never used.","'successPay' is assigned a value but never used.",["801"],"'Link' is defined but never used.","'listProducts' is defined but never used.","'order' is assigned a value but never used.","'supplier' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["790"],["791"],["802"],"'createCategory' is defined but never used.","'deleteCategory' is defined but never used.","'getCategoryDetails' is defined but never used.","'updateCategory' is defined but never used.","'createdCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"desc":"817","fix":"818"},{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},"Update the dependencies array to be: [open, userInfo, user, dispatch]",{"range":"825","text":"826"},"Update the dependencies array to be: [dispatch, history, success, user, userInfo]",{"range":"827","text":"828"},"Update the dependencies array to be: [dispatch, history, user, userInfo]",{"range":"829","text":"830"},"Update the dependencies array to be: [cart.cartItems, dispatch, history, order._id, success]",{"range":"831","text":"832"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, successByMember, order, userInfo, history]",{"range":"833","text":"834"},"Update the dependencies array to be: [dispatch, userInfo, catId, products.length]",{"range":"835","text":"836"},"Update the dependencies array to be: [history]",{"range":"837","text":"838"},"Update the dependencies array to be: [dispatch, notificationsCount, open, open1, openNotification, user]",{"range":"839","text":"840"},"Update the dependencies array to be: [dispatch, history, userInfo, successDelete, successCreate, categoryCat, createdProduct._id]",{"range":"841","text":"842"},"Update the dependencies array to be: [dispatch, orderId, successUpdate, userInfo]",{"range":"843","text":"844"},"Update the dependencies array to be: [history, dispatch, successDeleteAddress, successCreateAddress, successSelectRole, successUpdateAddress, userInfo]",{"range":"845","text":"846"},[5343,5365],"[open, userInfo, user, dispatch]",[7807,7841],"[dispatch, history, success, user, userInfo]",[3345,3370],"[dispatch, history, user, userInfo]",[4077,4095],"[cart.cartItems, dispatch, history, order._id, success]",[3889,3960],"[dispatch, orderId, successPay, successDeliver, successByMember, order, userInfo, history]",[3532,3559],"[dispatch, userInfo, catId, products.length]",[7099,7106],"[history]",[7867,7903],"[dispatch, notificationsCount, open, open1, openNotification, user]",[9646,9705],"[dispatch, history, userInfo, successDelete, successCreate, categoryCat, createdProduct._id]",[3041,3075],"[dispatch, orderId, successUpdate, userInfo]",[3348,3501],"[history, dispatch, successDeleteAddress, successCreateAddress, successSelectRole, successUpdateAddress, userInfo]"]